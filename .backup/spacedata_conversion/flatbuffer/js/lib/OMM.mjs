// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum {number}
 */
var referenceFrame = {
  /**
   * Earth Mean Equator and Equinox of J2000
   */
  EME2000: 0,

  /**
   *  Geocentric Celestial Reference Frame
   */
  GCRF: 1,

  /**
   * Greenwich Rotating Coordinates
   */
  GRC: 2,

  /**
   * International Celestial Reference Frame
   */
  ICRF: 3,

  /**
   * International Terrestrial Reference Frame 2000
   */
  ITRF2000: 4,

  /**
   * International Terrestrial Reference Frame 1993
   */
  ITRF93: 5,

  /**
   * International Terrestrial Reference Frame 1997
   */
  ITRF97: 6,

  /**
   * Mars Centered Inertial
   */
  MCI: 7,

  /**
   * True of Date, Rotating
   */
  TDR: 8,

  /**
   * True Equator Mean Equinox
   */
  TEME: 9,

  /**
   * True of Date
   */
  TOD: 10
};

/**
 * @enum {string}
 */
var referenceFrameName = {
  /**
   * Earth Mean Equator and Equinox of J2000
   */
  '0': 'EME2000',

  /**
   *  Geocentric Celestial Reference Frame
   */
  '1': 'GCRF',

  /**
   * Greenwich Rotating Coordinates
   */
  '2': 'GRC',

  /**
   * International Celestial Reference Frame
   */
  '3': 'ICRF',

  /**
   * International Terrestrial Reference Frame 2000
   */
  '4': 'ITRF2000',

  /**
   * International Terrestrial Reference Frame 1993
   */
  '5': 'ITRF93',

  /**
   * International Terrestrial Reference Frame 1997
   */
  '6': 'ITRF97',

  /**
   * Mars Centered Inertial
   */
  '7': 'MCI',

  /**
   * True of Date, Rotating
   */
  '8': 'TDR',

  /**
   * True Equator Mean Equinox
   */
  '9': 'TEME',

  /**
   * True of Date
   */
  '10': 'TOD'
};

/**
 * @enum {number}
 */
var ephemerisType = {
  /**
   * Simplified General Perturbation Model 
   */
  SGP: 0,

  /**
   * Simplified General Perturbation Model  4
   */
  SGP4: 1,

  /**
   * Simplified Deep Space Perturbation Model 4 
   */
  SDP4: 2,

  /**
   * Simplified General Perturbation Model 8
   */
  SGP8: 3,

  /**
   * Simplified Deep Space Perturbation Model 8
   */
  SDP8: 4
};

/**
 * @enum {string}
 */
var ephemerisTypeName = {
  /**
   * Simplified General Perturbation Model 
   */
  '0': 'SGP',

  /**
   * Simplified General Perturbation Model  4
   */
  '1': 'SGP4',

  /**
   * Simplified Deep Space Perturbation Model 4 
   */
  '2': 'SDP4',

  /**
   * Simplified General Perturbation Model 8
   */
  '3': 'SGP8',

  /**
   * Simplified Deep Space Perturbation Model 8
   */
  '4': 'SDP8'
};

/**
 * @enum {number}
 */
var timeSystem = {
  /**
   * Greenwich Mean Sidereal Time
   */
  GMST: 0,

  /**
   * Global Positioning System
   */
  GPS: 1,

  /**
   * Mission Elapsed Time
   */
  MET: 2,

  /**
   * Mission Relative Time
   */
  MRT: 3,

  /**
   * Spacecraft Clock (receiver) (requires rules for interpretation in ICD)
   */
  SCLK: 4,

  /**
   * International Atomic Time
   */
  TAI: 5,

  /**
   * Barycentric Coordinate Time
   */
  TCB: 6,

  /**
   * Barycentric Dynamical Time
   */
  TDB: 7,

  /**
   * Geocentric Coordinate Time
   */
  TCG: 8,

  /**
   * Terrestrial Time
   */
  TT: 9,

  /**
   * Universal Time
   */
  UT1: 10,

  /**
   * Coordinated Universal Time 
   */
  UTC: 11
};

/**
 * @enum {string}
 */
var timeSystemName = {
  /**
   * Greenwich Mean Sidereal Time
   */
  '0': 'GMST',

  /**
   * Global Positioning System
   */
  '1': 'GPS',

  /**
   * Mission Elapsed Time
   */
  '2': 'MET',

  /**
   * Mission Relative Time
   */
  '3': 'MRT',

  /**
   * Spacecraft Clock (receiver) (requires rules for interpretation in ICD)
   */
  '4': 'SCLK',

  /**
   * International Atomic Time
   */
  '5': 'TAI',

  /**
   * Barycentric Coordinate Time
   */
  '6': 'TCB',

  /**
   * Barycentric Dynamical Time
   */
  '7': 'TDB',

  /**
   * Geocentric Coordinate Time
   */
  '8': 'TCG',

  /**
   * Terrestrial Time
   */
  '9': 'TT',

  /**
   * Universal Time
   */
  '10': 'UT1',

  /**
   * Coordinated Universal Time 
   */
  '11': 'UTC'
};

/**
 * @enum {number}
 */
var meanElementTheory = {
  /**
   * Simplified General Perturbation Model  4
   */
  SGP4: 0,

  /**
   * Draper Semi-analytical Satellite Theory
   */
  DSST: 1,

  /**
   * Universal Semianalytical Method
   */
  USM: 2
};

/**
 * @enum {string}
 */
var meanElementTheoryName = {
  /**
   * Simplified General Perturbation Model  4
   */
  '0': 'SGP4',

  /**
   * Draper Semi-analytical Satellite Theory
   */
  '1': 'DSST',

  /**
   * Universal Semianalytical Method
   */
  '2': 'USM'
};

/**
 * @enum {number}
 */
var manCovRefFrame = {
  RSW: 0,
  RTN: 1,
  TNW: 2
};

/**
 * @enum {string}
 */
var manCovRefFrameName = {
  '0': 'RSW',
  '1': 'RTN',
  '2': 'TNW'
};

/**
 * @constructor
 */
function OMM() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {OMM}
 */
OMM.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {OMM=} obj
 * @returns {OMM}
 */
OMM.getRootAsOMM = function (bb, obj) {
  return (obj || new OMM).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {OMM=} obj
 * @returns {OMM}
 */
OMM.getSizePrefixedRootAsOMM = function (bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OMM).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
OMM.prototype.CCSDS_OMM_VERS = function () {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CCSDS_OMM_VERS = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.CREATION_DATE = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.ORIGINATOR = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.OBJECT_NAME = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.OBJECT_ID = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.CENTER_NAME = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {referenceFrame}
 */
OMM.prototype.REF_FRAME = function () {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? /** @type {referenceFrame} */ (this.bb.readInt8(this.bb_pos + offset)) : referenceFrame.TEME;
};

/**
 * @param {referenceFrame} value
 * @returns {boolean}
 */
OMM.prototype.mutate_REF_FRAME = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.REF_FRAME_EPOCH = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {timeSystem}
 */
OMM.prototype.TIME_SYSTEM = function () {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? /** @type {timeSystem} */ (this.bb.readInt8(this.bb_pos + offset)) : timeSystem.UTC;
};

/**
 * @param {timeSystem} value
 * @returns {boolean}
 */
OMM.prototype.mutate_TIME_SYSTEM = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {meanElementTheory}
 */
OMM.prototype.MEAN_ELEMENT_THEORY = function () {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? /** @type {meanElementTheory} */ (this.bb.readInt8(this.bb_pos + offset)) : meanElementTheory.SGP4;
};

/**
 * @param {meanElementTheory} value
 * @returns {boolean}
 */
OMM.prototype.mutate_MEAN_ELEMENT_THEORY = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 22);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.COMMENT = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.EPOCH = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
OMM.prototype.SEMI_MAJOR_AXIS = function () {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_SEMI_MAJOR_AXIS = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 28);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.MEAN_MOTION = function () {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_MEAN_MOTION = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 30);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.ECCENTRICITY = function () {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_ECCENTRICITY = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 32);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.INCLINATION = function () {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_INCLINATION = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 34);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.RA_OF_ASC_NODE = function () {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_RA_OF_ASC_NODE = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 36);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.ARG_OF_PERICENTER = function () {
  var offset = this.bb.__offset(this.bb_pos, 38);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_ARG_OF_PERICENTER = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 38);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.MEAN_ANOMALY = function () {
  var offset = this.bb.__offset(this.bb_pos, 40);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_MEAN_ANOMALY = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 40);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.GM = function () {
  var offset = this.bb.__offset(this.bb_pos, 42);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_GM = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 42);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.MASS = function () {
  var offset = this.bb.__offset(this.bb_pos, 44);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_MASS = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 44);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.SOLAR_RAD_AREA = function () {
  var offset = this.bb.__offset(this.bb_pos, 46);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_SOLAR_RAD_AREA = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 46);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.SOLAR_RAD_COEFF = function () {
  var offset = this.bb.__offset(this.bb_pos, 48);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_SOLAR_RAD_COEFF = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 48);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.DRAG_AREA = function () {
  var offset = this.bb.__offset(this.bb_pos, 50);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_DRAG_AREA = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 50);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.DRAG_COEFF = function () {
  var offset = this.bb.__offset(this.bb_pos, 52);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_DRAG_COEFF = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 52);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {ephemerisType}
 */
OMM.prototype.EPHEMERIS_TYPE = function () {
  var offset = this.bb.__offset(this.bb_pos, 54);
  return offset ? /** @type {ephemerisType} */ (this.bb.readInt8(this.bb_pos + offset)) : ephemerisType.SGP4;
};

/**
 * @param {ephemerisType} value
 * @returns {boolean}
 */
OMM.prototype.mutate_EPHEMERIS_TYPE = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 54);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.CLASSIFICATION_TYPE = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 56);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
OMM.prototype.NORAD_CAT_ID = function () {
  var offset = this.bb.__offset(this.bb_pos, 58);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_NORAD_CAT_ID = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 58);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.ELEMENT_SET_NO = function () {
  var offset = this.bb.__offset(this.bb_pos, 60);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_ELEMENT_SET_NO = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 60);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.REV_AT_EPOCH = function () {
  var offset = this.bb.__offset(this.bb_pos, 62);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_REV_AT_EPOCH = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 62);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.BSTAR = function () {
  var offset = this.bb.__offset(this.bb_pos, 64);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_BSTAR = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 64);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.MEAN_MOTION_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 66);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_MEAN_MOTION_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 66);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.MEAN_MOTION_DDOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 68);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_MEAN_MOTION_DDOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 68);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {manCovRefFrame}
 */
OMM.prototype.COV_REF_FRAME = function () {
  var offset = this.bb.__offset(this.bb_pos, 70);
  return offset ? /** @type {manCovRefFrame} */ (this.bb.readInt8(this.bb_pos + offset)) : manCovRefFrame.RSW;
};

/**
 * @param {manCovRefFrame} value
 * @returns {boolean}
 */
OMM.prototype.mutate_COV_REF_FRAME = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 70);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CX_X = function () {
  var offset = this.bb.__offset(this.bb_pos, 72);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CX_X = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 72);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_X = function () {
  var offset = this.bb.__offset(this.bb_pos, 74);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_X = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 74);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_Y = function () {
  var offset = this.bb.__offset(this.bb_pos, 76);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_Y = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 76);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_X = function () {
  var offset = this.bb.__offset(this.bb_pos, 78);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_X = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 78);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_Y = function () {
  var offset = this.bb.__offset(this.bb_pos, 80);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_Y = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 80);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_Z = function () {
  var offset = this.bb.__offset(this.bb_pos, 82);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_Z = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 82);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CX_DOT_X = function () {
  var offset = this.bb.__offset(this.bb_pos, 84);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CX_DOT_X = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 84);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CX_DOT_Y = function () {
  var offset = this.bb.__offset(this.bb_pos, 86);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CX_DOT_Y = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 86);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CX_DOT_Z = function () {
  var offset = this.bb.__offset(this.bb_pos, 88);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CX_DOT_Z = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 88);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CX_DOT_X_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 90);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CX_DOT_X_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 90);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_DOT_X = function () {
  var offset = this.bb.__offset(this.bb_pos, 92);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_DOT_X = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 92);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_DOT_Y = function () {
  var offset = this.bb.__offset(this.bb_pos, 94);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_DOT_Y = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 94);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_DOT_Z = function () {
  var offset = this.bb.__offset(this.bb_pos, 96);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_DOT_Z = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 96);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_DOT_X_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 98);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_DOT_X_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 98);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CY_DOT_Y_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 100);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CY_DOT_Y_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 100);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_DOT_X = function () {
  var offset = this.bb.__offset(this.bb_pos, 102);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_DOT_X = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 102);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_DOT_Y = function () {
  var offset = this.bb.__offset(this.bb_pos, 104);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_DOT_Y = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 104);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_DOT_Z = function () {
  var offset = this.bb.__offset(this.bb_pos, 106);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_DOT_Z = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 106);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_DOT_X_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 108);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_DOT_X_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 108);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_DOT_Y_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 110);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_DOT_Y_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 110);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.CZ_DOT_Z_DOT = function () {
  var offset = this.bb.__offset(this.bb_pos, 112);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_CZ_DOT_Z_DOT = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 112);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.USER_DEFINED_BIP_0044_TYPE = function () {
  var offset = this.bb.__offset(this.bb_pos, 114);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_USER_DEFINED_BIP_0044_TYPE = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 114);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.USER_DEFINED_OBJECT_DESIGNATOR = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 116);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
OMM.prototype.USER_DEFINED_EARTH_MODEL = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 118);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
OMM.prototype.USER_DEFINED_EPOCH_TIMESTAMP = function () {
  var offset = this.bb.__offset(this.bb_pos, 120);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_USER_DEFINED_EPOCH_TIMESTAMP = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 120);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
OMM.prototype.USER_DEFINED_MICROSECONDS = function () {
  var offset = this.bb.__offset(this.bb_pos, 122);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
OMM.prototype.mutate_USER_DEFINED_MICROSECONDS = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 122);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
OMM.startOMM = function (builder) {
  builder.startObject(60);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CCSDS_OMM_VERS
 */
OMM.addCCSDS_OMM_VERS = function (builder, CCSDS_OMM_VERS) {
  builder.addFieldFloat64(0, CCSDS_OMM_VERS, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CREATION_DATEOffset
 */
OMM.addCREATION_DATE = function (builder, CREATION_DATEOffset) {
  builder.addFieldOffset(1, CREATION_DATEOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ORIGINATOROffset
 */
OMM.addORIGINATOR = function (builder, ORIGINATOROffset) {
  builder.addFieldOffset(2, ORIGINATOROffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} OBJECT_NAMEOffset
 */
OMM.addOBJECT_NAME = function (builder, OBJECT_NAMEOffset) {
  builder.addFieldOffset(3, OBJECT_NAMEOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} OBJECT_IDOffset
 */
OMM.addOBJECT_ID = function (builder, OBJECT_IDOffset) {
  builder.addFieldOffset(4, OBJECT_IDOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CENTER_NAMEOffset
 */
OMM.addCENTER_NAME = function (builder, CENTER_NAMEOffset) {
  builder.addFieldOffset(5, CENTER_NAMEOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {referenceFrame} REF_FRAME
 */
OMM.addREF_FRAME = function (builder, REF_FRAME) {
  builder.addFieldInt8(6, REF_FRAME, referenceFrame.TEME);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} REF_FRAME_EPOCHOffset
 */
OMM.addREF_FRAME_EPOCH = function (builder, REF_FRAME_EPOCHOffset) {
  builder.addFieldOffset(7, REF_FRAME_EPOCHOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {timeSystem} TIME_SYSTEM
 */
OMM.addTIME_SYSTEM = function (builder, TIME_SYSTEM) {
  builder.addFieldInt8(8, TIME_SYSTEM, timeSystem.UTC);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {meanElementTheory} MEAN_ELEMENT_THEORY
 */
OMM.addMEAN_ELEMENT_THEORY = function (builder, MEAN_ELEMENT_THEORY) {
  builder.addFieldInt8(9, MEAN_ELEMENT_THEORY, meanElementTheory.SGP4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} COMMENTOffset
 */
OMM.addCOMMENT = function (builder, COMMENTOffset) {
  builder.addFieldOffset(10, COMMENTOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} EPOCHOffset
 */
OMM.addEPOCH = function (builder, EPOCHOffset) {
  builder.addFieldOffset(11, EPOCHOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SEMI_MAJOR_AXIS
 */
OMM.addSEMI_MAJOR_AXIS = function (builder, SEMI_MAJOR_AXIS) {
  builder.addFieldFloat64(12, SEMI_MAJOR_AXIS, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_MOTION
 */
OMM.addMEAN_MOTION = function (builder, MEAN_MOTION) {
  builder.addFieldFloat64(13, MEAN_MOTION, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ECCENTRICITY
 */
OMM.addECCENTRICITY = function (builder, ECCENTRICITY) {
  builder.addFieldFloat64(14, ECCENTRICITY, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} INCLINATION
 */
OMM.addINCLINATION = function (builder, INCLINATION) {
  builder.addFieldFloat64(15, INCLINATION, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} RA_OF_ASC_NODE
 */
OMM.addRA_OF_ASC_NODE = function (builder, RA_OF_ASC_NODE) {
  builder.addFieldFloat64(16, RA_OF_ASC_NODE, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ARG_OF_PERICENTER
 */
OMM.addARG_OF_PERICENTER = function (builder, ARG_OF_PERICENTER) {
  builder.addFieldFloat64(17, ARG_OF_PERICENTER, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_ANOMALY
 */
OMM.addMEAN_ANOMALY = function (builder, MEAN_ANOMALY) {
  builder.addFieldFloat64(18, MEAN_ANOMALY, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} GM
 */
OMM.addGM = function (builder, GM) {
  builder.addFieldFloat64(19, GM, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MASS
 */
OMM.addMASS = function (builder, MASS) {
  builder.addFieldFloat64(20, MASS, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SOLAR_RAD_AREA
 */
OMM.addSOLAR_RAD_AREA = function (builder, SOLAR_RAD_AREA) {
  builder.addFieldFloat64(21, SOLAR_RAD_AREA, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SOLAR_RAD_COEFF
 */
OMM.addSOLAR_RAD_COEFF = function (builder, SOLAR_RAD_COEFF) {
  builder.addFieldFloat64(22, SOLAR_RAD_COEFF, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} DRAG_AREA
 */
OMM.addDRAG_AREA = function (builder, DRAG_AREA) {
  builder.addFieldFloat64(23, DRAG_AREA, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} DRAG_COEFF
 */
OMM.addDRAG_COEFF = function (builder, DRAG_COEFF) {
  builder.addFieldFloat64(24, DRAG_COEFF, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ephemerisType} EPHEMERIS_TYPE
 */
OMM.addEPHEMERIS_TYPE = function (builder, EPHEMERIS_TYPE) {
  builder.addFieldInt8(25, EPHEMERIS_TYPE, ephemerisType.SGP4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CLASSIFICATION_TYPEOffset
 */
OMM.addCLASSIFICATION_TYPE = function (builder, CLASSIFICATION_TYPEOffset) {
  builder.addFieldOffset(26, CLASSIFICATION_TYPEOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} NORAD_CAT_ID
 */
OMM.addNORAD_CAT_ID = function (builder, NORAD_CAT_ID) {
  builder.addFieldInt32(27, NORAD_CAT_ID, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ELEMENT_SET_NO
 */
OMM.addELEMENT_SET_NO = function (builder, ELEMENT_SET_NO) {
  builder.addFieldInt32(28, ELEMENT_SET_NO, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} REV_AT_EPOCH
 */
OMM.addREV_AT_EPOCH = function (builder, REV_AT_EPOCH) {
  builder.addFieldFloat64(29, REV_AT_EPOCH, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} BSTAR
 */
OMM.addBSTAR = function (builder, BSTAR) {
  builder.addFieldFloat64(30, BSTAR, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_MOTION_DOT
 */
OMM.addMEAN_MOTION_DOT = function (builder, MEAN_MOTION_DOT) {
  builder.addFieldFloat64(31, MEAN_MOTION_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_MOTION_DDOT
 */
OMM.addMEAN_MOTION_DDOT = function (builder, MEAN_MOTION_DDOT) {
  builder.addFieldFloat64(32, MEAN_MOTION_DDOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {manCovRefFrame} COV_REF_FRAME
 */
OMM.addCOV_REF_FRAME = function (builder, COV_REF_FRAME) {
  builder.addFieldInt8(33, COV_REF_FRAME, manCovRefFrame.RSW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CX_X
 */
OMM.addCX_X = function (builder, CX_X) {
  builder.addFieldFloat64(34, CX_X, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_X
 */
OMM.addCY_X = function (builder, CY_X) {
  builder.addFieldFloat64(35, CY_X, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_Y
 */
OMM.addCY_Y = function (builder, CY_Y) {
  builder.addFieldFloat64(36, CY_Y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_X
 */
OMM.addCZ_X = function (builder, CZ_X) {
  builder.addFieldFloat64(37, CZ_X, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_Y
 */
OMM.addCZ_Y = function (builder, CZ_Y) {
  builder.addFieldFloat64(38, CZ_Y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_Z
 */
OMM.addCZ_Z = function (builder, CZ_Z) {
  builder.addFieldFloat64(39, CZ_Z, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CX_DOT_X
 */
OMM.addCX_DOT_X = function (builder, CX_DOT_X) {
  builder.addFieldFloat64(40, CX_DOT_X, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CX_DOT_Y
 */
OMM.addCX_DOT_Y = function (builder, CX_DOT_Y) {
  builder.addFieldFloat64(41, CX_DOT_Y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CX_DOT_Z
 */
OMM.addCX_DOT_Z = function (builder, CX_DOT_Z) {
  builder.addFieldFloat64(42, CX_DOT_Z, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CX_DOT_X_DOT
 */
OMM.addCX_DOT_X_DOT = function (builder, CX_DOT_X_DOT) {
  builder.addFieldFloat64(43, CX_DOT_X_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_DOT_X
 */
OMM.addCY_DOT_X = function (builder, CY_DOT_X) {
  builder.addFieldFloat64(44, CY_DOT_X, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_DOT_Y
 */
OMM.addCY_DOT_Y = function (builder, CY_DOT_Y) {
  builder.addFieldFloat64(45, CY_DOT_Y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_DOT_Z
 */
OMM.addCY_DOT_Z = function (builder, CY_DOT_Z) {
  builder.addFieldFloat64(46, CY_DOT_Z, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_DOT_X_DOT
 */
OMM.addCY_DOT_X_DOT = function (builder, CY_DOT_X_DOT) {
  builder.addFieldFloat64(47, CY_DOT_X_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CY_DOT_Y_DOT
 */
OMM.addCY_DOT_Y_DOT = function (builder, CY_DOT_Y_DOT) {
  builder.addFieldFloat64(48, CY_DOT_Y_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_DOT_X
 */
OMM.addCZ_DOT_X = function (builder, CZ_DOT_X) {
  builder.addFieldFloat64(49, CZ_DOT_X, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_DOT_Y
 */
OMM.addCZ_DOT_Y = function (builder, CZ_DOT_Y) {
  builder.addFieldFloat64(50, CZ_DOT_Y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_DOT_Z
 */
OMM.addCZ_DOT_Z = function (builder, CZ_DOT_Z) {
  builder.addFieldFloat64(51, CZ_DOT_Z, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_DOT_X_DOT
 */
OMM.addCZ_DOT_X_DOT = function (builder, CZ_DOT_X_DOT) {
  builder.addFieldFloat64(52, CZ_DOT_X_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_DOT_Y_DOT
 */
OMM.addCZ_DOT_Y_DOT = function (builder, CZ_DOT_Y_DOT) {
  builder.addFieldFloat64(53, CZ_DOT_Y_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CZ_DOT_Z_DOT
 */
OMM.addCZ_DOT_Z_DOT = function (builder, CZ_DOT_Z_DOT) {
  builder.addFieldFloat64(54, CZ_DOT_Z_DOT, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} USER_DEFINED_BIP_0044_TYPE
 */
OMM.addUSER_DEFINED_BIP_0044_TYPE = function (builder, USER_DEFINED_BIP_0044_TYPE) {
  builder.addFieldInt32(55, USER_DEFINED_BIP_0044_TYPE, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} USER_DEFINED_OBJECT_DESIGNATOROffset
 */
OMM.addUSER_DEFINED_OBJECT_DESIGNATOR = function (builder, USER_DEFINED_OBJECT_DESIGNATOROffset) {
  builder.addFieldOffset(56, USER_DEFINED_OBJECT_DESIGNATOROffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} USER_DEFINED_EARTH_MODELOffset
 */
OMM.addUSER_DEFINED_EARTH_MODEL = function (builder, USER_DEFINED_EARTH_MODELOffset) {
  builder.addFieldOffset(57, USER_DEFINED_EARTH_MODELOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} USER_DEFINED_EPOCH_TIMESTAMP
 */
OMM.addUSER_DEFINED_EPOCH_TIMESTAMP = function (builder, USER_DEFINED_EPOCH_TIMESTAMP) {
  builder.addFieldFloat64(58, USER_DEFINED_EPOCH_TIMESTAMP, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} USER_DEFINED_MICROSECONDS
 */
OMM.addUSER_DEFINED_MICROSECONDS = function (builder, USER_DEFINED_MICROSECONDS) {
  builder.addFieldFloat64(59, USER_DEFINED_MICROSECONDS, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
OMM.endOMM = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
OMM.finishOMMBuffer = function (builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
OMM.finishSizePrefixedOMMBuffer = function (builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} CCSDS_OMM_VERS
 * @param {flatbuffers.Offset} CREATION_DATEOffset
 * @param {flatbuffers.Offset} ORIGINATOROffset
 * @param {flatbuffers.Offset} OBJECT_NAMEOffset
 * @param {flatbuffers.Offset} OBJECT_IDOffset
 * @param {flatbuffers.Offset} CENTER_NAMEOffset
 * @param {referenceFrame} REF_FRAME
 * @param {flatbuffers.Offset} REF_FRAME_EPOCHOffset
 * @param {timeSystem} TIME_SYSTEM
 * @param {meanElementTheory} MEAN_ELEMENT_THEORY
 * @param {flatbuffers.Offset} COMMENTOffset
 * @param {flatbuffers.Offset} EPOCHOffset
 * @param {number} SEMI_MAJOR_AXIS
 * @param {number} MEAN_MOTION
 * @param {number} ECCENTRICITY
 * @param {number} INCLINATION
 * @param {number} RA_OF_ASC_NODE
 * @param {number} ARG_OF_PERICENTER
 * @param {number} MEAN_ANOMALY
 * @param {number} GM
 * @param {number} MASS
 * @param {number} SOLAR_RAD_AREA
 * @param {number} SOLAR_RAD_COEFF
 * @param {number} DRAG_AREA
 * @param {number} DRAG_COEFF
 * @param {ephemerisType} EPHEMERIS_TYPE
 * @param {flatbuffers.Offset} CLASSIFICATION_TYPEOffset
 * @param {number} NORAD_CAT_ID
 * @param {number} ELEMENT_SET_NO
 * @param {number} REV_AT_EPOCH
 * @param {number} BSTAR
 * @param {number} MEAN_MOTION_DOT
 * @param {number} MEAN_MOTION_DDOT
 * @param {manCovRefFrame} COV_REF_FRAME
 * @param {number} CX_X
 * @param {number} CY_X
 * @param {number} CY_Y
 * @param {number} CZ_X
 * @param {number} CZ_Y
 * @param {number} CZ_Z
 * @param {number} CX_DOT_X
 * @param {number} CX_DOT_Y
 * @param {number} CX_DOT_Z
 * @param {number} CX_DOT_X_DOT
 * @param {number} CY_DOT_X
 * @param {number} CY_DOT_Y
 * @param {number} CY_DOT_Z
 * @param {number} CY_DOT_X_DOT
 * @param {number} CY_DOT_Y_DOT
 * @param {number} CZ_DOT_X
 * @param {number} CZ_DOT_Y
 * @param {number} CZ_DOT_Z
 * @param {number} CZ_DOT_X_DOT
 * @param {number} CZ_DOT_Y_DOT
 * @param {number} CZ_DOT_Z_DOT
 * @param {number} USER_DEFINED_BIP_0044_TYPE
 * @param {flatbuffers.Offset} USER_DEFINED_OBJECT_DESIGNATOROffset
 * @param {flatbuffers.Offset} USER_DEFINED_EARTH_MODELOffset
 * @param {number} USER_DEFINED_EPOCH_TIMESTAMP
 * @param {number} USER_DEFINED_MICROSECONDS
 * @returns {flatbuffers.Offset}
 */
OMM.createOMM = function (builder, CCSDS_OMM_VERS, CREATION_DATEOffset, ORIGINATOROffset, OBJECT_NAMEOffset, OBJECT_IDOffset, CENTER_NAMEOffset, REF_FRAME, REF_FRAME_EPOCHOffset, TIME_SYSTEM, MEAN_ELEMENT_THEORY, COMMENTOffset, EPOCHOffset, SEMI_MAJOR_AXIS, MEAN_MOTION, ECCENTRICITY, INCLINATION, RA_OF_ASC_NODE, ARG_OF_PERICENTER, MEAN_ANOMALY, GM, MASS, SOLAR_RAD_AREA, SOLAR_RAD_COEFF, DRAG_AREA, DRAG_COEFF, EPHEMERIS_TYPE, CLASSIFICATION_TYPEOffset, NORAD_CAT_ID, ELEMENT_SET_NO, REV_AT_EPOCH, BSTAR, MEAN_MOTION_DOT, MEAN_MOTION_DDOT, COV_REF_FRAME, CX_X, CY_X, CY_Y, CZ_X, CZ_Y, CZ_Z, CX_DOT_X, CX_DOT_Y, CX_DOT_Z, CX_DOT_X_DOT, CY_DOT_X, CY_DOT_Y, CY_DOT_Z, CY_DOT_X_DOT, CY_DOT_Y_DOT, CZ_DOT_X, CZ_DOT_Y, CZ_DOT_Z, CZ_DOT_X_DOT, CZ_DOT_Y_DOT, CZ_DOT_Z_DOT, USER_DEFINED_BIP_0044_TYPE, USER_DEFINED_OBJECT_DESIGNATOROffset, USER_DEFINED_EARTH_MODELOffset, USER_DEFINED_EPOCH_TIMESTAMP, USER_DEFINED_MICROSECONDS) {
  OMM.startOMM(builder);
  OMM.addCCSDS_OMM_VERS(builder, CCSDS_OMM_VERS);
  OMM.addCREATION_DATE(builder, CREATION_DATEOffset);
  OMM.addORIGINATOR(builder, ORIGINATOROffset);
  OMM.addOBJECT_NAME(builder, OBJECT_NAMEOffset);
  OMM.addOBJECT_ID(builder, OBJECT_IDOffset);
  OMM.addCENTER_NAME(builder, CENTER_NAMEOffset);
  OMM.addREF_FRAME(builder, REF_FRAME);
  OMM.addREF_FRAME_EPOCH(builder, REF_FRAME_EPOCHOffset);
  OMM.addTIME_SYSTEM(builder, TIME_SYSTEM);
  OMM.addMEAN_ELEMENT_THEORY(builder, MEAN_ELEMENT_THEORY);
  OMM.addCOMMENT(builder, COMMENTOffset);
  OMM.addEPOCH(builder, EPOCHOffset);
  OMM.addSEMI_MAJOR_AXIS(builder, SEMI_MAJOR_AXIS);
  OMM.addMEAN_MOTION(builder, MEAN_MOTION);
  OMM.addECCENTRICITY(builder, ECCENTRICITY);
  OMM.addINCLINATION(builder, INCLINATION);
  OMM.addRA_OF_ASC_NODE(builder, RA_OF_ASC_NODE);
  OMM.addARG_OF_PERICENTER(builder, ARG_OF_PERICENTER);
  OMM.addMEAN_ANOMALY(builder, MEAN_ANOMALY);
  OMM.addGM(builder, GM);
  OMM.addMASS(builder, MASS);
  OMM.addSOLAR_RAD_AREA(builder, SOLAR_RAD_AREA);
  OMM.addSOLAR_RAD_COEFF(builder, SOLAR_RAD_COEFF);
  OMM.addDRAG_AREA(builder, DRAG_AREA);
  OMM.addDRAG_COEFF(builder, DRAG_COEFF);
  OMM.addEPHEMERIS_TYPE(builder, EPHEMERIS_TYPE);
  OMM.addCLASSIFICATION_TYPE(builder, CLASSIFICATION_TYPEOffset);
  OMM.addNORAD_CAT_ID(builder, NORAD_CAT_ID);
  OMM.addELEMENT_SET_NO(builder, ELEMENT_SET_NO);
  OMM.addREV_AT_EPOCH(builder, REV_AT_EPOCH);
  OMM.addBSTAR(builder, BSTAR);
  OMM.addMEAN_MOTION_DOT(builder, MEAN_MOTION_DOT);
  OMM.addMEAN_MOTION_DDOT(builder, MEAN_MOTION_DDOT);
  OMM.addCOV_REF_FRAME(builder, COV_REF_FRAME);
  OMM.addCX_X(builder, CX_X);
  OMM.addCY_X(builder, CY_X);
  OMM.addCY_Y(builder, CY_Y);
  OMM.addCZ_X(builder, CZ_X);
  OMM.addCZ_Y(builder, CZ_Y);
  OMM.addCZ_Z(builder, CZ_Z);
  OMM.addCX_DOT_X(builder, CX_DOT_X);
  OMM.addCX_DOT_Y(builder, CX_DOT_Y);
  OMM.addCX_DOT_Z(builder, CX_DOT_Z);
  OMM.addCX_DOT_X_DOT(builder, CX_DOT_X_DOT);
  OMM.addCY_DOT_X(builder, CY_DOT_X);
  OMM.addCY_DOT_Y(builder, CY_DOT_Y);
  OMM.addCY_DOT_Z(builder, CY_DOT_Z);
  OMM.addCY_DOT_X_DOT(builder, CY_DOT_X_DOT);
  OMM.addCY_DOT_Y_DOT(builder, CY_DOT_Y_DOT);
  OMM.addCZ_DOT_X(builder, CZ_DOT_X);
  OMM.addCZ_DOT_Y(builder, CZ_DOT_Y);
  OMM.addCZ_DOT_Z(builder, CZ_DOT_Z);
  OMM.addCZ_DOT_X_DOT(builder, CZ_DOT_X_DOT);
  OMM.addCZ_DOT_Y_DOT(builder, CZ_DOT_Y_DOT);
  OMM.addCZ_DOT_Z_DOT(builder, CZ_DOT_Z_DOT);
  OMM.addUSER_DEFINED_BIP_0044_TYPE(builder, USER_DEFINED_BIP_0044_TYPE);
  OMM.addUSER_DEFINED_OBJECT_DESIGNATOR(builder, USER_DEFINED_OBJECT_DESIGNATOROffset);
  OMM.addUSER_DEFINED_EARTH_MODEL(builder, USER_DEFINED_EARTH_MODELOffset);
  OMM.addUSER_DEFINED_EPOCH_TIMESTAMP(builder, USER_DEFINED_EPOCH_TIMESTAMP);
  OMM.addUSER_DEFINED_MICROSECONDS(builder, USER_DEFINED_MICROSECONDS);
  return OMM.endOMM(builder);
}

/**
 * @constructor
 */
function MPE() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {MPE}
 */
MPE.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MPE=} obj
 * @returns {MPE}
 */
MPE.getRootAsMPE = function (bb, obj) {
  return (obj || new MPE).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MPE=} obj
 * @returns {MPE}
 */
MPE.getSizePrefixedRootAsMPE = function (bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MPE).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
MPE.prototype.MEAN_MOTION = function () {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_MEAN_MOTION = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.ECCENTRICITY = function () {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_ECCENTRICITY = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.INCLINATION = function () {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_INCLINATION = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.RA_OF_ASC_NODE = function () {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_RA_OF_ASC_NODE = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.MEAN_ANOMALY = function () {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_MEAN_ANOMALY = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.NORAD_CAT_ID = function () {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_NORAD_CAT_ID = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.BSTAR = function () {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_BSTAR = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
MPE.prototype.USER_DEFINED_EPOCH_TIMESTAMP = function () {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
MPE.prototype.mutate_USER_DEFINED_EPOCH_TIMESTAMP = function (value) {
  var offset = this.bb.__offset(this.bb_pos, 18);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
MPE.startMPE = function (builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_MOTION
 */
MPE.addMEAN_MOTION = function (builder, MEAN_MOTION) {
  builder.addFieldFloat64(0, MEAN_MOTION, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ECCENTRICITY
 */
MPE.addECCENTRICITY = function (builder, ECCENTRICITY) {
  builder.addFieldFloat64(1, ECCENTRICITY, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} INCLINATION
 */
MPE.addINCLINATION = function (builder, INCLINATION) {
  builder.addFieldFloat64(2, INCLINATION, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} RA_OF_ASC_NODE
 */
MPE.addRA_OF_ASC_NODE = function (builder, RA_OF_ASC_NODE) {
  builder.addFieldFloat64(3, RA_OF_ASC_NODE, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_ANOMALY
 */
MPE.addMEAN_ANOMALY = function (builder, MEAN_ANOMALY) {
  builder.addFieldFloat64(4, MEAN_ANOMALY, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} NORAD_CAT_ID
 */
MPE.addNORAD_CAT_ID = function (builder, NORAD_CAT_ID) {
  builder.addFieldInt32(5, NORAD_CAT_ID, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} BSTAR
 */
MPE.addBSTAR = function (builder, BSTAR) {
  builder.addFieldFloat64(6, BSTAR, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} USER_DEFINED_EPOCH_TIMESTAMP
 */
MPE.addUSER_DEFINED_EPOCH_TIMESTAMP = function (builder, USER_DEFINED_EPOCH_TIMESTAMP) {
  builder.addFieldFloat64(7, USER_DEFINED_EPOCH_TIMESTAMP, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
MPE.endMPE = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MEAN_MOTION
 * @param {number} ECCENTRICITY
 * @param {number} INCLINATION
 * @param {number} RA_OF_ASC_NODE
 * @param {number} MEAN_ANOMALY
 * @param {number} NORAD_CAT_ID
 * @param {number} BSTAR
 * @param {number} USER_DEFINED_EPOCH_TIMESTAMP
 * @returns {flatbuffers.Offset}
 */
MPE.createMPE = function (builder, MEAN_MOTION, ECCENTRICITY, INCLINATION, RA_OF_ASC_NODE, MEAN_ANOMALY, NORAD_CAT_ID, BSTAR, USER_DEFINED_EPOCH_TIMESTAMP) {
  MPE.startMPE(builder);
  MPE.addMEAN_MOTION(builder, MEAN_MOTION);
  MPE.addECCENTRICITY(builder, ECCENTRICITY);
  MPE.addINCLINATION(builder, INCLINATION);
  MPE.addRA_OF_ASC_NODE(builder, RA_OF_ASC_NODE);
  MPE.addMEAN_ANOMALY(builder, MEAN_ANOMALY);
  MPE.addNORAD_CAT_ID(builder, NORAD_CAT_ID);
  MPE.addBSTAR(builder, BSTAR);
  MPE.addUSER_DEFINED_EPOCH_TIMESTAMP(builder, USER_DEFINED_EPOCH_TIMESTAMP);
  return MPE.endMPE(builder);
}

/**
 * @constructor
 */
function OMMCOLLECTION() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {OMMCOLLECTION}
 */
OMMCOLLECTION.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {OMMCOLLECTION=} obj
 * @returns {OMMCOLLECTION}
 */
OMMCOLLECTION.getRootAsOMMCOLLECTION = function (bb, obj) {
  return (obj || new OMMCOLLECTION).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {OMMCOLLECTION=} obj
 * @returns {OMMCOLLECTION}
 */
OMMCOLLECTION.getSizePrefixedRootAsOMMCOLLECTION = function (bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OMMCOLLECTION).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {OMM=} obj
 * @returns {OMM}
 */
OMMCOLLECTION.prototype.RECORDS = function (index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new OMM).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
OMMCOLLECTION.prototype.RECORDSLength = function () {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
OMMCOLLECTION.startOMMCOLLECTION = function (builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} RECORDSOffset
 */
OMMCOLLECTION.addRECORDS = function (builder, RECORDSOffset) {
  builder.addFieldOffset(0, RECORDSOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
OMMCOLLECTION.createRECORDSVector = function (builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
OMMCOLLECTION.startRECORDSVector = function (builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
OMMCOLLECTION.endOMMCOLLECTION = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} RECORDSOffset
 * @returns {flatbuffers.Offset}
 */
OMMCOLLECTION.createOMMCOLLECTION = function (builder, RECORDSOffset) {
  OMMCOLLECTION.startOMMCOLLECTION(builder);
  OMMCOLLECTION.addRECORDS(builder, RECORDSOffset);
  return OMMCOLLECTION.endOMMCOLLECTION(builder);
}

// Exports for ECMAScript6 Modules
export { referenceFrame };
export { referenceFrameName };
export { ephemerisType };
export { ephemerisTypeName };
export { timeSystem };
export { timeSystemName };
export { meanElementTheory };
export { meanElementTheoryName };
export { manCovRefFrame };
export { manCovRefFrameName };
export { OMM };
export { MPE };
export { OMMCOLLECTION };
