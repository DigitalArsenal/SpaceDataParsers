{
  "version": 3,
  "sources": ["../../node_modules/bignumber.js/bignumber.js", "../../node_modules/html-entities/lib/named-references.js", "../../node_modules/html-entities/lib/numeric-unicode-map.js", "../../node_modules/html-entities/lib/surrogate-pairs.js", "../../node_modules/html-entities/lib/index.js", "../../src/lib/legacyformat.enum.ts", "../../src/lib/serialization.enum.ts", "../../src/lib/parsers/omm.converter.ts", "../../src/lib/parsers/legacy.ts", "../../src/lib/parsers/definitions.js", "../../node_modules/csv-parse/dist/esm/sync.js", "../../node_modules/flatbuffers/mjs/utils.js", "../../node_modules/flatbuffers/mjs/encoding.js", "../../node_modules/flatbuffers/mjs/byte-buffer.js", "../../node_modules/flatbuffers/mjs/builder.js", "../../src/lib/OMM/OMM.ts", "../../src/lib/OMM/OMMCOLLECTION.ts", "../../src/lib/parsers/flatbuffer.scalartypes.ts", "../../src/lib/parsers/numCheck.ts", "../../src/lib/parsers/sat.converter.ts", "../../src/lib/SAT/SATCAT.ts", "../../src/lib/SAT/SATCATCOLLECTION.ts", "../../src/lib/OMM/omm.schema.ts", "../../src/lib/SAT/sat.schema.ts", "../../src/main.ts"],
  "sourcesContent": [";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on \u00B1Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = \u00B1Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return \u00B10, else return \u00B1Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, \u00B1Infinity or \u00B10?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return \u00B1Infinity if either is \u00B1Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return \u00B10 if either is \u00B10.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return \u00B1Infinity if either \u00B1Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n", "\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\"\u00A0\",\"&nbsp;\":\"\u00A0\",\"&iexcl\":\"\u00A1\",\"&iexcl;\":\"\u00A1\",\"&cent\":\"\u00A2\",\"&cent;\":\"\u00A2\",\"&pound\":\"\u00A3\",\"&pound;\":\"\u00A3\",\"&curren\":\"\u00A4\",\"&curren;\":\"\u00A4\",\"&yen\":\"\u00A5\",\"&yen;\":\"\u00A5\",\"&brvbar\":\"\u00A6\",\"&brvbar;\":\"\u00A6\",\"&sect\":\"\u00A7\",\"&sect;\":\"\u00A7\",\"&uml\":\"\u00A8\",\"&uml;\":\"\u00A8\",\"&copy\":\"\u00A9\",\"&copy;\":\"\u00A9\",\"&ordf\":\"\u00AA\",\"&ordf;\":\"\u00AA\",\"&laquo\":\"\u00AB\",\"&laquo;\":\"\u00AB\",\"&not\":\"\u00AC\",\"&not;\":\"\u00AC\",\"&shy\":\"\u00AD\",\"&shy;\":\"\u00AD\",\"&reg\":\"\u00AE\",\"&reg;\":\"\u00AE\",\"&macr\":\"\u00AF\",\"&macr;\":\"\u00AF\",\"&deg\":\"\u00B0\",\"&deg;\":\"\u00B0\",\"&plusmn\":\"\u00B1\",\"&plusmn;\":\"\u00B1\",\"&sup2\":\"\u00B2\",\"&sup2;\":\"\u00B2\",\"&sup3\":\"\u00B3\",\"&sup3;\":\"\u00B3\",\"&acute\":\"\u00B4\",\"&acute;\":\"\u00B4\",\"&micro\":\"\u00B5\",\"&micro;\":\"\u00B5\",\"&para\":\"\u00B6\",\"&para;\":\"\u00B6\",\"&middot\":\"\u00B7\",\"&middot;\":\"\u00B7\",\"&cedil\":\"\u00B8\",\"&cedil;\":\"\u00B8\",\"&sup1\":\"\u00B9\",\"&sup1;\":\"\u00B9\",\"&ordm\":\"\u00BA\",\"&ordm;\":\"\u00BA\",\"&raquo\":\"\u00BB\",\"&raquo;\":\"\u00BB\",\"&frac14\":\"\u00BC\",\"&frac14;\":\"\u00BC\",\"&frac12\":\"\u00BD\",\"&frac12;\":\"\u00BD\",\"&frac34\":\"\u00BE\",\"&frac34;\":\"\u00BE\",\"&iquest\":\"\u00BF\",\"&iquest;\":\"\u00BF\",\"&Agrave\":\"\u00C0\",\"&Agrave;\":\"\u00C0\",\"&Aacute\":\"\u00C1\",\"&Aacute;\":\"\u00C1\",\"&Acirc\":\"\u00C2\",\"&Acirc;\":\"\u00C2\",\"&Atilde\":\"\u00C3\",\"&Atilde;\":\"\u00C3\",\"&Auml\":\"\u00C4\",\"&Auml;\":\"\u00C4\",\"&Aring\":\"\u00C5\",\"&Aring;\":\"\u00C5\",\"&AElig\":\"\u00C6\",\"&AElig;\":\"\u00C6\",\"&Ccedil\":\"\u00C7\",\"&Ccedil;\":\"\u00C7\",\"&Egrave\":\"\u00C8\",\"&Egrave;\":\"\u00C8\",\"&Eacute\":\"\u00C9\",\"&Eacute;\":\"\u00C9\",\"&Ecirc\":\"\u00CA\",\"&Ecirc;\":\"\u00CA\",\"&Euml\":\"\u00CB\",\"&Euml;\":\"\u00CB\",\"&Igrave\":\"\u00CC\",\"&Igrave;\":\"\u00CC\",\"&Iacute\":\"\u00CD\",\"&Iacute;\":\"\u00CD\",\"&Icirc\":\"\u00CE\",\"&Icirc;\":\"\u00CE\",\"&Iuml\":\"\u00CF\",\"&Iuml;\":\"\u00CF\",\"&ETH\":\"\u00D0\",\"&ETH;\":\"\u00D0\",\"&Ntilde\":\"\u00D1\",\"&Ntilde;\":\"\u00D1\",\"&Ograve\":\"\u00D2\",\"&Ograve;\":\"\u00D2\",\"&Oacute\":\"\u00D3\",\"&Oacute;\":\"\u00D3\",\"&Ocirc\":\"\u00D4\",\"&Ocirc;\":\"\u00D4\",\"&Otilde\":\"\u00D5\",\"&Otilde;\":\"\u00D5\",\"&Ouml\":\"\u00D6\",\"&Ouml;\":\"\u00D6\",\"&times\":\"\u00D7\",\"&times;\":\"\u00D7\",\"&Oslash\":\"\u00D8\",\"&Oslash;\":\"\u00D8\",\"&Ugrave\":\"\u00D9\",\"&Ugrave;\":\"\u00D9\",\"&Uacute\":\"\u00DA\",\"&Uacute;\":\"\u00DA\",\"&Ucirc\":\"\u00DB\",\"&Ucirc;\":\"\u00DB\",\"&Uuml\":\"\u00DC\",\"&Uuml;\":\"\u00DC\",\"&Yacute\":\"\u00DD\",\"&Yacute;\":\"\u00DD\",\"&THORN\":\"\u00DE\",\"&THORN;\":\"\u00DE\",\"&szlig\":\"\u00DF\",\"&szlig;\":\"\u00DF\",\"&agrave\":\"\u00E0\",\"&agrave;\":\"\u00E0\",\"&aacute\":\"\u00E1\",\"&aacute;\":\"\u00E1\",\"&acirc\":\"\u00E2\",\"&acirc;\":\"\u00E2\",\"&atilde\":\"\u00E3\",\"&atilde;\":\"\u00E3\",\"&auml\":\"\u00E4\",\"&auml;\":\"\u00E4\",\"&aring\":\"\u00E5\",\"&aring;\":\"\u00E5\",\"&aelig\":\"\u00E6\",\"&aelig;\":\"\u00E6\",\"&ccedil\":\"\u00E7\",\"&ccedil;\":\"\u00E7\",\"&egrave\":\"\u00E8\",\"&egrave;\":\"\u00E8\",\"&eacute\":\"\u00E9\",\"&eacute;\":\"\u00E9\",\"&ecirc\":\"\u00EA\",\"&ecirc;\":\"\u00EA\",\"&euml\":\"\u00EB\",\"&euml;\":\"\u00EB\",\"&igrave\":\"\u00EC\",\"&igrave;\":\"\u00EC\",\"&iacute\":\"\u00ED\",\"&iacute;\":\"\u00ED\",\"&icirc\":\"\u00EE\",\"&icirc;\":\"\u00EE\",\"&iuml\":\"\u00EF\",\"&iuml;\":\"\u00EF\",\"&eth\":\"\u00F0\",\"&eth;\":\"\u00F0\",\"&ntilde\":\"\u00F1\",\"&ntilde;\":\"\u00F1\",\"&ograve\":\"\u00F2\",\"&ograve;\":\"\u00F2\",\"&oacute\":\"\u00F3\",\"&oacute;\":\"\u00F3\",\"&ocirc\":\"\u00F4\",\"&ocirc;\":\"\u00F4\",\"&otilde\":\"\u00F5\",\"&otilde;\":\"\u00F5\",\"&ouml\":\"\u00F6\",\"&ouml;\":\"\u00F6\",\"&divide\":\"\u00F7\",\"&divide;\":\"\u00F7\",\"&oslash\":\"\u00F8\",\"&oslash;\":\"\u00F8\",\"&ugrave\":\"\u00F9\",\"&ugrave;\":\"\u00F9\",\"&uacute\":\"\u00FA\",\"&uacute;\":\"\u00FA\",\"&ucirc\":\"\u00FB\",\"&ucirc;\":\"\u00FB\",\"&uuml\":\"\u00FC\",\"&uuml;\":\"\u00FC\",\"&yacute\":\"\u00FD\",\"&yacute;\":\"\u00FD\",\"&thorn\":\"\u00FE\",\"&thorn;\":\"\u00FE\",\"&yuml\":\"\u00FF\",\"&yuml;\":\"\u00FF\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"\u0152\",\"&oelig;\":\"\u0153\",\"&Scaron;\":\"\u0160\",\"&scaron;\":\"\u0161\",\"&Yuml;\":\"\u0178\",\"&circ;\":\"\u02C6\",\"&tilde;\":\"\u02DC\",\"&ensp;\":\"\u2002\",\"&emsp;\":\"\u2003\",\"&thinsp;\":\"\u2009\",\"&zwnj;\":\"\u200C\",\"&zwj;\":\"\u200D\",\"&lrm;\":\"\u200E\",\"&rlm;\":\"\u200F\",\"&ndash;\":\"\u2013\",\"&mdash;\":\"\u2014\",\"&lsquo;\":\"\u2018\",\"&rsquo;\":\"\u2019\",\"&sbquo;\":\"\u201A\",\"&ldquo;\":\"\u201C\",\"&rdquo;\":\"\u201D\",\"&bdquo;\":\"\u201E\",\"&dagger;\":\"\u2020\",\"&Dagger;\":\"\u2021\",\"&permil;\":\"\u2030\",\"&lsaquo;\":\"\u2039\",\"&rsaquo;\":\"\u203A\",\"&euro;\":\"\u20AC\",\"&fnof;\":\"\u0192\",\"&Alpha;\":\"\u0391\",\"&Beta;\":\"\u0392\",\"&Gamma;\":\"\u0393\",\"&Delta;\":\"\u0394\",\"&Epsilon;\":\"\u0395\",\"&Zeta;\":\"\u0396\",\"&Eta;\":\"\u0397\",\"&Theta;\":\"\u0398\",\"&Iota;\":\"\u0399\",\"&Kappa;\":\"\u039A\",\"&Lambda;\":\"\u039B\",\"&Mu;\":\"\u039C\",\"&Nu;\":\"\u039D\",\"&Xi;\":\"\u039E\",\"&Omicron;\":\"\u039F\",\"&Pi;\":\"\u03A0\",\"&Rho;\":\"\u03A1\",\"&Sigma;\":\"\u03A3\",\"&Tau;\":\"\u03A4\",\"&Upsilon;\":\"\u03A5\",\"&Phi;\":\"\u03A6\",\"&Chi;\":\"\u03A7\",\"&Psi;\":\"\u03A8\",\"&Omega;\":\"\u03A9\",\"&alpha;\":\"\u03B1\",\"&beta;\":\"\u03B2\",\"&gamma;\":\"\u03B3\",\"&delta;\":\"\u03B4\",\"&epsilon;\":\"\u03B5\",\"&zeta;\":\"\u03B6\",\"&eta;\":\"\u03B7\",\"&theta;\":\"\u03B8\",\"&iota;\":\"\u03B9\",\"&kappa;\":\"\u03BA\",\"&lambda;\":\"\u03BB\",\"&mu;\":\"\u03BC\",\"&nu;\":\"\u03BD\",\"&xi;\":\"\u03BE\",\"&omicron;\":\"\u03BF\",\"&pi;\":\"\u03C0\",\"&rho;\":\"\u03C1\",\"&sigmaf;\":\"\u03C2\",\"&sigma;\":\"\u03C3\",\"&tau;\":\"\u03C4\",\"&upsilon;\":\"\u03C5\",\"&phi;\":\"\u03C6\",\"&chi;\":\"\u03C7\",\"&psi;\":\"\u03C8\",\"&omega;\":\"\u03C9\",\"&thetasym;\":\"\u03D1\",\"&upsih;\":\"\u03D2\",\"&piv;\":\"\u03D6\",\"&bull;\":\"\u2022\",\"&hellip;\":\"\u2026\",\"&prime;\":\"\u2032\",\"&Prime;\":\"\u2033\",\"&oline;\":\"\u203E\",\"&frasl;\":\"\u2044\",\"&weierp;\":\"\u2118\",\"&image;\":\"\u2111\",\"&real;\":\"\u211C\",\"&trade;\":\"\u2122\",\"&alefsym;\":\"\u2135\",\"&larr;\":\"\u2190\",\"&uarr;\":\"\u2191\",\"&rarr;\":\"\u2192\",\"&darr;\":\"\u2193\",\"&harr;\":\"\u2194\",\"&crarr;\":\"\u21B5\",\"&lArr;\":\"\u21D0\",\"&uArr;\":\"\u21D1\",\"&rArr;\":\"\u21D2\",\"&dArr;\":\"\u21D3\",\"&hArr;\":\"\u21D4\",\"&forall;\":\"\u2200\",\"&part;\":\"\u2202\",\"&exist;\":\"\u2203\",\"&empty;\":\"\u2205\",\"&nabla;\":\"\u2207\",\"&isin;\":\"\u2208\",\"&notin;\":\"\u2209\",\"&ni;\":\"\u220B\",\"&prod;\":\"\u220F\",\"&sum;\":\"\u2211\",\"&minus;\":\"\u2212\",\"&lowast;\":\"\u2217\",\"&radic;\":\"\u221A\",\"&prop;\":\"\u221D\",\"&infin;\":\"\u221E\",\"&ang;\":\"\u2220\",\"&and;\":\"\u2227\",\"&or;\":\"\u2228\",\"&cap;\":\"\u2229\",\"&cup;\":\"\u222A\",\"&int;\":\"\u222B\",\"&there4;\":\"\u2234\",\"&sim;\":\"\u223C\",\"&cong;\":\"\u2245\",\"&asymp;\":\"\u2248\",\"&ne;\":\"\u2260\",\"&equiv;\":\"\u2261\",\"&le;\":\"\u2264\",\"&ge;\":\"\u2265\",\"&sub;\":\"\u2282\",\"&sup;\":\"\u2283\",\"&nsub;\":\"\u2284\",\"&sube;\":\"\u2286\",\"&supe;\":\"\u2287\",\"&oplus;\":\"\u2295\",\"&otimes;\":\"\u2297\",\"&perp;\":\"\u22A5\",\"&sdot;\":\"\u22C5\",\"&lceil;\":\"\u2308\",\"&rceil;\":\"\u2309\",\"&lfloor;\":\"\u230A\",\"&rfloor;\":\"\u230B\",\"&lang;\":\"\u2329\",\"&rang;\":\"\u232A\",\"&loz;\":\"\u25CA\",\"&spades;\":\"\u2660\",\"&clubs;\":\"\u2663\",\"&hearts;\":\"\u2665\",\"&diams;\":\"\u2666\"},characters:{\"'\":\"&apos;\",\"\u00A0\":\"&nbsp;\",\"\u00A1\":\"&iexcl;\",\"\u00A2\":\"&cent;\",\"\u00A3\":\"&pound;\",\"\u00A4\":\"&curren;\",\"\u00A5\":\"&yen;\",\"\u00A6\":\"&brvbar;\",\"\u00A7\":\"&sect;\",\"\u00A8\":\"&uml;\",\"\u00A9\":\"&copy;\",\"\u00AA\":\"&ordf;\",\"\u00AB\":\"&laquo;\",\"\u00AC\":\"&not;\",\"\u00AD\":\"&shy;\",\"\u00AE\":\"&reg;\",\"\u00AF\":\"&macr;\",\"\u00B0\":\"&deg;\",\"\u00B1\":\"&plusmn;\",\"\u00B2\":\"&sup2;\",\"\u00B3\":\"&sup3;\",\"\u00B4\":\"&acute;\",\"\u00B5\":\"&micro;\",\"\u00B6\":\"&para;\",\"\u00B7\":\"&middot;\",\"\u00B8\":\"&cedil;\",\"\u00B9\":\"&sup1;\",\"\u00BA\":\"&ordm;\",\"\u00BB\":\"&raquo;\",\"\u00BC\":\"&frac14;\",\"\u00BD\":\"&frac12;\",\"\u00BE\":\"&frac34;\",\"\u00BF\":\"&iquest;\",\"\u00C0\":\"&Agrave;\",\"\u00C1\":\"&Aacute;\",\"\u00C2\":\"&Acirc;\",\"\u00C3\":\"&Atilde;\",\"\u00C4\":\"&Auml;\",\"\u00C5\":\"&Aring;\",\"\u00C6\":\"&AElig;\",\"\u00C7\":\"&Ccedil;\",\"\u00C8\":\"&Egrave;\",\"\u00C9\":\"&Eacute;\",\"\u00CA\":\"&Ecirc;\",\"\u00CB\":\"&Euml;\",\"\u00CC\":\"&Igrave;\",\"\u00CD\":\"&Iacute;\",\"\u00CE\":\"&Icirc;\",\"\u00CF\":\"&Iuml;\",\"\u00D0\":\"&ETH;\",\"\u00D1\":\"&Ntilde;\",\"\u00D2\":\"&Ograve;\",\"\u00D3\":\"&Oacute;\",\"\u00D4\":\"&Ocirc;\",\"\u00D5\":\"&Otilde;\",\"\u00D6\":\"&Ouml;\",\"\u00D7\":\"&times;\",\"\u00D8\":\"&Oslash;\",\"\u00D9\":\"&Ugrave;\",\"\u00DA\":\"&Uacute;\",\"\u00DB\":\"&Ucirc;\",\"\u00DC\":\"&Uuml;\",\"\u00DD\":\"&Yacute;\",\"\u00DE\":\"&THORN;\",\"\u00DF\":\"&szlig;\",\"\u00E0\":\"&agrave;\",\"\u00E1\":\"&aacute;\",\"\u00E2\":\"&acirc;\",\"\u00E3\":\"&atilde;\",\"\u00E4\":\"&auml;\",\"\u00E5\":\"&aring;\",\"\u00E6\":\"&aelig;\",\"\u00E7\":\"&ccedil;\",\"\u00E8\":\"&egrave;\",\"\u00E9\":\"&eacute;\",\"\u00EA\":\"&ecirc;\",\"\u00EB\":\"&euml;\",\"\u00EC\":\"&igrave;\",\"\u00ED\":\"&iacute;\",\"\u00EE\":\"&icirc;\",\"\u00EF\":\"&iuml;\",\"\u00F0\":\"&eth;\",\"\u00F1\":\"&ntilde;\",\"\u00F2\":\"&ograve;\",\"\u00F3\":\"&oacute;\",\"\u00F4\":\"&ocirc;\",\"\u00F5\":\"&otilde;\",\"\u00F6\":\"&ouml;\",\"\u00F7\":\"&divide;\",\"\u00F8\":\"&oslash;\",\"\u00F9\":\"&ugrave;\",\"\u00FA\":\"&uacute;\",\"\u00FB\":\"&ucirc;\",\"\u00FC\":\"&uuml;\",\"\u00FD\":\"&yacute;\",\"\u00FE\":\"&thorn;\",\"\u00FF\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"\u0152\":\"&OElig;\",\"\u0153\":\"&oelig;\",\"\u0160\":\"&Scaron;\",\"\u0161\":\"&scaron;\",\"\u0178\":\"&Yuml;\",\"\u02C6\":\"&circ;\",\"\u02DC\":\"&tilde;\",\"\u2002\":\"&ensp;\",\"\u2003\":\"&emsp;\",\"\u2009\":\"&thinsp;\",\"\u200C\":\"&zwnj;\",\"\u200D\":\"&zwj;\",\"\u200E\":\"&lrm;\",\"\u200F\":\"&rlm;\",\"\u2013\":\"&ndash;\",\"\u2014\":\"&mdash;\",\"\u2018\":\"&lsquo;\",\"\u2019\":\"&rsquo;\",\"\u201A\":\"&sbquo;\",\"\u201C\":\"&ldquo;\",\"\u201D\":\"&rdquo;\",\"\u201E\":\"&bdquo;\",\"\u2020\":\"&dagger;\",\"\u2021\":\"&Dagger;\",\"\u2030\":\"&permil;\",\"\u2039\":\"&lsaquo;\",\"\u203A\":\"&rsaquo;\",\"\u20AC\":\"&euro;\",\"\u0192\":\"&fnof;\",\"\u0391\":\"&Alpha;\",\"\u0392\":\"&Beta;\",\"\u0393\":\"&Gamma;\",\"\u0394\":\"&Delta;\",\"\u0395\":\"&Epsilon;\",\"\u0396\":\"&Zeta;\",\"\u0397\":\"&Eta;\",\"\u0398\":\"&Theta;\",\"\u0399\":\"&Iota;\",\"\u039A\":\"&Kappa;\",\"\u039B\":\"&Lambda;\",\"\u039C\":\"&Mu;\",\"\u039D\":\"&Nu;\",\"\u039E\":\"&Xi;\",\"\u039F\":\"&Omicron;\",\"\u03A0\":\"&Pi;\",\"\u03A1\":\"&Rho;\",\"\u03A3\":\"&Sigma;\",\"\u03A4\":\"&Tau;\",\"\u03A5\":\"&Upsilon;\",\"\u03A6\":\"&Phi;\",\"\u03A7\":\"&Chi;\",\"\u03A8\":\"&Psi;\",\"\u03A9\":\"&Omega;\",\"\u03B1\":\"&alpha;\",\"\u03B2\":\"&beta;\",\"\u03B3\":\"&gamma;\",\"\u03B4\":\"&delta;\",\"\u03B5\":\"&epsilon;\",\"\u03B6\":\"&zeta;\",\"\u03B7\":\"&eta;\",\"\u03B8\":\"&theta;\",\"\u03B9\":\"&iota;\",\"\u03BA\":\"&kappa;\",\"\u03BB\":\"&lambda;\",\"\u03BC\":\"&mu;\",\"\u03BD\":\"&nu;\",\"\u03BE\":\"&xi;\",\"\u03BF\":\"&omicron;\",\"\u03C0\":\"&pi;\",\"\u03C1\":\"&rho;\",\"\u03C2\":\"&sigmaf;\",\"\u03C3\":\"&sigma;\",\"\u03C4\":\"&tau;\",\"\u03C5\":\"&upsilon;\",\"\u03C6\":\"&phi;\",\"\u03C7\":\"&chi;\",\"\u03C8\":\"&psi;\",\"\u03C9\":\"&omega;\",\"\u03D1\":\"&thetasym;\",\"\u03D2\":\"&upsih;\",\"\u03D6\":\"&piv;\",\"\u2022\":\"&bull;\",\"\u2026\":\"&hellip;\",\"\u2032\":\"&prime;\",\"\u2033\":\"&Prime;\",\"\u203E\":\"&oline;\",\"\u2044\":\"&frasl;\",\"\u2118\":\"&weierp;\",\"\u2111\":\"&image;\",\"\u211C\":\"&real;\",\"\u2122\":\"&trade;\",\"\u2135\":\"&alefsym;\",\"\u2190\":\"&larr;\",\"\u2191\":\"&uarr;\",\"\u2192\":\"&rarr;\",\"\u2193\":\"&darr;\",\"\u2194\":\"&harr;\",\"\u21B5\":\"&crarr;\",\"\u21D0\":\"&lArr;\",\"\u21D1\":\"&uArr;\",\"\u21D2\":\"&rArr;\",\"\u21D3\":\"&dArr;\",\"\u21D4\":\"&hArr;\",\"\u2200\":\"&forall;\",\"\u2202\":\"&part;\",\"\u2203\":\"&exist;\",\"\u2205\":\"&empty;\",\"\u2207\":\"&nabla;\",\"\u2208\":\"&isin;\",\"\u2209\":\"&notin;\",\"\u220B\":\"&ni;\",\"\u220F\":\"&prod;\",\"\u2211\":\"&sum;\",\"\u2212\":\"&minus;\",\"\u2217\":\"&lowast;\",\"\u221A\":\"&radic;\",\"\u221D\":\"&prop;\",\"\u221E\":\"&infin;\",\"\u2220\":\"&ang;\",\"\u2227\":\"&and;\",\"\u2228\":\"&or;\",\"\u2229\":\"&cap;\",\"\u222A\":\"&cup;\",\"\u222B\":\"&int;\",\"\u2234\":\"&there4;\",\"\u223C\":\"&sim;\",\"\u2245\":\"&cong;\",\"\u2248\":\"&asymp;\",\"\u2260\":\"&ne;\",\"\u2261\":\"&equiv;\",\"\u2264\":\"&le;\",\"\u2265\":\"&ge;\",\"\u2282\":\"&sub;\",\"\u2283\":\"&sup;\",\"\u2284\":\"&nsub;\",\"\u2286\":\"&sube;\",\"\u2287\":\"&supe;\",\"\u2295\":\"&oplus;\",\"\u2297\":\"&otimes;\",\"\u22A5\":\"&perp;\",\"\u22C5\":\"&sdot;\",\"\u2308\":\"&lceil;\",\"\u2309\":\"&rceil;\",\"\u230A\":\"&lfloor;\",\"\u230B\":\"&rfloor;\",\"\u2329\":\"&lang;\",\"\u232A\":\"&rang;\",\"\u25CA\":\"&loz;\",\"\u2660\":\"&spades;\",\"\u2663\":\"&clubs;\",\"\u2665\":\"&hearts;\",\"\u2666\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"\u00C6\",\"&AElig;\":\"\u00C6\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"\u00C1\",\"&Aacute;\":\"\u00C1\",\"&Abreve;\":\"\u0102\",\"&Acirc\":\"\u00C2\",\"&Acirc;\":\"\u00C2\",\"&Acy;\":\"\u0410\",\"&Afr;\":\"\uD835\uDD04\",\"&Agrave\":\"\u00C0\",\"&Agrave;\":\"\u00C0\",\"&Alpha;\":\"\u0391\",\"&Amacr;\":\"\u0100\",\"&And;\":\"\u2A53\",\"&Aogon;\":\"\u0104\",\"&Aopf;\":\"\uD835\uDD38\",\"&ApplyFunction;\":\"\u2061\",\"&Aring\":\"\u00C5\",\"&Aring;\":\"\u00C5\",\"&Ascr;\":\"\uD835\uDC9C\",\"&Assign;\":\"\u2254\",\"&Atilde\":\"\u00C3\",\"&Atilde;\":\"\u00C3\",\"&Auml\":\"\u00C4\",\"&Auml;\":\"\u00C4\",\"&Backslash;\":\"\u2216\",\"&Barv;\":\"\u2AE7\",\"&Barwed;\":\"\u2306\",\"&Bcy;\":\"\u0411\",\"&Because;\":\"\u2235\",\"&Bernoullis;\":\"\u212C\",\"&Beta;\":\"\u0392\",\"&Bfr;\":\"\uD835\uDD05\",\"&Bopf;\":\"\uD835\uDD39\",\"&Breve;\":\"\u02D8\",\"&Bscr;\":\"\u212C\",\"&Bumpeq;\":\"\u224E\",\"&CHcy;\":\"\u0427\",\"&COPY\":\"\u00A9\",\"&COPY;\":\"\u00A9\",\"&Cacute;\":\"\u0106\",\"&Cap;\":\"\u22D2\",\"&CapitalDifferentialD;\":\"\u2145\",\"&Cayleys;\":\"\u212D\",\"&Ccaron;\":\"\u010C\",\"&Ccedil\":\"\u00C7\",\"&Ccedil;\":\"\u00C7\",\"&Ccirc;\":\"\u0108\",\"&Cconint;\":\"\u2230\",\"&Cdot;\":\"\u010A\",\"&Cedilla;\":\"\u00B8\",\"&CenterDot;\":\"\u00B7\",\"&Cfr;\":\"\u212D\",\"&Chi;\":\"\u03A7\",\"&CircleDot;\":\"\u2299\",\"&CircleMinus;\":\"\u2296\",\"&CirclePlus;\":\"\u2295\",\"&CircleTimes;\":\"\u2297\",\"&ClockwiseContourIntegral;\":\"\u2232\",\"&CloseCurlyDoubleQuote;\":\"\u201D\",\"&CloseCurlyQuote;\":\"\u2019\",\"&Colon;\":\"\u2237\",\"&Colone;\":\"\u2A74\",\"&Congruent;\":\"\u2261\",\"&Conint;\":\"\u222F\",\"&ContourIntegral;\":\"\u222E\",\"&Copf;\":\"\u2102\",\"&Coproduct;\":\"\u2210\",\"&CounterClockwiseContourIntegral;\":\"\u2233\",\"&Cross;\":\"\u2A2F\",\"&Cscr;\":\"\uD835\uDC9E\",\"&Cup;\":\"\u22D3\",\"&CupCap;\":\"\u224D\",\"&DD;\":\"\u2145\",\"&DDotrahd;\":\"\u2911\",\"&DJcy;\":\"\u0402\",\"&DScy;\":\"\u0405\",\"&DZcy;\":\"\u040F\",\"&Dagger;\":\"\u2021\",\"&Darr;\":\"\u21A1\",\"&Dashv;\":\"\u2AE4\",\"&Dcaron;\":\"\u010E\",\"&Dcy;\":\"\u0414\",\"&Del;\":\"\u2207\",\"&Delta;\":\"\u0394\",\"&Dfr;\":\"\uD835\uDD07\",\"&DiacriticalAcute;\":\"\u00B4\",\"&DiacriticalDot;\":\"\u02D9\",\"&DiacriticalDoubleAcute;\":\"\u02DD\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"\u02DC\",\"&Diamond;\":\"\u22C4\",\"&DifferentialD;\":\"\u2146\",\"&Dopf;\":\"\uD835\uDD3B\",\"&Dot;\":\"\u00A8\",\"&DotDot;\":\"\u20DC\",\"&DotEqual;\":\"\u2250\",\"&DoubleContourIntegral;\":\"\u222F\",\"&DoubleDot;\":\"\u00A8\",\"&DoubleDownArrow;\":\"\u21D3\",\"&DoubleLeftArrow;\":\"\u21D0\",\"&DoubleLeftRightArrow;\":\"\u21D4\",\"&DoubleLeftTee;\":\"\u2AE4\",\"&DoubleLongLeftArrow;\":\"\u27F8\",\"&DoubleLongLeftRightArrow;\":\"\u27FA\",\"&DoubleLongRightArrow;\":\"\u27F9\",\"&DoubleRightArrow;\":\"\u21D2\",\"&DoubleRightTee;\":\"\u22A8\",\"&DoubleUpArrow;\":\"\u21D1\",\"&DoubleUpDownArrow;\":\"\u21D5\",\"&DoubleVerticalBar;\":\"\u2225\",\"&DownArrow;\":\"\u2193\",\"&DownArrowBar;\":\"\u2913\",\"&DownArrowUpArrow;\":\"\u21F5\",\"&DownBreve;\":\"\u0311\",\"&DownLeftRightVector;\":\"\u2950\",\"&DownLeftTeeVector;\":\"\u295E\",\"&DownLeftVector;\":\"\u21BD\",\"&DownLeftVectorBar;\":\"\u2956\",\"&DownRightTeeVector;\":\"\u295F\",\"&DownRightVector;\":\"\u21C1\",\"&DownRightVectorBar;\":\"\u2957\",\"&DownTee;\":\"\u22A4\",\"&DownTeeArrow;\":\"\u21A7\",\"&Downarrow;\":\"\u21D3\",\"&Dscr;\":\"\uD835\uDC9F\",\"&Dstrok;\":\"\u0110\",\"&ENG;\":\"\u014A\",\"&ETH\":\"\u00D0\",\"&ETH;\":\"\u00D0\",\"&Eacute\":\"\u00C9\",\"&Eacute;\":\"\u00C9\",\"&Ecaron;\":\"\u011A\",\"&Ecirc\":\"\u00CA\",\"&Ecirc;\":\"\u00CA\",\"&Ecy;\":\"\u042D\",\"&Edot;\":\"\u0116\",\"&Efr;\":\"\uD835\uDD08\",\"&Egrave\":\"\u00C8\",\"&Egrave;\":\"\u00C8\",\"&Element;\":\"\u2208\",\"&Emacr;\":\"\u0112\",\"&EmptySmallSquare;\":\"\u25FB\",\"&EmptyVerySmallSquare;\":\"\u25AB\",\"&Eogon;\":\"\u0118\",\"&Eopf;\":\"\uD835\uDD3C\",\"&Epsilon;\":\"\u0395\",\"&Equal;\":\"\u2A75\",\"&EqualTilde;\":\"\u2242\",\"&Equilibrium;\":\"\u21CC\",\"&Escr;\":\"\u2130\",\"&Esim;\":\"\u2A73\",\"&Eta;\":\"\u0397\",\"&Euml\":\"\u00CB\",\"&Euml;\":\"\u00CB\",\"&Exists;\":\"\u2203\",\"&ExponentialE;\":\"\u2147\",\"&Fcy;\":\"\u0424\",\"&Ffr;\":\"\uD835\uDD09\",\"&FilledSmallSquare;\":\"\u25FC\",\"&FilledVerySmallSquare;\":\"\u25AA\",\"&Fopf;\":\"\uD835\uDD3D\",\"&ForAll;\":\"\u2200\",\"&Fouriertrf;\":\"\u2131\",\"&Fscr;\":\"\u2131\",\"&GJcy;\":\"\u0403\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"\u0393\",\"&Gammad;\":\"\u03DC\",\"&Gbreve;\":\"\u011E\",\"&Gcedil;\":\"\u0122\",\"&Gcirc;\":\"\u011C\",\"&Gcy;\":\"\u0413\",\"&Gdot;\":\"\u0120\",\"&Gfr;\":\"\uD835\uDD0A\",\"&Gg;\":\"\u22D9\",\"&Gopf;\":\"\uD835\uDD3E\",\"&GreaterEqual;\":\"\u2265\",\"&GreaterEqualLess;\":\"\u22DB\",\"&GreaterFullEqual;\":\"\u2267\",\"&GreaterGreater;\":\"\u2AA2\",\"&GreaterLess;\":\"\u2277\",\"&GreaterSlantEqual;\":\"\u2A7E\",\"&GreaterTilde;\":\"\u2273\",\"&Gscr;\":\"\uD835\uDCA2\",\"&Gt;\":\"\u226B\",\"&HARDcy;\":\"\u042A\",\"&Hacek;\":\"\u02C7\",\"&Hat;\":\"^\",\"&Hcirc;\":\"\u0124\",\"&Hfr;\":\"\u210C\",\"&HilbertSpace;\":\"\u210B\",\"&Hopf;\":\"\u210D\",\"&HorizontalLine;\":\"\u2500\",\"&Hscr;\":\"\u210B\",\"&Hstrok;\":\"\u0126\",\"&HumpDownHump;\":\"\u224E\",\"&HumpEqual;\":\"\u224F\",\"&IEcy;\":\"\u0415\",\"&IJlig;\":\"\u0132\",\"&IOcy;\":\"\u0401\",\"&Iacute\":\"\u00CD\",\"&Iacute;\":\"\u00CD\",\"&Icirc\":\"\u00CE\",\"&Icirc;\":\"\u00CE\",\"&Icy;\":\"\u0418\",\"&Idot;\":\"\u0130\",\"&Ifr;\":\"\u2111\",\"&Igrave\":\"\u00CC\",\"&Igrave;\":\"\u00CC\",\"&Im;\":\"\u2111\",\"&Imacr;\":\"\u012A\",\"&ImaginaryI;\":\"\u2148\",\"&Implies;\":\"\u21D2\",\"&Int;\":\"\u222C\",\"&Integral;\":\"\u222B\",\"&Intersection;\":\"\u22C2\",\"&InvisibleComma;\":\"\u2063\",\"&InvisibleTimes;\":\"\u2062\",\"&Iogon;\":\"\u012E\",\"&Iopf;\":\"\uD835\uDD40\",\"&Iota;\":\"\u0399\",\"&Iscr;\":\"\u2110\",\"&Itilde;\":\"\u0128\",\"&Iukcy;\":\"\u0406\",\"&Iuml\":\"\u00CF\",\"&Iuml;\":\"\u00CF\",\"&Jcirc;\":\"\u0134\",\"&Jcy;\":\"\u0419\",\"&Jfr;\":\"\uD835\uDD0D\",\"&Jopf;\":\"\uD835\uDD41\",\"&Jscr;\":\"\uD835\uDCA5\",\"&Jsercy;\":\"\u0408\",\"&Jukcy;\":\"\u0404\",\"&KHcy;\":\"\u0425\",\"&KJcy;\":\"\u040C\",\"&Kappa;\":\"\u039A\",\"&Kcedil;\":\"\u0136\",\"&Kcy;\":\"\u041A\",\"&Kfr;\":\"\uD835\uDD0E\",\"&Kopf;\":\"\uD835\uDD42\",\"&Kscr;\":\"\uD835\uDCA6\",\"&LJcy;\":\"\u0409\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"\u0139\",\"&Lambda;\":\"\u039B\",\"&Lang;\":\"\u27EA\",\"&Laplacetrf;\":\"\u2112\",\"&Larr;\":\"\u219E\",\"&Lcaron;\":\"\u013D\",\"&Lcedil;\":\"\u013B\",\"&Lcy;\":\"\u041B\",\"&LeftAngleBracket;\":\"\u27E8\",\"&LeftArrow;\":\"\u2190\",\"&LeftArrowBar;\":\"\u21E4\",\"&LeftArrowRightArrow;\":\"\u21C6\",\"&LeftCeiling;\":\"\u2308\",\"&LeftDoubleBracket;\":\"\u27E6\",\"&LeftDownTeeVector;\":\"\u2961\",\"&LeftDownVector;\":\"\u21C3\",\"&LeftDownVectorBar;\":\"\u2959\",\"&LeftFloor;\":\"\u230A\",\"&LeftRightArrow;\":\"\u2194\",\"&LeftRightVector;\":\"\u294E\",\"&LeftTee;\":\"\u22A3\",\"&LeftTeeArrow;\":\"\u21A4\",\"&LeftTeeVector;\":\"\u295A\",\"&LeftTriangle;\":\"\u22B2\",\"&LeftTriangleBar;\":\"\u29CF\",\"&LeftTriangleEqual;\":\"\u22B4\",\"&LeftUpDownVector;\":\"\u2951\",\"&LeftUpTeeVector;\":\"\u2960\",\"&LeftUpVector;\":\"\u21BF\",\"&LeftUpVectorBar;\":\"\u2958\",\"&LeftVector;\":\"\u21BC\",\"&LeftVectorBar;\":\"\u2952\",\"&Leftarrow;\":\"\u21D0\",\"&Leftrightarrow;\":\"\u21D4\",\"&LessEqualGreater;\":\"\u22DA\",\"&LessFullEqual;\":\"\u2266\",\"&LessGreater;\":\"\u2276\",\"&LessLess;\":\"\u2AA1\",\"&LessSlantEqual;\":\"\u2A7D\",\"&LessTilde;\":\"\u2272\",\"&Lfr;\":\"\uD835\uDD0F\",\"&Ll;\":\"\u22D8\",\"&Lleftarrow;\":\"\u21DA\",\"&Lmidot;\":\"\u013F\",\"&LongLeftArrow;\":\"\u27F5\",\"&LongLeftRightArrow;\":\"\u27F7\",\"&LongRightArrow;\":\"\u27F6\",\"&Longleftarrow;\":\"\u27F8\",\"&Longleftrightarrow;\":\"\u27FA\",\"&Longrightarrow;\":\"\u27F9\",\"&Lopf;\":\"\uD835\uDD43\",\"&LowerLeftArrow;\":\"\u2199\",\"&LowerRightArrow;\":\"\u2198\",\"&Lscr;\":\"\u2112\",\"&Lsh;\":\"\u21B0\",\"&Lstrok;\":\"\u0141\",\"&Lt;\":\"\u226A\",\"&Map;\":\"\u2905\",\"&Mcy;\":\"\u041C\",\"&MediumSpace;\":\"\u205F\",\"&Mellintrf;\":\"\u2133\",\"&Mfr;\":\"\uD835\uDD10\",\"&MinusPlus;\":\"\u2213\",\"&Mopf;\":\"\uD835\uDD44\",\"&Mscr;\":\"\u2133\",\"&Mu;\":\"\u039C\",\"&NJcy;\":\"\u040A\",\"&Nacute;\":\"\u0143\",\"&Ncaron;\":\"\u0147\",\"&Ncedil;\":\"\u0145\",\"&Ncy;\":\"\u041D\",\"&NegativeMediumSpace;\":\"\u200B\",\"&NegativeThickSpace;\":\"\u200B\",\"&NegativeThinSpace;\":\"\u200B\",\"&NegativeVeryThinSpace;\":\"\u200B\",\"&NestedGreaterGreater;\":\"\u226B\",\"&NestedLessLess;\":\"\u226A\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"\uD835\uDD11\",\"&NoBreak;\":\"\u2060\",\"&NonBreakingSpace;\":\"\u00A0\",\"&Nopf;\":\"\u2115\",\"&Not;\":\"\u2AEC\",\"&NotCongruent;\":\"\u2262\",\"&NotCupCap;\":\"\u226D\",\"&NotDoubleVerticalBar;\":\"\u2226\",\"&NotElement;\":\"\u2209\",\"&NotEqual;\":\"\u2260\",\"&NotEqualTilde;\":\"\u2242\u0338\",\"&NotExists;\":\"\u2204\",\"&NotGreater;\":\"\u226F\",\"&NotGreaterEqual;\":\"\u2271\",\"&NotGreaterFullEqual;\":\"\u2267\u0338\",\"&NotGreaterGreater;\":\"\u226B\u0338\",\"&NotGreaterLess;\":\"\u2279\",\"&NotGreaterSlantEqual;\":\"\u2A7E\u0338\",\"&NotGreaterTilde;\":\"\u2275\",\"&NotHumpDownHump;\":\"\u224E\u0338\",\"&NotHumpEqual;\":\"\u224F\u0338\",\"&NotLeftTriangle;\":\"\u22EA\",\"&NotLeftTriangleBar;\":\"\u29CF\u0338\",\"&NotLeftTriangleEqual;\":\"\u22EC\",\"&NotLess;\":\"\u226E\",\"&NotLessEqual;\":\"\u2270\",\"&NotLessGreater;\":\"\u2278\",\"&NotLessLess;\":\"\u226A\u0338\",\"&NotLessSlantEqual;\":\"\u2A7D\u0338\",\"&NotLessTilde;\":\"\u2274\",\"&NotNestedGreaterGreater;\":\"\u2AA2\u0338\",\"&NotNestedLessLess;\":\"\u2AA1\u0338\",\"&NotPrecedes;\":\"\u2280\",\"&NotPrecedesEqual;\":\"\u2AAF\u0338\",\"&NotPrecedesSlantEqual;\":\"\u22E0\",\"&NotReverseElement;\":\"\u220C\",\"&NotRightTriangle;\":\"\u22EB\",\"&NotRightTriangleBar;\":\"\u29D0\u0338\",\"&NotRightTriangleEqual;\":\"\u22ED\",\"&NotSquareSubset;\":\"\u228F\u0338\",\"&NotSquareSubsetEqual;\":\"\u22E2\",\"&NotSquareSuperset;\":\"\u2290\u0338\",\"&NotSquareSupersetEqual;\":\"\u22E3\",\"&NotSubset;\":\"\u2282\u20D2\",\"&NotSubsetEqual;\":\"\u2288\",\"&NotSucceeds;\":\"\u2281\",\"&NotSucceedsEqual;\":\"\u2AB0\u0338\",\"&NotSucceedsSlantEqual;\":\"\u22E1\",\"&NotSucceedsTilde;\":\"\u227F\u0338\",\"&NotSuperset;\":\"\u2283\u20D2\",\"&NotSupersetEqual;\":\"\u2289\",\"&NotTilde;\":\"\u2241\",\"&NotTildeEqual;\":\"\u2244\",\"&NotTildeFullEqual;\":\"\u2247\",\"&NotTildeTilde;\":\"\u2249\",\"&NotVerticalBar;\":\"\u2224\",\"&Nscr;\":\"\uD835\uDCA9\",\"&Ntilde\":\"\u00D1\",\"&Ntilde;\":\"\u00D1\",\"&Nu;\":\"\u039D\",\"&OElig;\":\"\u0152\",\"&Oacute\":\"\u00D3\",\"&Oacute;\":\"\u00D3\",\"&Ocirc\":\"\u00D4\",\"&Ocirc;\":\"\u00D4\",\"&Ocy;\":\"\u041E\",\"&Odblac;\":\"\u0150\",\"&Ofr;\":\"\uD835\uDD12\",\"&Ograve\":\"\u00D2\",\"&Ograve;\":\"\u00D2\",\"&Omacr;\":\"\u014C\",\"&Omega;\":\"\u03A9\",\"&Omicron;\":\"\u039F\",\"&Oopf;\":\"\uD835\uDD46\",\"&OpenCurlyDoubleQuote;\":\"\u201C\",\"&OpenCurlyQuote;\":\"\u2018\",\"&Or;\":\"\u2A54\",\"&Oscr;\":\"\uD835\uDCAA\",\"&Oslash\":\"\u00D8\",\"&Oslash;\":\"\u00D8\",\"&Otilde\":\"\u00D5\",\"&Otilde;\":\"\u00D5\",\"&Otimes;\":\"\u2A37\",\"&Ouml\":\"\u00D6\",\"&Ouml;\":\"\u00D6\",\"&OverBar;\":\"\u203E\",\"&OverBrace;\":\"\u23DE\",\"&OverBracket;\":\"\u23B4\",\"&OverParenthesis;\":\"\u23DC\",\"&PartialD;\":\"\u2202\",\"&Pcy;\":\"\u041F\",\"&Pfr;\":\"\uD835\uDD13\",\"&Phi;\":\"\u03A6\",\"&Pi;\":\"\u03A0\",\"&PlusMinus;\":\"\u00B1\",\"&Poincareplane;\":\"\u210C\",\"&Popf;\":\"\u2119\",\"&Pr;\":\"\u2ABB\",\"&Precedes;\":\"\u227A\",\"&PrecedesEqual;\":\"\u2AAF\",\"&PrecedesSlantEqual;\":\"\u227C\",\"&PrecedesTilde;\":\"\u227E\",\"&Prime;\":\"\u2033\",\"&Product;\":\"\u220F\",\"&Proportion;\":\"\u2237\",\"&Proportional;\":\"\u221D\",\"&Pscr;\":\"\uD835\uDCAB\",\"&Psi;\":\"\u03A8\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"\uD835\uDD14\",\"&Qopf;\":\"\u211A\",\"&Qscr;\":\"\uD835\uDCAC\",\"&RBarr;\":\"\u2910\",\"&REG\":\"\u00AE\",\"&REG;\":\"\u00AE\",\"&Racute;\":\"\u0154\",\"&Rang;\":\"\u27EB\",\"&Rarr;\":\"\u21A0\",\"&Rarrtl;\":\"\u2916\",\"&Rcaron;\":\"\u0158\",\"&Rcedil;\":\"\u0156\",\"&Rcy;\":\"\u0420\",\"&Re;\":\"\u211C\",\"&ReverseElement;\":\"\u220B\",\"&ReverseEquilibrium;\":\"\u21CB\",\"&ReverseUpEquilibrium;\":\"\u296F\",\"&Rfr;\":\"\u211C\",\"&Rho;\":\"\u03A1\",\"&RightAngleBracket;\":\"\u27E9\",\"&RightArrow;\":\"\u2192\",\"&RightArrowBar;\":\"\u21E5\",\"&RightArrowLeftArrow;\":\"\u21C4\",\"&RightCeiling;\":\"\u2309\",\"&RightDoubleBracket;\":\"\u27E7\",\"&RightDownTeeVector;\":\"\u295D\",\"&RightDownVector;\":\"\u21C2\",\"&RightDownVectorBar;\":\"\u2955\",\"&RightFloor;\":\"\u230B\",\"&RightTee;\":\"\u22A2\",\"&RightTeeArrow;\":\"\u21A6\",\"&RightTeeVector;\":\"\u295B\",\"&RightTriangle;\":\"\u22B3\",\"&RightTriangleBar;\":\"\u29D0\",\"&RightTriangleEqual;\":\"\u22B5\",\"&RightUpDownVector;\":\"\u294F\",\"&RightUpTeeVector;\":\"\u295C\",\"&RightUpVector;\":\"\u21BE\",\"&RightUpVectorBar;\":\"\u2954\",\"&RightVector;\":\"\u21C0\",\"&RightVectorBar;\":\"\u2953\",\"&Rightarrow;\":\"\u21D2\",\"&Ropf;\":\"\u211D\",\"&RoundImplies;\":\"\u2970\",\"&Rrightarrow;\":\"\u21DB\",\"&Rscr;\":\"\u211B\",\"&Rsh;\":\"\u21B1\",\"&RuleDelayed;\":\"\u29F4\",\"&SHCHcy;\":\"\u0429\",\"&SHcy;\":\"\u0428\",\"&SOFTcy;\":\"\u042C\",\"&Sacute;\":\"\u015A\",\"&Sc;\":\"\u2ABC\",\"&Scaron;\":\"\u0160\",\"&Scedil;\":\"\u015E\",\"&Scirc;\":\"\u015C\",\"&Scy;\":\"\u0421\",\"&Sfr;\":\"\uD835\uDD16\",\"&ShortDownArrow;\":\"\u2193\",\"&ShortLeftArrow;\":\"\u2190\",\"&ShortRightArrow;\":\"\u2192\",\"&ShortUpArrow;\":\"\u2191\",\"&Sigma;\":\"\u03A3\",\"&SmallCircle;\":\"\u2218\",\"&Sopf;\":\"\uD835\uDD4A\",\"&Sqrt;\":\"\u221A\",\"&Square;\":\"\u25A1\",\"&SquareIntersection;\":\"\u2293\",\"&SquareSubset;\":\"\u228F\",\"&SquareSubsetEqual;\":\"\u2291\",\"&SquareSuperset;\":\"\u2290\",\"&SquareSupersetEqual;\":\"\u2292\",\"&SquareUnion;\":\"\u2294\",\"&Sscr;\":\"\uD835\uDCAE\",\"&Star;\":\"\u22C6\",\"&Sub;\":\"\u22D0\",\"&Subset;\":\"\u22D0\",\"&SubsetEqual;\":\"\u2286\",\"&Succeeds;\":\"\u227B\",\"&SucceedsEqual;\":\"\u2AB0\",\"&SucceedsSlantEqual;\":\"\u227D\",\"&SucceedsTilde;\":\"\u227F\",\"&SuchThat;\":\"\u220B\",\"&Sum;\":\"\u2211\",\"&Sup;\":\"\u22D1\",\"&Superset;\":\"\u2283\",\"&SupersetEqual;\":\"\u2287\",\"&Supset;\":\"\u22D1\",\"&THORN\":\"\u00DE\",\"&THORN;\":\"\u00DE\",\"&TRADE;\":\"\u2122\",\"&TSHcy;\":\"\u040B\",\"&TScy;\":\"\u0426\",\"&Tab;\":\"\\t\",\"&Tau;\":\"\u03A4\",\"&Tcaron;\":\"\u0164\",\"&Tcedil;\":\"\u0162\",\"&Tcy;\":\"\u0422\",\"&Tfr;\":\"\uD835\uDD17\",\"&Therefore;\":\"\u2234\",\"&Theta;\":\"\u0398\",\"&ThickSpace;\":\"\u205F\u200A\",\"&ThinSpace;\":\"\u2009\",\"&Tilde;\":\"\u223C\",\"&TildeEqual;\":\"\u2243\",\"&TildeFullEqual;\":\"\u2245\",\"&TildeTilde;\":\"\u2248\",\"&Topf;\":\"\uD835\uDD4B\",\"&TripleDot;\":\"\u20DB\",\"&Tscr;\":\"\uD835\uDCAF\",\"&Tstrok;\":\"\u0166\",\"&Uacute\":\"\u00DA\",\"&Uacute;\":\"\u00DA\",\"&Uarr;\":\"\u219F\",\"&Uarrocir;\":\"\u2949\",\"&Ubrcy;\":\"\u040E\",\"&Ubreve;\":\"\u016C\",\"&Ucirc\":\"\u00DB\",\"&Ucirc;\":\"\u00DB\",\"&Ucy;\":\"\u0423\",\"&Udblac;\":\"\u0170\",\"&Ufr;\":\"\uD835\uDD18\",\"&Ugrave\":\"\u00D9\",\"&Ugrave;\":\"\u00D9\",\"&Umacr;\":\"\u016A\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"\u23DF\",\"&UnderBracket;\":\"\u23B5\",\"&UnderParenthesis;\":\"\u23DD\",\"&Union;\":\"\u22C3\",\"&UnionPlus;\":\"\u228E\",\"&Uogon;\":\"\u0172\",\"&Uopf;\":\"\uD835\uDD4C\",\"&UpArrow;\":\"\u2191\",\"&UpArrowBar;\":\"\u2912\",\"&UpArrowDownArrow;\":\"\u21C5\",\"&UpDownArrow;\":\"\u2195\",\"&UpEquilibrium;\":\"\u296E\",\"&UpTee;\":\"\u22A5\",\"&UpTeeArrow;\":\"\u21A5\",\"&Uparrow;\":\"\u21D1\",\"&Updownarrow;\":\"\u21D5\",\"&UpperLeftArrow;\":\"\u2196\",\"&UpperRightArrow;\":\"\u2197\",\"&Upsi;\":\"\u03D2\",\"&Upsilon;\":\"\u03A5\",\"&Uring;\":\"\u016E\",\"&Uscr;\":\"\uD835\uDCB0\",\"&Utilde;\":\"\u0168\",\"&Uuml\":\"\u00DC\",\"&Uuml;\":\"\u00DC\",\"&VDash;\":\"\u22AB\",\"&Vbar;\":\"\u2AEB\",\"&Vcy;\":\"\u0412\",\"&Vdash;\":\"\u22A9\",\"&Vdashl;\":\"\u2AE6\",\"&Vee;\":\"\u22C1\",\"&Verbar;\":\"\u2016\",\"&Vert;\":\"\u2016\",\"&VerticalBar;\":\"\u2223\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"\u2758\",\"&VerticalTilde;\":\"\u2240\",\"&VeryThinSpace;\":\"\u200A\",\"&Vfr;\":\"\uD835\uDD19\",\"&Vopf;\":\"\uD835\uDD4D\",\"&Vscr;\":\"\uD835\uDCB1\",\"&Vvdash;\":\"\u22AA\",\"&Wcirc;\":\"\u0174\",\"&Wedge;\":\"\u22C0\",\"&Wfr;\":\"\uD835\uDD1A\",\"&Wopf;\":\"\uD835\uDD4E\",\"&Wscr;\":\"\uD835\uDCB2\",\"&Xfr;\":\"\uD835\uDD1B\",\"&Xi;\":\"\u039E\",\"&Xopf;\":\"\uD835\uDD4F\",\"&Xscr;\":\"\uD835\uDCB3\",\"&YAcy;\":\"\u042F\",\"&YIcy;\":\"\u0407\",\"&YUcy;\":\"\u042E\",\"&Yacute\":\"\u00DD\",\"&Yacute;\":\"\u00DD\",\"&Ycirc;\":\"\u0176\",\"&Ycy;\":\"\u042B\",\"&Yfr;\":\"\uD835\uDD1C\",\"&Yopf;\":\"\uD835\uDD50\",\"&Yscr;\":\"\uD835\uDCB4\",\"&Yuml;\":\"\u0178\",\"&ZHcy;\":\"\u0416\",\"&Zacute;\":\"\u0179\",\"&Zcaron;\":\"\u017D\",\"&Zcy;\":\"\u0417\",\"&Zdot;\":\"\u017B\",\"&ZeroWidthSpace;\":\"\u200B\",\"&Zeta;\":\"\u0396\",\"&Zfr;\":\"\u2128\",\"&Zopf;\":\"\u2124\",\"&Zscr;\":\"\uD835\uDCB5\",\"&aacute\":\"\u00E1\",\"&aacute;\":\"\u00E1\",\"&abreve;\":\"\u0103\",\"&ac;\":\"\u223E\",\"&acE;\":\"\u223E\u0333\",\"&acd;\":\"\u223F\",\"&acirc\":\"\u00E2\",\"&acirc;\":\"\u00E2\",\"&acute\":\"\u00B4\",\"&acute;\":\"\u00B4\",\"&acy;\":\"\u0430\",\"&aelig\":\"\u00E6\",\"&aelig;\":\"\u00E6\",\"&af;\":\"\u2061\",\"&afr;\":\"\uD835\uDD1E\",\"&agrave\":\"\u00E0\",\"&agrave;\":\"\u00E0\",\"&alefsym;\":\"\u2135\",\"&aleph;\":\"\u2135\",\"&alpha;\":\"\u03B1\",\"&amacr;\":\"\u0101\",\"&amalg;\":\"\u2A3F\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"\u2227\",\"&andand;\":\"\u2A55\",\"&andd;\":\"\u2A5C\",\"&andslope;\":\"\u2A58\",\"&andv;\":\"\u2A5A\",\"&ang;\":\"\u2220\",\"&ange;\":\"\u29A4\",\"&angle;\":\"\u2220\",\"&angmsd;\":\"\u2221\",\"&angmsdaa;\":\"\u29A8\",\"&angmsdab;\":\"\u29A9\",\"&angmsdac;\":\"\u29AA\",\"&angmsdad;\":\"\u29AB\",\"&angmsdae;\":\"\u29AC\",\"&angmsdaf;\":\"\u29AD\",\"&angmsdag;\":\"\u29AE\",\"&angmsdah;\":\"\u29AF\",\"&angrt;\":\"\u221F\",\"&angrtvb;\":\"\u22BE\",\"&angrtvbd;\":\"\u299D\",\"&angsph;\":\"\u2222\",\"&angst;\":\"\u00C5\",\"&angzarr;\":\"\u237C\",\"&aogon;\":\"\u0105\",\"&aopf;\":\"\uD835\uDD52\",\"&ap;\":\"\u2248\",\"&apE;\":\"\u2A70\",\"&apacir;\":\"\u2A6F\",\"&ape;\":\"\u224A\",\"&apid;\":\"\u224B\",\"&apos;\":\"'\",\"&approx;\":\"\u2248\",\"&approxeq;\":\"\u224A\",\"&aring\":\"\u00E5\",\"&aring;\":\"\u00E5\",\"&ascr;\":\"\uD835\uDCB6\",\"&ast;\":\"*\",\"&asymp;\":\"\u2248\",\"&asympeq;\":\"\u224D\",\"&atilde\":\"\u00E3\",\"&atilde;\":\"\u00E3\",\"&auml\":\"\u00E4\",\"&auml;\":\"\u00E4\",\"&awconint;\":\"\u2233\",\"&awint;\":\"\u2A11\",\"&bNot;\":\"\u2AED\",\"&backcong;\":\"\u224C\",\"&backepsilon;\":\"\u03F6\",\"&backprime;\":\"\u2035\",\"&backsim;\":\"\u223D\",\"&backsimeq;\":\"\u22CD\",\"&barvee;\":\"\u22BD\",\"&barwed;\":\"\u2305\",\"&barwedge;\":\"\u2305\",\"&bbrk;\":\"\u23B5\",\"&bbrktbrk;\":\"\u23B6\",\"&bcong;\":\"\u224C\",\"&bcy;\":\"\u0431\",\"&bdquo;\":\"\u201E\",\"&becaus;\":\"\u2235\",\"&because;\":\"\u2235\",\"&bemptyv;\":\"\u29B0\",\"&bepsi;\":\"\u03F6\",\"&bernou;\":\"\u212C\",\"&beta;\":\"\u03B2\",\"&beth;\":\"\u2136\",\"&between;\":\"\u226C\",\"&bfr;\":\"\uD835\uDD1F\",\"&bigcap;\":\"\u22C2\",\"&bigcirc;\":\"\u25EF\",\"&bigcup;\":\"\u22C3\",\"&bigodot;\":\"\u2A00\",\"&bigoplus;\":\"\u2A01\",\"&bigotimes;\":\"\u2A02\",\"&bigsqcup;\":\"\u2A06\",\"&bigstar;\":\"\u2605\",\"&bigtriangledown;\":\"\u25BD\",\"&bigtriangleup;\":\"\u25B3\",\"&biguplus;\":\"\u2A04\",\"&bigvee;\":\"\u22C1\",\"&bigwedge;\":\"\u22C0\",\"&bkarow;\":\"\u290D\",\"&blacklozenge;\":\"\u29EB\",\"&blacksquare;\":\"\u25AA\",\"&blacktriangle;\":\"\u25B4\",\"&blacktriangledown;\":\"\u25BE\",\"&blacktriangleleft;\":\"\u25C2\",\"&blacktriangleright;\":\"\u25B8\",\"&blank;\":\"\u2423\",\"&blk12;\":\"\u2592\",\"&blk14;\":\"\u2591\",\"&blk34;\":\"\u2593\",\"&block;\":\"\u2588\",\"&bne;\":\"=\u20E5\",\"&bnequiv;\":\"\u2261\u20E5\",\"&bnot;\":\"\u2310\",\"&bopf;\":\"\uD835\uDD53\",\"&bot;\":\"\u22A5\",\"&bottom;\":\"\u22A5\",\"&bowtie;\":\"\u22C8\",\"&boxDL;\":\"\u2557\",\"&boxDR;\":\"\u2554\",\"&boxDl;\":\"\u2556\",\"&boxDr;\":\"\u2553\",\"&boxH;\":\"\u2550\",\"&boxHD;\":\"\u2566\",\"&boxHU;\":\"\u2569\",\"&boxHd;\":\"\u2564\",\"&boxHu;\":\"\u2567\",\"&boxUL;\":\"\u255D\",\"&boxUR;\":\"\u255A\",\"&boxUl;\":\"\u255C\",\"&boxUr;\":\"\u2559\",\"&boxV;\":\"\u2551\",\"&boxVH;\":\"\u256C\",\"&boxVL;\":\"\u2563\",\"&boxVR;\":\"\u2560\",\"&boxVh;\":\"\u256B\",\"&boxVl;\":\"\u2562\",\"&boxVr;\":\"\u255F\",\"&boxbox;\":\"\u29C9\",\"&boxdL;\":\"\u2555\",\"&boxdR;\":\"\u2552\",\"&boxdl;\":\"\u2510\",\"&boxdr;\":\"\u250C\",\"&boxh;\":\"\u2500\",\"&boxhD;\":\"\u2565\",\"&boxhU;\":\"\u2568\",\"&boxhd;\":\"\u252C\",\"&boxhu;\":\"\u2534\",\"&boxminus;\":\"\u229F\",\"&boxplus;\":\"\u229E\",\"&boxtimes;\":\"\u22A0\",\"&boxuL;\":\"\u255B\",\"&boxuR;\":\"\u2558\",\"&boxul;\":\"\u2518\",\"&boxur;\":\"\u2514\",\"&boxv;\":\"\u2502\",\"&boxvH;\":\"\u256A\",\"&boxvL;\":\"\u2561\",\"&boxvR;\":\"\u255E\",\"&boxvh;\":\"\u253C\",\"&boxvl;\":\"\u2524\",\"&boxvr;\":\"\u251C\",\"&bprime;\":\"\u2035\",\"&breve;\":\"\u02D8\",\"&brvbar\":\"\u00A6\",\"&brvbar;\":\"\u00A6\",\"&bscr;\":\"\uD835\uDCB7\",\"&bsemi;\":\"\u204F\",\"&bsim;\":\"\u223D\",\"&bsime;\":\"\u22CD\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"\u29C5\",\"&bsolhsub;\":\"\u27C8\",\"&bull;\":\"\u2022\",\"&bullet;\":\"\u2022\",\"&bump;\":\"\u224E\",\"&bumpE;\":\"\u2AAE\",\"&bumpe;\":\"\u224F\",\"&bumpeq;\":\"\u224F\",\"&cacute;\":\"\u0107\",\"&cap;\":\"\u2229\",\"&capand;\":\"\u2A44\",\"&capbrcup;\":\"\u2A49\",\"&capcap;\":\"\u2A4B\",\"&capcup;\":\"\u2A47\",\"&capdot;\":\"\u2A40\",\"&caps;\":\"\u2229\uFE00\",\"&caret;\":\"\u2041\",\"&caron;\":\"\u02C7\",\"&ccaps;\":\"\u2A4D\",\"&ccaron;\":\"\u010D\",\"&ccedil\":\"\u00E7\",\"&ccedil;\":\"\u00E7\",\"&ccirc;\":\"\u0109\",\"&ccups;\":\"\u2A4C\",\"&ccupssm;\":\"\u2A50\",\"&cdot;\":\"\u010B\",\"&cedil\":\"\u00B8\",\"&cedil;\":\"\u00B8\",\"&cemptyv;\":\"\u29B2\",\"&cent\":\"\u00A2\",\"&cent;\":\"\u00A2\",\"&centerdot;\":\"\u00B7\",\"&cfr;\":\"\uD835\uDD20\",\"&chcy;\":\"\u0447\",\"&check;\":\"\u2713\",\"&checkmark;\":\"\u2713\",\"&chi;\":\"\u03C7\",\"&cir;\":\"\u25CB\",\"&cirE;\":\"\u29C3\",\"&circ;\":\"\u02C6\",\"&circeq;\":\"\u2257\",\"&circlearrowleft;\":\"\u21BA\",\"&circlearrowright;\":\"\u21BB\",\"&circledR;\":\"\u00AE\",\"&circledS;\":\"\u24C8\",\"&circledast;\":\"\u229B\",\"&circledcirc;\":\"\u229A\",\"&circleddash;\":\"\u229D\",\"&cire;\":\"\u2257\",\"&cirfnint;\":\"\u2A10\",\"&cirmid;\":\"\u2AEF\",\"&cirscir;\":\"\u29C2\",\"&clubs;\":\"\u2663\",\"&clubsuit;\":\"\u2663\",\"&colon;\":\":\",\"&colone;\":\"\u2254\",\"&coloneq;\":\"\u2254\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"\u2201\",\"&compfn;\":\"\u2218\",\"&complement;\":\"\u2201\",\"&complexes;\":\"\u2102\",\"&cong;\":\"\u2245\",\"&congdot;\":\"\u2A6D\",\"&conint;\":\"\u222E\",\"&copf;\":\"\uD835\uDD54\",\"&coprod;\":\"\u2210\",\"&copy\":\"\u00A9\",\"&copy;\":\"\u00A9\",\"&copysr;\":\"\u2117\",\"&crarr;\":\"\u21B5\",\"&cross;\":\"\u2717\",\"&cscr;\":\"\uD835\uDCB8\",\"&csub;\":\"\u2ACF\",\"&csube;\":\"\u2AD1\",\"&csup;\":\"\u2AD0\",\"&csupe;\":\"\u2AD2\",\"&ctdot;\":\"\u22EF\",\"&cudarrl;\":\"\u2938\",\"&cudarrr;\":\"\u2935\",\"&cuepr;\":\"\u22DE\",\"&cuesc;\":\"\u22DF\",\"&cularr;\":\"\u21B6\",\"&cularrp;\":\"\u293D\",\"&cup;\":\"\u222A\",\"&cupbrcap;\":\"\u2A48\",\"&cupcap;\":\"\u2A46\",\"&cupcup;\":\"\u2A4A\",\"&cupdot;\":\"\u228D\",\"&cupor;\":\"\u2A45\",\"&cups;\":\"\u222A\uFE00\",\"&curarr;\":\"\u21B7\",\"&curarrm;\":\"\u293C\",\"&curlyeqprec;\":\"\u22DE\",\"&curlyeqsucc;\":\"\u22DF\",\"&curlyvee;\":\"\u22CE\",\"&curlywedge;\":\"\u22CF\",\"&curren\":\"\u00A4\",\"&curren;\":\"\u00A4\",\"&curvearrowleft;\":\"\u21B6\",\"&curvearrowright;\":\"\u21B7\",\"&cuvee;\":\"\u22CE\",\"&cuwed;\":\"\u22CF\",\"&cwconint;\":\"\u2232\",\"&cwint;\":\"\u2231\",\"&cylcty;\":\"\u232D\",\"&dArr;\":\"\u21D3\",\"&dHar;\":\"\u2965\",\"&dagger;\":\"\u2020\",\"&daleth;\":\"\u2138\",\"&darr;\":\"\u2193\",\"&dash;\":\"\u2010\",\"&dashv;\":\"\u22A3\",\"&dbkarow;\":\"\u290F\",\"&dblac;\":\"\u02DD\",\"&dcaron;\":\"\u010F\",\"&dcy;\":\"\u0434\",\"&dd;\":\"\u2146\",\"&ddagger;\":\"\u2021\",\"&ddarr;\":\"\u21CA\",\"&ddotseq;\":\"\u2A77\",\"&deg\":\"\u00B0\",\"&deg;\":\"\u00B0\",\"&delta;\":\"\u03B4\",\"&demptyv;\":\"\u29B1\",\"&dfisht;\":\"\u297F\",\"&dfr;\":\"\uD835\uDD21\",\"&dharl;\":\"\u21C3\",\"&dharr;\":\"\u21C2\",\"&diam;\":\"\u22C4\",\"&diamond;\":\"\u22C4\",\"&diamondsuit;\":\"\u2666\",\"&diams;\":\"\u2666\",\"&die;\":\"\u00A8\",\"&digamma;\":\"\u03DD\",\"&disin;\":\"\u22F2\",\"&div;\":\"\u00F7\",\"&divide\":\"\u00F7\",\"&divide;\":\"\u00F7\",\"&divideontimes;\":\"\u22C7\",\"&divonx;\":\"\u22C7\",\"&djcy;\":\"\u0452\",\"&dlcorn;\":\"\u231E\",\"&dlcrop;\":\"\u230D\",\"&dollar;\":\"$\",\"&dopf;\":\"\uD835\uDD55\",\"&dot;\":\"\u02D9\",\"&doteq;\":\"\u2250\",\"&doteqdot;\":\"\u2251\",\"&dotminus;\":\"\u2238\",\"&dotplus;\":\"\u2214\",\"&dotsquare;\":\"\u22A1\",\"&doublebarwedge;\":\"\u2306\",\"&downarrow;\":\"\u2193\",\"&downdownarrows;\":\"\u21CA\",\"&downharpoonleft;\":\"\u21C3\",\"&downharpoonright;\":\"\u21C2\",\"&drbkarow;\":\"\u2910\",\"&drcorn;\":\"\u231F\",\"&drcrop;\":\"\u230C\",\"&dscr;\":\"\uD835\uDCB9\",\"&dscy;\":\"\u0455\",\"&dsol;\":\"\u29F6\",\"&dstrok;\":\"\u0111\",\"&dtdot;\":\"\u22F1\",\"&dtri;\":\"\u25BF\",\"&dtrif;\":\"\u25BE\",\"&duarr;\":\"\u21F5\",\"&duhar;\":\"\u296F\",\"&dwangle;\":\"\u29A6\",\"&dzcy;\":\"\u045F\",\"&dzigrarr;\":\"\u27FF\",\"&eDDot;\":\"\u2A77\",\"&eDot;\":\"\u2251\",\"&eacute\":\"\u00E9\",\"&eacute;\":\"\u00E9\",\"&easter;\":\"\u2A6E\",\"&ecaron;\":\"\u011B\",\"&ecir;\":\"\u2256\",\"&ecirc\":\"\u00EA\",\"&ecirc;\":\"\u00EA\",\"&ecolon;\":\"\u2255\",\"&ecy;\":\"\u044D\",\"&edot;\":\"\u0117\",\"&ee;\":\"\u2147\",\"&efDot;\":\"\u2252\",\"&efr;\":\"\uD835\uDD22\",\"&eg;\":\"\u2A9A\",\"&egrave\":\"\u00E8\",\"&egrave;\":\"\u00E8\",\"&egs;\":\"\u2A96\",\"&egsdot;\":\"\u2A98\",\"&el;\":\"\u2A99\",\"&elinters;\":\"\u23E7\",\"&ell;\":\"\u2113\",\"&els;\":\"\u2A95\",\"&elsdot;\":\"\u2A97\",\"&emacr;\":\"\u0113\",\"&empty;\":\"\u2205\",\"&emptyset;\":\"\u2205\",\"&emptyv;\":\"\u2205\",\"&emsp13;\":\"\u2004\",\"&emsp14;\":\"\u2005\",\"&emsp;\":\"\u2003\",\"&eng;\":\"\u014B\",\"&ensp;\":\"\u2002\",\"&eogon;\":\"\u0119\",\"&eopf;\":\"\uD835\uDD56\",\"&epar;\":\"\u22D5\",\"&eparsl;\":\"\u29E3\",\"&eplus;\":\"\u2A71\",\"&epsi;\":\"\u03B5\",\"&epsilon;\":\"\u03B5\",\"&epsiv;\":\"\u03F5\",\"&eqcirc;\":\"\u2256\",\"&eqcolon;\":\"\u2255\",\"&eqsim;\":\"\u2242\",\"&eqslantgtr;\":\"\u2A96\",\"&eqslantless;\":\"\u2A95\",\"&equals;\":\"=\",\"&equest;\":\"\u225F\",\"&equiv;\":\"\u2261\",\"&equivDD;\":\"\u2A78\",\"&eqvparsl;\":\"\u29E5\",\"&erDot;\":\"\u2253\",\"&erarr;\":\"\u2971\",\"&escr;\":\"\u212F\",\"&esdot;\":\"\u2250\",\"&esim;\":\"\u2242\",\"&eta;\":\"\u03B7\",\"&eth\":\"\u00F0\",\"&eth;\":\"\u00F0\",\"&euml\":\"\u00EB\",\"&euml;\":\"\u00EB\",\"&euro;\":\"\u20AC\",\"&excl;\":\"!\",\"&exist;\":\"\u2203\",\"&expectation;\":\"\u2130\",\"&exponentiale;\":\"\u2147\",\"&fallingdotseq;\":\"\u2252\",\"&fcy;\":\"\u0444\",\"&female;\":\"\u2640\",\"&ffilig;\":\"\uFB03\",\"&fflig;\":\"\uFB00\",\"&ffllig;\":\"\uFB04\",\"&ffr;\":\"\uD835\uDD23\",\"&filig;\":\"\uFB01\",\"&fjlig;\":\"fj\",\"&flat;\":\"\u266D\",\"&fllig;\":\"\uFB02\",\"&fltns;\":\"\u25B1\",\"&fnof;\":\"\u0192\",\"&fopf;\":\"\uD835\uDD57\",\"&forall;\":\"\u2200\",\"&fork;\":\"\u22D4\",\"&forkv;\":\"\u2AD9\",\"&fpartint;\":\"\u2A0D\",\"&frac12\":\"\u00BD\",\"&frac12;\":\"\u00BD\",\"&frac13;\":\"\u2153\",\"&frac14\":\"\u00BC\",\"&frac14;\":\"\u00BC\",\"&frac15;\":\"\u2155\",\"&frac16;\":\"\u2159\",\"&frac18;\":\"\u215B\",\"&frac23;\":\"\u2154\",\"&frac25;\":\"\u2156\",\"&frac34\":\"\u00BE\",\"&frac34;\":\"\u00BE\",\"&frac35;\":\"\u2157\",\"&frac38;\":\"\u215C\",\"&frac45;\":\"\u2158\",\"&frac56;\":\"\u215A\",\"&frac58;\":\"\u215D\",\"&frac78;\":\"\u215E\",\"&frasl;\":\"\u2044\",\"&frown;\":\"\u2322\",\"&fscr;\":\"\uD835\uDCBB\",\"&gE;\":\"\u2267\",\"&gEl;\":\"\u2A8C\",\"&gacute;\":\"\u01F5\",\"&gamma;\":\"\u03B3\",\"&gammad;\":\"\u03DD\",\"&gap;\":\"\u2A86\",\"&gbreve;\":\"\u011F\",\"&gcirc;\":\"\u011D\",\"&gcy;\":\"\u0433\",\"&gdot;\":\"\u0121\",\"&ge;\":\"\u2265\",\"&gel;\":\"\u22DB\",\"&geq;\":\"\u2265\",\"&geqq;\":\"\u2267\",\"&geqslant;\":\"\u2A7E\",\"&ges;\":\"\u2A7E\",\"&gescc;\":\"\u2AA9\",\"&gesdot;\":\"\u2A80\",\"&gesdoto;\":\"\u2A82\",\"&gesdotol;\":\"\u2A84\",\"&gesl;\":\"\u22DB\uFE00\",\"&gesles;\":\"\u2A94\",\"&gfr;\":\"\uD835\uDD24\",\"&gg;\":\"\u226B\",\"&ggg;\":\"\u22D9\",\"&gimel;\":\"\u2137\",\"&gjcy;\":\"\u0453\",\"&gl;\":\"\u2277\",\"&glE;\":\"\u2A92\",\"&gla;\":\"\u2AA5\",\"&glj;\":\"\u2AA4\",\"&gnE;\":\"\u2269\",\"&gnap;\":\"\u2A8A\",\"&gnapprox;\":\"\u2A8A\",\"&gne;\":\"\u2A88\",\"&gneq;\":\"\u2A88\",\"&gneqq;\":\"\u2269\",\"&gnsim;\":\"\u22E7\",\"&gopf;\":\"\uD835\uDD58\",\"&grave;\":\"`\",\"&gscr;\":\"\u210A\",\"&gsim;\":\"\u2273\",\"&gsime;\":\"\u2A8E\",\"&gsiml;\":\"\u2A90\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"\u2AA7\",\"&gtcir;\":\"\u2A7A\",\"&gtdot;\":\"\u22D7\",\"&gtlPar;\":\"\u2995\",\"&gtquest;\":\"\u2A7C\",\"&gtrapprox;\":\"\u2A86\",\"&gtrarr;\":\"\u2978\",\"&gtrdot;\":\"\u22D7\",\"&gtreqless;\":\"\u22DB\",\"&gtreqqless;\":\"\u2A8C\",\"&gtrless;\":\"\u2277\",\"&gtrsim;\":\"\u2273\",\"&gvertneqq;\":\"\u2269\uFE00\",\"&gvnE;\":\"\u2269\uFE00\",\"&hArr;\":\"\u21D4\",\"&hairsp;\":\"\u200A\",\"&half;\":\"\u00BD\",\"&hamilt;\":\"\u210B\",\"&hardcy;\":\"\u044A\",\"&harr;\":\"\u2194\",\"&harrcir;\":\"\u2948\",\"&harrw;\":\"\u21AD\",\"&hbar;\":\"\u210F\",\"&hcirc;\":\"\u0125\",\"&hearts;\":\"\u2665\",\"&heartsuit;\":\"\u2665\",\"&hellip;\":\"\u2026\",\"&hercon;\":\"\u22B9\",\"&hfr;\":\"\uD835\uDD25\",\"&hksearow;\":\"\u2925\",\"&hkswarow;\":\"\u2926\",\"&hoarr;\":\"\u21FF\",\"&homtht;\":\"\u223B\",\"&hookleftarrow;\":\"\u21A9\",\"&hookrightarrow;\":\"\u21AA\",\"&hopf;\":\"\uD835\uDD59\",\"&horbar;\":\"\u2015\",\"&hscr;\":\"\uD835\uDCBD\",\"&hslash;\":\"\u210F\",\"&hstrok;\":\"\u0127\",\"&hybull;\":\"\u2043\",\"&hyphen;\":\"\u2010\",\"&iacute\":\"\u00ED\",\"&iacute;\":\"\u00ED\",\"&ic;\":\"\u2063\",\"&icirc\":\"\u00EE\",\"&icirc;\":\"\u00EE\",\"&icy;\":\"\u0438\",\"&iecy;\":\"\u0435\",\"&iexcl\":\"\u00A1\",\"&iexcl;\":\"\u00A1\",\"&iff;\":\"\u21D4\",\"&ifr;\":\"\uD835\uDD26\",\"&igrave\":\"\u00EC\",\"&igrave;\":\"\u00EC\",\"&ii;\":\"\u2148\",\"&iiiint;\":\"\u2A0C\",\"&iiint;\":\"\u222D\",\"&iinfin;\":\"\u29DC\",\"&iiota;\":\"\u2129\",\"&ijlig;\":\"\u0133\",\"&imacr;\":\"\u012B\",\"&image;\":\"\u2111\",\"&imagline;\":\"\u2110\",\"&imagpart;\":\"\u2111\",\"&imath;\":\"\u0131\",\"&imof;\":\"\u22B7\",\"&imped;\":\"\u01B5\",\"&in;\":\"\u2208\",\"&incare;\":\"\u2105\",\"&infin;\":\"\u221E\",\"&infintie;\":\"\u29DD\",\"&inodot;\":\"\u0131\",\"&int;\":\"\u222B\",\"&intcal;\":\"\u22BA\",\"&integers;\":\"\u2124\",\"&intercal;\":\"\u22BA\",\"&intlarhk;\":\"\u2A17\",\"&intprod;\":\"\u2A3C\",\"&iocy;\":\"\u0451\",\"&iogon;\":\"\u012F\",\"&iopf;\":\"\uD835\uDD5A\",\"&iota;\":\"\u03B9\",\"&iprod;\":\"\u2A3C\",\"&iquest\":\"\u00BF\",\"&iquest;\":\"\u00BF\",\"&iscr;\":\"\uD835\uDCBE\",\"&isin;\":\"\u2208\",\"&isinE;\":\"\u22F9\",\"&isindot;\":\"\u22F5\",\"&isins;\":\"\u22F4\",\"&isinsv;\":\"\u22F3\",\"&isinv;\":\"\u2208\",\"&it;\":\"\u2062\",\"&itilde;\":\"\u0129\",\"&iukcy;\":\"\u0456\",\"&iuml\":\"\u00EF\",\"&iuml;\":\"\u00EF\",\"&jcirc;\":\"\u0135\",\"&jcy;\":\"\u0439\",\"&jfr;\":\"\uD835\uDD27\",\"&jmath;\":\"\u0237\",\"&jopf;\":\"\uD835\uDD5B\",\"&jscr;\":\"\uD835\uDCBF\",\"&jsercy;\":\"\u0458\",\"&jukcy;\":\"\u0454\",\"&kappa;\":\"\u03BA\",\"&kappav;\":\"\u03F0\",\"&kcedil;\":\"\u0137\",\"&kcy;\":\"\u043A\",\"&kfr;\":\"\uD835\uDD28\",\"&kgreen;\":\"\u0138\",\"&khcy;\":\"\u0445\",\"&kjcy;\":\"\u045C\",\"&kopf;\":\"\uD835\uDD5C\",\"&kscr;\":\"\uD835\uDCC0\",\"&lAarr;\":\"\u21DA\",\"&lArr;\":\"\u21D0\",\"&lAtail;\":\"\u291B\",\"&lBarr;\":\"\u290E\",\"&lE;\":\"\u2266\",\"&lEg;\":\"\u2A8B\",\"&lHar;\":\"\u2962\",\"&lacute;\":\"\u013A\",\"&laemptyv;\":\"\u29B4\",\"&lagran;\":\"\u2112\",\"&lambda;\":\"\u03BB\",\"&lang;\":\"\u27E8\",\"&langd;\":\"\u2991\",\"&langle;\":\"\u27E8\",\"&lap;\":\"\u2A85\",\"&laquo\":\"\u00AB\",\"&laquo;\":\"\u00AB\",\"&larr;\":\"\u2190\",\"&larrb;\":\"\u21E4\",\"&larrbfs;\":\"\u291F\",\"&larrfs;\":\"\u291D\",\"&larrhk;\":\"\u21A9\",\"&larrlp;\":\"\u21AB\",\"&larrpl;\":\"\u2939\",\"&larrsim;\":\"\u2973\",\"&larrtl;\":\"\u21A2\",\"&lat;\":\"\u2AAB\",\"&latail;\":\"\u2919\",\"&late;\":\"\u2AAD\",\"&lates;\":\"\u2AAD\uFE00\",\"&lbarr;\":\"\u290C\",\"&lbbrk;\":\"\u2772\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"\u298B\",\"&lbrksld;\":\"\u298F\",\"&lbrkslu;\":\"\u298D\",\"&lcaron;\":\"\u013E\",\"&lcedil;\":\"\u013C\",\"&lceil;\":\"\u2308\",\"&lcub;\":\"{\",\"&lcy;\":\"\u043B\",\"&ldca;\":\"\u2936\",\"&ldquo;\":\"\u201C\",\"&ldquor;\":\"\u201E\",\"&ldrdhar;\":\"\u2967\",\"&ldrushar;\":\"\u294B\",\"&ldsh;\":\"\u21B2\",\"&le;\":\"\u2264\",\"&leftarrow;\":\"\u2190\",\"&leftarrowtail;\":\"\u21A2\",\"&leftharpoondown;\":\"\u21BD\",\"&leftharpoonup;\":\"\u21BC\",\"&leftleftarrows;\":\"\u21C7\",\"&leftrightarrow;\":\"\u2194\",\"&leftrightarrows;\":\"\u21C6\",\"&leftrightharpoons;\":\"\u21CB\",\"&leftrightsquigarrow;\":\"\u21AD\",\"&leftthreetimes;\":\"\u22CB\",\"&leg;\":\"\u22DA\",\"&leq;\":\"\u2264\",\"&leqq;\":\"\u2266\",\"&leqslant;\":\"\u2A7D\",\"&les;\":\"\u2A7D\",\"&lescc;\":\"\u2AA8\",\"&lesdot;\":\"\u2A7F\",\"&lesdoto;\":\"\u2A81\",\"&lesdotor;\":\"\u2A83\",\"&lesg;\":\"\u22DA\uFE00\",\"&lesges;\":\"\u2A93\",\"&lessapprox;\":\"\u2A85\",\"&lessdot;\":\"\u22D6\",\"&lesseqgtr;\":\"\u22DA\",\"&lesseqqgtr;\":\"\u2A8B\",\"&lessgtr;\":\"\u2276\",\"&lesssim;\":\"\u2272\",\"&lfisht;\":\"\u297C\",\"&lfloor;\":\"\u230A\",\"&lfr;\":\"\uD835\uDD29\",\"&lg;\":\"\u2276\",\"&lgE;\":\"\u2A91\",\"&lhard;\":\"\u21BD\",\"&lharu;\":\"\u21BC\",\"&lharul;\":\"\u296A\",\"&lhblk;\":\"\u2584\",\"&ljcy;\":\"\u0459\",\"&ll;\":\"\u226A\",\"&llarr;\":\"\u21C7\",\"&llcorner;\":\"\u231E\",\"&llhard;\":\"\u296B\",\"&lltri;\":\"\u25FA\",\"&lmidot;\":\"\u0140\",\"&lmoust;\":\"\u23B0\",\"&lmoustache;\":\"\u23B0\",\"&lnE;\":\"\u2268\",\"&lnap;\":\"\u2A89\",\"&lnapprox;\":\"\u2A89\",\"&lne;\":\"\u2A87\",\"&lneq;\":\"\u2A87\",\"&lneqq;\":\"\u2268\",\"&lnsim;\":\"\u22E6\",\"&loang;\":\"\u27EC\",\"&loarr;\":\"\u21FD\",\"&lobrk;\":\"\u27E6\",\"&longleftarrow;\":\"\u27F5\",\"&longleftrightarrow;\":\"\u27F7\",\"&longmapsto;\":\"\u27FC\",\"&longrightarrow;\":\"\u27F6\",\"&looparrowleft;\":\"\u21AB\",\"&looparrowright;\":\"\u21AC\",\"&lopar;\":\"\u2985\",\"&lopf;\":\"\uD835\uDD5D\",\"&loplus;\":\"\u2A2D\",\"&lotimes;\":\"\u2A34\",\"&lowast;\":\"\u2217\",\"&lowbar;\":\"_\",\"&loz;\":\"\u25CA\",\"&lozenge;\":\"\u25CA\",\"&lozf;\":\"\u29EB\",\"&lpar;\":\"(\",\"&lparlt;\":\"\u2993\",\"&lrarr;\":\"\u21C6\",\"&lrcorner;\":\"\u231F\",\"&lrhar;\":\"\u21CB\",\"&lrhard;\":\"\u296D\",\"&lrm;\":\"\u200E\",\"&lrtri;\":\"\u22BF\",\"&lsaquo;\":\"\u2039\",\"&lscr;\":\"\uD835\uDCC1\",\"&lsh;\":\"\u21B0\",\"&lsim;\":\"\u2272\",\"&lsime;\":\"\u2A8D\",\"&lsimg;\":\"\u2A8F\",\"&lsqb;\":\"[\",\"&lsquo;\":\"\u2018\",\"&lsquor;\":\"\u201A\",\"&lstrok;\":\"\u0142\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"\u2AA6\",\"&ltcir;\":\"\u2A79\",\"&ltdot;\":\"\u22D6\",\"&lthree;\":\"\u22CB\",\"&ltimes;\":\"\u22C9\",\"&ltlarr;\":\"\u2976\",\"&ltquest;\":\"\u2A7B\",\"&ltrPar;\":\"\u2996\",\"&ltri;\":\"\u25C3\",\"&ltrie;\":\"\u22B4\",\"&ltrif;\":\"\u25C2\",\"&lurdshar;\":\"\u294A\",\"&luruhar;\":\"\u2966\",\"&lvertneqq;\":\"\u2268\uFE00\",\"&lvnE;\":\"\u2268\uFE00\",\"&mDDot;\":\"\u223A\",\"&macr\":\"\u00AF\",\"&macr;\":\"\u00AF\",\"&male;\":\"\u2642\",\"&malt;\":\"\u2720\",\"&maltese;\":\"\u2720\",\"&map;\":\"\u21A6\",\"&mapsto;\":\"\u21A6\",\"&mapstodown;\":\"\u21A7\",\"&mapstoleft;\":\"\u21A4\",\"&mapstoup;\":\"\u21A5\",\"&marker;\":\"\u25AE\",\"&mcomma;\":\"\u2A29\",\"&mcy;\":\"\u043C\",\"&mdash;\":\"\u2014\",\"&measuredangle;\":\"\u2221\",\"&mfr;\":\"\uD835\uDD2A\",\"&mho;\":\"\u2127\",\"&micro\":\"\u00B5\",\"&micro;\":\"\u00B5\",\"&mid;\":\"\u2223\",\"&midast;\":\"*\",\"&midcir;\":\"\u2AF0\",\"&middot\":\"\u00B7\",\"&middot;\":\"\u00B7\",\"&minus;\":\"\u2212\",\"&minusb;\":\"\u229F\",\"&minusd;\":\"\u2238\",\"&minusdu;\":\"\u2A2A\",\"&mlcp;\":\"\u2ADB\",\"&mldr;\":\"\u2026\",\"&mnplus;\":\"\u2213\",\"&models;\":\"\u22A7\",\"&mopf;\":\"\uD835\uDD5E\",\"&mp;\":\"\u2213\",\"&mscr;\":\"\uD835\uDCC2\",\"&mstpos;\":\"\u223E\",\"&mu;\":\"\u03BC\",\"&multimap;\":\"\u22B8\",\"&mumap;\":\"\u22B8\",\"&nGg;\":\"\u22D9\u0338\",\"&nGt;\":\"\u226B\u20D2\",\"&nGtv;\":\"\u226B\u0338\",\"&nLeftarrow;\":\"\u21CD\",\"&nLeftrightarrow;\":\"\u21CE\",\"&nLl;\":\"\u22D8\u0338\",\"&nLt;\":\"\u226A\u20D2\",\"&nLtv;\":\"\u226A\u0338\",\"&nRightarrow;\":\"\u21CF\",\"&nVDash;\":\"\u22AF\",\"&nVdash;\":\"\u22AE\",\"&nabla;\":\"\u2207\",\"&nacute;\":\"\u0144\",\"&nang;\":\"\u2220\u20D2\",\"&nap;\":\"\u2249\",\"&napE;\":\"\u2A70\u0338\",\"&napid;\":\"\u224B\u0338\",\"&napos;\":\"\u0149\",\"&napprox;\":\"\u2249\",\"&natur;\":\"\u266E\",\"&natural;\":\"\u266E\",\"&naturals;\":\"\u2115\",\"&nbsp\":\"\u00A0\",\"&nbsp;\":\"\u00A0\",\"&nbump;\":\"\u224E\u0338\",\"&nbumpe;\":\"\u224F\u0338\",\"&ncap;\":\"\u2A43\",\"&ncaron;\":\"\u0148\",\"&ncedil;\":\"\u0146\",\"&ncong;\":\"\u2247\",\"&ncongdot;\":\"\u2A6D\u0338\",\"&ncup;\":\"\u2A42\",\"&ncy;\":\"\u043D\",\"&ndash;\":\"\u2013\",\"&ne;\":\"\u2260\",\"&neArr;\":\"\u21D7\",\"&nearhk;\":\"\u2924\",\"&nearr;\":\"\u2197\",\"&nearrow;\":\"\u2197\",\"&nedot;\":\"\u2250\u0338\",\"&nequiv;\":\"\u2262\",\"&nesear;\":\"\u2928\",\"&nesim;\":\"\u2242\u0338\",\"&nexist;\":\"\u2204\",\"&nexists;\":\"\u2204\",\"&nfr;\":\"\uD835\uDD2B\",\"&ngE;\":\"\u2267\u0338\",\"&nge;\":\"\u2271\",\"&ngeq;\":\"\u2271\",\"&ngeqq;\":\"\u2267\u0338\",\"&ngeqslant;\":\"\u2A7E\u0338\",\"&nges;\":\"\u2A7E\u0338\",\"&ngsim;\":\"\u2275\",\"&ngt;\":\"\u226F\",\"&ngtr;\":\"\u226F\",\"&nhArr;\":\"\u21CE\",\"&nharr;\":\"\u21AE\",\"&nhpar;\":\"\u2AF2\",\"&ni;\":\"\u220B\",\"&nis;\":\"\u22FC\",\"&nisd;\":\"\u22FA\",\"&niv;\":\"\u220B\",\"&njcy;\":\"\u045A\",\"&nlArr;\":\"\u21CD\",\"&nlE;\":\"\u2266\u0338\",\"&nlarr;\":\"\u219A\",\"&nldr;\":\"\u2025\",\"&nle;\":\"\u2270\",\"&nleftarrow;\":\"\u219A\",\"&nleftrightarrow;\":\"\u21AE\",\"&nleq;\":\"\u2270\",\"&nleqq;\":\"\u2266\u0338\",\"&nleqslant;\":\"\u2A7D\u0338\",\"&nles;\":\"\u2A7D\u0338\",\"&nless;\":\"\u226E\",\"&nlsim;\":\"\u2274\",\"&nlt;\":\"\u226E\",\"&nltri;\":\"\u22EA\",\"&nltrie;\":\"\u22EC\",\"&nmid;\":\"\u2224\",\"&nopf;\":\"\uD835\uDD5F\",\"&not\":\"\u00AC\",\"&not;\":\"\u00AC\",\"&notin;\":\"\u2209\",\"&notinE;\":\"\u22F9\u0338\",\"&notindot;\":\"\u22F5\u0338\",\"&notinva;\":\"\u2209\",\"&notinvb;\":\"\u22F7\",\"&notinvc;\":\"\u22F6\",\"&notni;\":\"\u220C\",\"&notniva;\":\"\u220C\",\"&notnivb;\":\"\u22FE\",\"&notnivc;\":\"\u22FD\",\"&npar;\":\"\u2226\",\"&nparallel;\":\"\u2226\",\"&nparsl;\":\"\u2AFD\u20E5\",\"&npart;\":\"\u2202\u0338\",\"&npolint;\":\"\u2A14\",\"&npr;\":\"\u2280\",\"&nprcue;\":\"\u22E0\",\"&npre;\":\"\u2AAF\u0338\",\"&nprec;\":\"\u2280\",\"&npreceq;\":\"\u2AAF\u0338\",\"&nrArr;\":\"\u21CF\",\"&nrarr;\":\"\u219B\",\"&nrarrc;\":\"\u2933\u0338\",\"&nrarrw;\":\"\u219D\u0338\",\"&nrightarrow;\":\"\u219B\",\"&nrtri;\":\"\u22EB\",\"&nrtrie;\":\"\u22ED\",\"&nsc;\":\"\u2281\",\"&nsccue;\":\"\u22E1\",\"&nsce;\":\"\u2AB0\u0338\",\"&nscr;\":\"\uD835\uDCC3\",\"&nshortmid;\":\"\u2224\",\"&nshortparallel;\":\"\u2226\",\"&nsim;\":\"\u2241\",\"&nsime;\":\"\u2244\",\"&nsimeq;\":\"\u2244\",\"&nsmid;\":\"\u2224\",\"&nspar;\":\"\u2226\",\"&nsqsube;\":\"\u22E2\",\"&nsqsupe;\":\"\u22E3\",\"&nsub;\":\"\u2284\",\"&nsubE;\":\"\u2AC5\u0338\",\"&nsube;\":\"\u2288\",\"&nsubset;\":\"\u2282\u20D2\",\"&nsubseteq;\":\"\u2288\",\"&nsubseteqq;\":\"\u2AC5\u0338\",\"&nsucc;\":\"\u2281\",\"&nsucceq;\":\"\u2AB0\u0338\",\"&nsup;\":\"\u2285\",\"&nsupE;\":\"\u2AC6\u0338\",\"&nsupe;\":\"\u2289\",\"&nsupset;\":\"\u2283\u20D2\",\"&nsupseteq;\":\"\u2289\",\"&nsupseteqq;\":\"\u2AC6\u0338\",\"&ntgl;\":\"\u2279\",\"&ntilde\":\"\u00F1\",\"&ntilde;\":\"\u00F1\",\"&ntlg;\":\"\u2278\",\"&ntriangleleft;\":\"\u22EA\",\"&ntrianglelefteq;\":\"\u22EC\",\"&ntriangleright;\":\"\u22EB\",\"&ntrianglerighteq;\":\"\u22ED\",\"&nu;\":\"\u03BD\",\"&num;\":\"#\",\"&numero;\":\"\u2116\",\"&numsp;\":\"\u2007\",\"&nvDash;\":\"\u22AD\",\"&nvHarr;\":\"\u2904\",\"&nvap;\":\"\u224D\u20D2\",\"&nvdash;\":\"\u22AC\",\"&nvge;\":\"\u2265\u20D2\",\"&nvgt;\":\">\u20D2\",\"&nvinfin;\":\"\u29DE\",\"&nvlArr;\":\"\u2902\",\"&nvle;\":\"\u2264\u20D2\",\"&nvlt;\":\"<\u20D2\",\"&nvltrie;\":\"\u22B4\u20D2\",\"&nvrArr;\":\"\u2903\",\"&nvrtrie;\":\"\u22B5\u20D2\",\"&nvsim;\":\"\u223C\u20D2\",\"&nwArr;\":\"\u21D6\",\"&nwarhk;\":\"\u2923\",\"&nwarr;\":\"\u2196\",\"&nwarrow;\":\"\u2196\",\"&nwnear;\":\"\u2927\",\"&oS;\":\"\u24C8\",\"&oacute\":\"\u00F3\",\"&oacute;\":\"\u00F3\",\"&oast;\":\"\u229B\",\"&ocir;\":\"\u229A\",\"&ocirc\":\"\u00F4\",\"&ocirc;\":\"\u00F4\",\"&ocy;\":\"\u043E\",\"&odash;\":\"\u229D\",\"&odblac;\":\"\u0151\",\"&odiv;\":\"\u2A38\",\"&odot;\":\"\u2299\",\"&odsold;\":\"\u29BC\",\"&oelig;\":\"\u0153\",\"&ofcir;\":\"\u29BF\",\"&ofr;\":\"\uD835\uDD2C\",\"&ogon;\":\"\u02DB\",\"&ograve\":\"\u00F2\",\"&ograve;\":\"\u00F2\",\"&ogt;\":\"\u29C1\",\"&ohbar;\":\"\u29B5\",\"&ohm;\":\"\u03A9\",\"&oint;\":\"\u222E\",\"&olarr;\":\"\u21BA\",\"&olcir;\":\"\u29BE\",\"&olcross;\":\"\u29BB\",\"&oline;\":\"\u203E\",\"&olt;\":\"\u29C0\",\"&omacr;\":\"\u014D\",\"&omega;\":\"\u03C9\",\"&omicron;\":\"\u03BF\",\"&omid;\":\"\u29B6\",\"&ominus;\":\"\u2296\",\"&oopf;\":\"\uD835\uDD60\",\"&opar;\":\"\u29B7\",\"&operp;\":\"\u29B9\",\"&oplus;\":\"\u2295\",\"&or;\":\"\u2228\",\"&orarr;\":\"\u21BB\",\"&ord;\":\"\u2A5D\",\"&order;\":\"\u2134\",\"&orderof;\":\"\u2134\",\"&ordf\":\"\u00AA\",\"&ordf;\":\"\u00AA\",\"&ordm\":\"\u00BA\",\"&ordm;\":\"\u00BA\",\"&origof;\":\"\u22B6\",\"&oror;\":\"\u2A56\",\"&orslope;\":\"\u2A57\",\"&orv;\":\"\u2A5B\",\"&oscr;\":\"\u2134\",\"&oslash\":\"\u00F8\",\"&oslash;\":\"\u00F8\",\"&osol;\":\"\u2298\",\"&otilde\":\"\u00F5\",\"&otilde;\":\"\u00F5\",\"&otimes;\":\"\u2297\",\"&otimesas;\":\"\u2A36\",\"&ouml\":\"\u00F6\",\"&ouml;\":\"\u00F6\",\"&ovbar;\":\"\u233D\",\"&par;\":\"\u2225\",\"&para\":\"\u00B6\",\"&para;\":\"\u00B6\",\"&parallel;\":\"\u2225\",\"&parsim;\":\"\u2AF3\",\"&parsl;\":\"\u2AFD\",\"&part;\":\"\u2202\",\"&pcy;\":\"\u043F\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"\u2030\",\"&perp;\":\"\u22A5\",\"&pertenk;\":\"\u2031\",\"&pfr;\":\"\uD835\uDD2D\",\"&phi;\":\"\u03C6\",\"&phiv;\":\"\u03D5\",\"&phmmat;\":\"\u2133\",\"&phone;\":\"\u260E\",\"&pi;\":\"\u03C0\",\"&pitchfork;\":\"\u22D4\",\"&piv;\":\"\u03D6\",\"&planck;\":\"\u210F\",\"&planckh;\":\"\u210E\",\"&plankv;\":\"\u210F\",\"&plus;\":\"+\",\"&plusacir;\":\"\u2A23\",\"&plusb;\":\"\u229E\",\"&pluscir;\":\"\u2A22\",\"&plusdo;\":\"\u2214\",\"&plusdu;\":\"\u2A25\",\"&pluse;\":\"\u2A72\",\"&plusmn\":\"\u00B1\",\"&plusmn;\":\"\u00B1\",\"&plussim;\":\"\u2A26\",\"&plustwo;\":\"\u2A27\",\"&pm;\":\"\u00B1\",\"&pointint;\":\"\u2A15\",\"&popf;\":\"\uD835\uDD61\",\"&pound\":\"\u00A3\",\"&pound;\":\"\u00A3\",\"&pr;\":\"\u227A\",\"&prE;\":\"\u2AB3\",\"&prap;\":\"\u2AB7\",\"&prcue;\":\"\u227C\",\"&pre;\":\"\u2AAF\",\"&prec;\":\"\u227A\",\"&precapprox;\":\"\u2AB7\",\"&preccurlyeq;\":\"\u227C\",\"&preceq;\":\"\u2AAF\",\"&precnapprox;\":\"\u2AB9\",\"&precneqq;\":\"\u2AB5\",\"&precnsim;\":\"\u22E8\",\"&precsim;\":\"\u227E\",\"&prime;\":\"\u2032\",\"&primes;\":\"\u2119\",\"&prnE;\":\"\u2AB5\",\"&prnap;\":\"\u2AB9\",\"&prnsim;\":\"\u22E8\",\"&prod;\":\"\u220F\",\"&profalar;\":\"\u232E\",\"&profline;\":\"\u2312\",\"&profsurf;\":\"\u2313\",\"&prop;\":\"\u221D\",\"&propto;\":\"\u221D\",\"&prsim;\":\"\u227E\",\"&prurel;\":\"\u22B0\",\"&pscr;\":\"\uD835\uDCC5\",\"&psi;\":\"\u03C8\",\"&puncsp;\":\"\u2008\",\"&qfr;\":\"\uD835\uDD2E\",\"&qint;\":\"\u2A0C\",\"&qopf;\":\"\uD835\uDD62\",\"&qprime;\":\"\u2057\",\"&qscr;\":\"\uD835\uDCC6\",\"&quaternions;\":\"\u210D\",\"&quatint;\":\"\u2A16\",\"&quest;\":\"?\",\"&questeq;\":\"\u225F\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"\u21DB\",\"&rArr;\":\"\u21D2\",\"&rAtail;\":\"\u291C\",\"&rBarr;\":\"\u290F\",\"&rHar;\":\"\u2964\",\"&race;\":\"\u223D\u0331\",\"&racute;\":\"\u0155\",\"&radic;\":\"\u221A\",\"&raemptyv;\":\"\u29B3\",\"&rang;\":\"\u27E9\",\"&rangd;\":\"\u2992\",\"&range;\":\"\u29A5\",\"&rangle;\":\"\u27E9\",\"&raquo\":\"\u00BB\",\"&raquo;\":\"\u00BB\",\"&rarr;\":\"\u2192\",\"&rarrap;\":\"\u2975\",\"&rarrb;\":\"\u21E5\",\"&rarrbfs;\":\"\u2920\",\"&rarrc;\":\"\u2933\",\"&rarrfs;\":\"\u291E\",\"&rarrhk;\":\"\u21AA\",\"&rarrlp;\":\"\u21AC\",\"&rarrpl;\":\"\u2945\",\"&rarrsim;\":\"\u2974\",\"&rarrtl;\":\"\u21A3\",\"&rarrw;\":\"\u219D\",\"&ratail;\":\"\u291A\",\"&ratio;\":\"\u2236\",\"&rationals;\":\"\u211A\",\"&rbarr;\":\"\u290D\",\"&rbbrk;\":\"\u2773\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"\u298C\",\"&rbrksld;\":\"\u298E\",\"&rbrkslu;\":\"\u2990\",\"&rcaron;\":\"\u0159\",\"&rcedil;\":\"\u0157\",\"&rceil;\":\"\u2309\",\"&rcub;\":\"}\",\"&rcy;\":\"\u0440\",\"&rdca;\":\"\u2937\",\"&rdldhar;\":\"\u2969\",\"&rdquo;\":\"\u201D\",\"&rdquor;\":\"\u201D\",\"&rdsh;\":\"\u21B3\",\"&real;\":\"\u211C\",\"&realine;\":\"\u211B\",\"&realpart;\":\"\u211C\",\"&reals;\":\"\u211D\",\"&rect;\":\"\u25AD\",\"&reg\":\"\u00AE\",\"&reg;\":\"\u00AE\",\"&rfisht;\":\"\u297D\",\"&rfloor;\":\"\u230B\",\"&rfr;\":\"\uD835\uDD2F\",\"&rhard;\":\"\u21C1\",\"&rharu;\":\"\u21C0\",\"&rharul;\":\"\u296C\",\"&rho;\":\"\u03C1\",\"&rhov;\":\"\u03F1\",\"&rightarrow;\":\"\u2192\",\"&rightarrowtail;\":\"\u21A3\",\"&rightharpoondown;\":\"\u21C1\",\"&rightharpoonup;\":\"\u21C0\",\"&rightleftarrows;\":\"\u21C4\",\"&rightleftharpoons;\":\"\u21CC\",\"&rightrightarrows;\":\"\u21C9\",\"&rightsquigarrow;\":\"\u219D\",\"&rightthreetimes;\":\"\u22CC\",\"&ring;\":\"\u02DA\",\"&risingdotseq;\":\"\u2253\",\"&rlarr;\":\"\u21C4\",\"&rlhar;\":\"\u21CC\",\"&rlm;\":\"\u200F\",\"&rmoust;\":\"\u23B1\",\"&rmoustache;\":\"\u23B1\",\"&rnmid;\":\"\u2AEE\",\"&roang;\":\"\u27ED\",\"&roarr;\":\"\u21FE\",\"&robrk;\":\"\u27E7\",\"&ropar;\":\"\u2986\",\"&ropf;\":\"\uD835\uDD63\",\"&roplus;\":\"\u2A2E\",\"&rotimes;\":\"\u2A35\",\"&rpar;\":\")\",\"&rpargt;\":\"\u2994\",\"&rppolint;\":\"\u2A12\",\"&rrarr;\":\"\u21C9\",\"&rsaquo;\":\"\u203A\",\"&rscr;\":\"\uD835\uDCC7\",\"&rsh;\":\"\u21B1\",\"&rsqb;\":\"]\",\"&rsquo;\":\"\u2019\",\"&rsquor;\":\"\u2019\",\"&rthree;\":\"\u22CC\",\"&rtimes;\":\"\u22CA\",\"&rtri;\":\"\u25B9\",\"&rtrie;\":\"\u22B5\",\"&rtrif;\":\"\u25B8\",\"&rtriltri;\":\"\u29CE\",\"&ruluhar;\":\"\u2968\",\"&rx;\":\"\u211E\",\"&sacute;\":\"\u015B\",\"&sbquo;\":\"\u201A\",\"&sc;\":\"\u227B\",\"&scE;\":\"\u2AB4\",\"&scap;\":\"\u2AB8\",\"&scaron;\":\"\u0161\",\"&sccue;\":\"\u227D\",\"&sce;\":\"\u2AB0\",\"&scedil;\":\"\u015F\",\"&scirc;\":\"\u015D\",\"&scnE;\":\"\u2AB6\",\"&scnap;\":\"\u2ABA\",\"&scnsim;\":\"\u22E9\",\"&scpolint;\":\"\u2A13\",\"&scsim;\":\"\u227F\",\"&scy;\":\"\u0441\",\"&sdot;\":\"\u22C5\",\"&sdotb;\":\"\u22A1\",\"&sdote;\":\"\u2A66\",\"&seArr;\":\"\u21D8\",\"&searhk;\":\"\u2925\",\"&searr;\":\"\u2198\",\"&searrow;\":\"\u2198\",\"&sect\":\"\u00A7\",\"&sect;\":\"\u00A7\",\"&semi;\":\";\",\"&seswar;\":\"\u2929\",\"&setminus;\":\"\u2216\",\"&setmn;\":\"\u2216\",\"&sext;\":\"\u2736\",\"&sfr;\":\"\uD835\uDD30\",\"&sfrown;\":\"\u2322\",\"&sharp;\":\"\u266F\",\"&shchcy;\":\"\u0449\",\"&shcy;\":\"\u0448\",\"&shortmid;\":\"\u2223\",\"&shortparallel;\":\"\u2225\",\"&shy\":\"\u00AD\",\"&shy;\":\"\u00AD\",\"&sigma;\":\"\u03C3\",\"&sigmaf;\":\"\u03C2\",\"&sigmav;\":\"\u03C2\",\"&sim;\":\"\u223C\",\"&simdot;\":\"\u2A6A\",\"&sime;\":\"\u2243\",\"&simeq;\":\"\u2243\",\"&simg;\":\"\u2A9E\",\"&simgE;\":\"\u2AA0\",\"&siml;\":\"\u2A9D\",\"&simlE;\":\"\u2A9F\",\"&simne;\":\"\u2246\",\"&simplus;\":\"\u2A24\",\"&simrarr;\":\"\u2972\",\"&slarr;\":\"\u2190\",\"&smallsetminus;\":\"\u2216\",\"&smashp;\":\"\u2A33\",\"&smeparsl;\":\"\u29E4\",\"&smid;\":\"\u2223\",\"&smile;\":\"\u2323\",\"&smt;\":\"\u2AAA\",\"&smte;\":\"\u2AAC\",\"&smtes;\":\"\u2AAC\uFE00\",\"&softcy;\":\"\u044C\",\"&sol;\":\"/\",\"&solb;\":\"\u29C4\",\"&solbar;\":\"\u233F\",\"&sopf;\":\"\uD835\uDD64\",\"&spades;\":\"\u2660\",\"&spadesuit;\":\"\u2660\",\"&spar;\":\"\u2225\",\"&sqcap;\":\"\u2293\",\"&sqcaps;\":\"\u2293\uFE00\",\"&sqcup;\":\"\u2294\",\"&sqcups;\":\"\u2294\uFE00\",\"&sqsub;\":\"\u228F\",\"&sqsube;\":\"\u2291\",\"&sqsubset;\":\"\u228F\",\"&sqsubseteq;\":\"\u2291\",\"&sqsup;\":\"\u2290\",\"&sqsupe;\":\"\u2292\",\"&sqsupset;\":\"\u2290\",\"&sqsupseteq;\":\"\u2292\",\"&squ;\":\"\u25A1\",\"&square;\":\"\u25A1\",\"&squarf;\":\"\u25AA\",\"&squf;\":\"\u25AA\",\"&srarr;\":\"\u2192\",\"&sscr;\":\"\uD835\uDCC8\",\"&ssetmn;\":\"\u2216\",\"&ssmile;\":\"\u2323\",\"&sstarf;\":\"\u22C6\",\"&star;\":\"\u2606\",\"&starf;\":\"\u2605\",\"&straightepsilon;\":\"\u03F5\",\"&straightphi;\":\"\u03D5\",\"&strns;\":\"\u00AF\",\"&sub;\":\"\u2282\",\"&subE;\":\"\u2AC5\",\"&subdot;\":\"\u2ABD\",\"&sube;\":\"\u2286\",\"&subedot;\":\"\u2AC3\",\"&submult;\":\"\u2AC1\",\"&subnE;\":\"\u2ACB\",\"&subne;\":\"\u228A\",\"&subplus;\":\"\u2ABF\",\"&subrarr;\":\"\u2979\",\"&subset;\":\"\u2282\",\"&subseteq;\":\"\u2286\",\"&subseteqq;\":\"\u2AC5\",\"&subsetneq;\":\"\u228A\",\"&subsetneqq;\":\"\u2ACB\",\"&subsim;\":\"\u2AC7\",\"&subsub;\":\"\u2AD5\",\"&subsup;\":\"\u2AD3\",\"&succ;\":\"\u227B\",\"&succapprox;\":\"\u2AB8\",\"&succcurlyeq;\":\"\u227D\",\"&succeq;\":\"\u2AB0\",\"&succnapprox;\":\"\u2ABA\",\"&succneqq;\":\"\u2AB6\",\"&succnsim;\":\"\u22E9\",\"&succsim;\":\"\u227F\",\"&sum;\":\"\u2211\",\"&sung;\":\"\u266A\",\"&sup1\":\"\u00B9\",\"&sup1;\":\"\u00B9\",\"&sup2\":\"\u00B2\",\"&sup2;\":\"\u00B2\",\"&sup3\":\"\u00B3\",\"&sup3;\":\"\u00B3\",\"&sup;\":\"\u2283\",\"&supE;\":\"\u2AC6\",\"&supdot;\":\"\u2ABE\",\"&supdsub;\":\"\u2AD8\",\"&supe;\":\"\u2287\",\"&supedot;\":\"\u2AC4\",\"&suphsol;\":\"\u27C9\",\"&suphsub;\":\"\u2AD7\",\"&suplarr;\":\"\u297B\",\"&supmult;\":\"\u2AC2\",\"&supnE;\":\"\u2ACC\",\"&supne;\":\"\u228B\",\"&supplus;\":\"\u2AC0\",\"&supset;\":\"\u2283\",\"&supseteq;\":\"\u2287\",\"&supseteqq;\":\"\u2AC6\",\"&supsetneq;\":\"\u228B\",\"&supsetneqq;\":\"\u2ACC\",\"&supsim;\":\"\u2AC8\",\"&supsub;\":\"\u2AD4\",\"&supsup;\":\"\u2AD6\",\"&swArr;\":\"\u21D9\",\"&swarhk;\":\"\u2926\",\"&swarr;\":\"\u2199\",\"&swarrow;\":\"\u2199\",\"&swnwar;\":\"\u292A\",\"&szlig\":\"\u00DF\",\"&szlig;\":\"\u00DF\",\"&target;\":\"\u2316\",\"&tau;\":\"\u03C4\",\"&tbrk;\":\"\u23B4\",\"&tcaron;\":\"\u0165\",\"&tcedil;\":\"\u0163\",\"&tcy;\":\"\u0442\",\"&tdot;\":\"\u20DB\",\"&telrec;\":\"\u2315\",\"&tfr;\":\"\uD835\uDD31\",\"&there4;\":\"\u2234\",\"&therefore;\":\"\u2234\",\"&theta;\":\"\u03B8\",\"&thetasym;\":\"\u03D1\",\"&thetav;\":\"\u03D1\",\"&thickapprox;\":\"\u2248\",\"&thicksim;\":\"\u223C\",\"&thinsp;\":\"\u2009\",\"&thkap;\":\"\u2248\",\"&thksim;\":\"\u223C\",\"&thorn\":\"\u00FE\",\"&thorn;\":\"\u00FE\",\"&tilde;\":\"\u02DC\",\"&times\":\"\u00D7\",\"&times;\":\"\u00D7\",\"&timesb;\":\"\u22A0\",\"&timesbar;\":\"\u2A31\",\"&timesd;\":\"\u2A30\",\"&tint;\":\"\u222D\",\"&toea;\":\"\u2928\",\"&top;\":\"\u22A4\",\"&topbot;\":\"\u2336\",\"&topcir;\":\"\u2AF1\",\"&topf;\":\"\uD835\uDD65\",\"&topfork;\":\"\u2ADA\",\"&tosa;\":\"\u2929\",\"&tprime;\":\"\u2034\",\"&trade;\":\"\u2122\",\"&triangle;\":\"\u25B5\",\"&triangledown;\":\"\u25BF\",\"&triangleleft;\":\"\u25C3\",\"&trianglelefteq;\":\"\u22B4\",\"&triangleq;\":\"\u225C\",\"&triangleright;\":\"\u25B9\",\"&trianglerighteq;\":\"\u22B5\",\"&tridot;\":\"\u25EC\",\"&trie;\":\"\u225C\",\"&triminus;\":\"\u2A3A\",\"&triplus;\":\"\u2A39\",\"&trisb;\":\"\u29CD\",\"&tritime;\":\"\u2A3B\",\"&trpezium;\":\"\u23E2\",\"&tscr;\":\"\uD835\uDCC9\",\"&tscy;\":\"\u0446\",\"&tshcy;\":\"\u045B\",\"&tstrok;\":\"\u0167\",\"&twixt;\":\"\u226C\",\"&twoheadleftarrow;\":\"\u219E\",\"&twoheadrightarrow;\":\"\u21A0\",\"&uArr;\":\"\u21D1\",\"&uHar;\":\"\u2963\",\"&uacute\":\"\u00FA\",\"&uacute;\":\"\u00FA\",\"&uarr;\":\"\u2191\",\"&ubrcy;\":\"\u045E\",\"&ubreve;\":\"\u016D\",\"&ucirc\":\"\u00FB\",\"&ucirc;\":\"\u00FB\",\"&ucy;\":\"\u0443\",\"&udarr;\":\"\u21C5\",\"&udblac;\":\"\u0171\",\"&udhar;\":\"\u296E\",\"&ufisht;\":\"\u297E\",\"&ufr;\":\"\uD835\uDD32\",\"&ugrave\":\"\u00F9\",\"&ugrave;\":\"\u00F9\",\"&uharl;\":\"\u21BF\",\"&uharr;\":\"\u21BE\",\"&uhblk;\":\"\u2580\",\"&ulcorn;\":\"\u231C\",\"&ulcorner;\":\"\u231C\",\"&ulcrop;\":\"\u230F\",\"&ultri;\":\"\u25F8\",\"&umacr;\":\"\u016B\",\"&uml\":\"\u00A8\",\"&uml;\":\"\u00A8\",\"&uogon;\":\"\u0173\",\"&uopf;\":\"\uD835\uDD66\",\"&uparrow;\":\"\u2191\",\"&updownarrow;\":\"\u2195\",\"&upharpoonleft;\":\"\u21BF\",\"&upharpoonright;\":\"\u21BE\",\"&uplus;\":\"\u228E\",\"&upsi;\":\"\u03C5\",\"&upsih;\":\"\u03D2\",\"&upsilon;\":\"\u03C5\",\"&upuparrows;\":\"\u21C8\",\"&urcorn;\":\"\u231D\",\"&urcorner;\":\"\u231D\",\"&urcrop;\":\"\u230E\",\"&uring;\":\"\u016F\",\"&urtri;\":\"\u25F9\",\"&uscr;\":\"\uD835\uDCCA\",\"&utdot;\":\"\u22F0\",\"&utilde;\":\"\u0169\",\"&utri;\":\"\u25B5\",\"&utrif;\":\"\u25B4\",\"&uuarr;\":\"\u21C8\",\"&uuml\":\"\u00FC\",\"&uuml;\":\"\u00FC\",\"&uwangle;\":\"\u29A7\",\"&vArr;\":\"\u21D5\",\"&vBar;\":\"\u2AE8\",\"&vBarv;\":\"\u2AE9\",\"&vDash;\":\"\u22A8\",\"&vangrt;\":\"\u299C\",\"&varepsilon;\":\"\u03F5\",\"&varkappa;\":\"\u03F0\",\"&varnothing;\":\"\u2205\",\"&varphi;\":\"\u03D5\",\"&varpi;\":\"\u03D6\",\"&varpropto;\":\"\u221D\",\"&varr;\":\"\u2195\",\"&varrho;\":\"\u03F1\",\"&varsigma;\":\"\u03C2\",\"&varsubsetneq;\":\"\u228A\uFE00\",\"&varsubsetneqq;\":\"\u2ACB\uFE00\",\"&varsupsetneq;\":\"\u228B\uFE00\",\"&varsupsetneqq;\":\"\u2ACC\uFE00\",\"&vartheta;\":\"\u03D1\",\"&vartriangleleft;\":\"\u22B2\",\"&vartriangleright;\":\"\u22B3\",\"&vcy;\":\"\u0432\",\"&vdash;\":\"\u22A2\",\"&vee;\":\"\u2228\",\"&veebar;\":\"\u22BB\",\"&veeeq;\":\"\u225A\",\"&vellip;\":\"\u22EE\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"\uD835\uDD33\",\"&vltri;\":\"\u22B2\",\"&vnsub;\":\"\u2282\u20D2\",\"&vnsup;\":\"\u2283\u20D2\",\"&vopf;\":\"\uD835\uDD67\",\"&vprop;\":\"\u221D\",\"&vrtri;\":\"\u22B3\",\"&vscr;\":\"\uD835\uDCCB\",\"&vsubnE;\":\"\u2ACB\uFE00\",\"&vsubne;\":\"\u228A\uFE00\",\"&vsupnE;\":\"\u2ACC\uFE00\",\"&vsupne;\":\"\u228B\uFE00\",\"&vzigzag;\":\"\u299A\",\"&wcirc;\":\"\u0175\",\"&wedbar;\":\"\u2A5F\",\"&wedge;\":\"\u2227\",\"&wedgeq;\":\"\u2259\",\"&weierp;\":\"\u2118\",\"&wfr;\":\"\uD835\uDD34\",\"&wopf;\":\"\uD835\uDD68\",\"&wp;\":\"\u2118\",\"&wr;\":\"\u2240\",\"&wreath;\":\"\u2240\",\"&wscr;\":\"\uD835\uDCCC\",\"&xcap;\":\"\u22C2\",\"&xcirc;\":\"\u25EF\",\"&xcup;\":\"\u22C3\",\"&xdtri;\":\"\u25BD\",\"&xfr;\":\"\uD835\uDD35\",\"&xhArr;\":\"\u27FA\",\"&xharr;\":\"\u27F7\",\"&xi;\":\"\u03BE\",\"&xlArr;\":\"\u27F8\",\"&xlarr;\":\"\u27F5\",\"&xmap;\":\"\u27FC\",\"&xnis;\":\"\u22FB\",\"&xodot;\":\"\u2A00\",\"&xopf;\":\"\uD835\uDD69\",\"&xoplus;\":\"\u2A01\",\"&xotime;\":\"\u2A02\",\"&xrArr;\":\"\u27F9\",\"&xrarr;\":\"\u27F6\",\"&xscr;\":\"\uD835\uDCCD\",\"&xsqcup;\":\"\u2A06\",\"&xuplus;\":\"\u2A04\",\"&xutri;\":\"\u25B3\",\"&xvee;\":\"\u22C1\",\"&xwedge;\":\"\u22C0\",\"&yacute\":\"\u00FD\",\"&yacute;\":\"\u00FD\",\"&yacy;\":\"\u044F\",\"&ycirc;\":\"\u0177\",\"&ycy;\":\"\u044B\",\"&yen\":\"\u00A5\",\"&yen;\":\"\u00A5\",\"&yfr;\":\"\uD835\uDD36\",\"&yicy;\":\"\u0457\",\"&yopf;\":\"\uD835\uDD6A\",\"&yscr;\":\"\uD835\uDCCE\",\"&yucy;\":\"\u044E\",\"&yuml\":\"\u00FF\",\"&yuml;\":\"\u00FF\",\"&zacute;\":\"\u017A\",\"&zcaron;\":\"\u017E\",\"&zcy;\":\"\u0437\",\"&zdot;\":\"\u017C\",\"&zeetrf;\":\"\u2128\",\"&zeta;\":\"\u03B6\",\"&zfr;\":\"\uD835\uDD37\",\"&zhcy;\":\"\u0436\",\"&zigrarr;\":\"\u21DD\",\"&zopf;\":\"\uD835\uDD6B\",\"&zscr;\":\"\uD835\uDCCF\",\"&zwj;\":\"\u200D\",\"&zwnj;\":\"\u200C\"},characters:{\"\u00C6\":\"&AElig;\",\"&\":\"&amp;\",\"\u00C1\":\"&Aacute;\",\"\u0102\":\"&Abreve;\",\"\u00C2\":\"&Acirc;\",\"\u0410\":\"&Acy;\",\"\uD835\uDD04\":\"&Afr;\",\"\u00C0\":\"&Agrave;\",\"\u0391\":\"&Alpha;\",\"\u0100\":\"&Amacr;\",\"\u2A53\":\"&And;\",\"\u0104\":\"&Aogon;\",\"\uD835\uDD38\":\"&Aopf;\",\"\u2061\":\"&af;\",\"\u00C5\":\"&angst;\",\"\uD835\uDC9C\":\"&Ascr;\",\"\u2254\":\"&coloneq;\",\"\u00C3\":\"&Atilde;\",\"\u00C4\":\"&Auml;\",\"\u2216\":\"&ssetmn;\",\"\u2AE7\":\"&Barv;\",\"\u2306\":\"&doublebarwedge;\",\"\u0411\":\"&Bcy;\",\"\u2235\":\"&because;\",\"\u212C\":\"&bernou;\",\"\u0392\":\"&Beta;\",\"\uD835\uDD05\":\"&Bfr;\",\"\uD835\uDD39\":\"&Bopf;\",\"\u02D8\":\"&breve;\",\"\u224E\":\"&bump;\",\"\u0427\":\"&CHcy;\",\"\u00A9\":\"&copy;\",\"\u0106\":\"&Cacute;\",\"\u22D2\":\"&Cap;\",\"\u2145\":\"&DD;\",\"\u212D\":\"&Cfr;\",\"\u010C\":\"&Ccaron;\",\"\u00C7\":\"&Ccedil;\",\"\u0108\":\"&Ccirc;\",\"\u2230\":\"&Cconint;\",\"\u010A\":\"&Cdot;\",\"\u00B8\":\"&cedil;\",\"\u00B7\":\"&middot;\",\"\u03A7\":\"&Chi;\",\"\u2299\":\"&odot;\",\"\u2296\":\"&ominus;\",\"\u2295\":\"&oplus;\",\"\u2297\":\"&otimes;\",\"\u2232\":\"&cwconint;\",\"\u201D\":\"&rdquor;\",\"\u2019\":\"&rsquor;\",\"\u2237\":\"&Proportion;\",\"\u2A74\":\"&Colone;\",\"\u2261\":\"&equiv;\",\"\u222F\":\"&DoubleContourIntegral;\",\"\u222E\":\"&oint;\",\"\u2102\":\"&complexes;\",\"\u2210\":\"&coprod;\",\"\u2233\":\"&awconint;\",\"\u2A2F\":\"&Cross;\",\"\uD835\uDC9E\":\"&Cscr;\",\"\u22D3\":\"&Cup;\",\"\u224D\":\"&asympeq;\",\"\u2911\":\"&DDotrahd;\",\"\u0402\":\"&DJcy;\",\"\u0405\":\"&DScy;\",\"\u040F\":\"&DZcy;\",\"\u2021\":\"&ddagger;\",\"\u21A1\":\"&Darr;\",\"\u2AE4\":\"&DoubleLeftTee;\",\"\u010E\":\"&Dcaron;\",\"\u0414\":\"&Dcy;\",\"\u2207\":\"&nabla;\",\"\u0394\":\"&Delta;\",\"\uD835\uDD07\":\"&Dfr;\",\"\u00B4\":\"&acute;\",\"\u02D9\":\"&dot;\",\"\u02DD\":\"&dblac;\",\"`\":\"&grave;\",\"\u02DC\":\"&tilde;\",\"\u22C4\":\"&diamond;\",\"\u2146\":\"&dd;\",\"\uD835\uDD3B\":\"&Dopf;\",\"\u00A8\":\"&uml;\",\"\u20DC\":\"&DotDot;\",\"\u2250\":\"&esdot;\",\"\u21D3\":\"&dArr;\",\"\u21D0\":\"&lArr;\",\"\u21D4\":\"&iff;\",\"\u27F8\":\"&xlArr;\",\"\u27FA\":\"&xhArr;\",\"\u27F9\":\"&xrArr;\",\"\u21D2\":\"&rArr;\",\"\u22A8\":\"&vDash;\",\"\u21D1\":\"&uArr;\",\"\u21D5\":\"&vArr;\",\"\u2225\":\"&spar;\",\"\u2193\":\"&downarrow;\",\"\u2913\":\"&DownArrowBar;\",\"\u21F5\":\"&duarr;\",\"\u0311\":\"&DownBreve;\",\"\u2950\":\"&DownLeftRightVector;\",\"\u295E\":\"&DownLeftTeeVector;\",\"\u21BD\":\"&lhard;\",\"\u2956\":\"&DownLeftVectorBar;\",\"\u295F\":\"&DownRightTeeVector;\",\"\u21C1\":\"&rightharpoondown;\",\"\u2957\":\"&DownRightVectorBar;\",\"\u22A4\":\"&top;\",\"\u21A7\":\"&mapstodown;\",\"\uD835\uDC9F\":\"&Dscr;\",\"\u0110\":\"&Dstrok;\",\"\u014A\":\"&ENG;\",\"\u00D0\":\"&ETH;\",\"\u00C9\":\"&Eacute;\",\"\u011A\":\"&Ecaron;\",\"\u00CA\":\"&Ecirc;\",\"\u042D\":\"&Ecy;\",\"\u0116\":\"&Edot;\",\"\uD835\uDD08\":\"&Efr;\",\"\u00C8\":\"&Egrave;\",\"\u2208\":\"&isinv;\",\"\u0112\":\"&Emacr;\",\"\u25FB\":\"&EmptySmallSquare;\",\"\u25AB\":\"&EmptyVerySmallSquare;\",\"\u0118\":\"&Eogon;\",\"\uD835\uDD3C\":\"&Eopf;\",\"\u0395\":\"&Epsilon;\",\"\u2A75\":\"&Equal;\",\"\u2242\":\"&esim;\",\"\u21CC\":\"&rlhar;\",\"\u2130\":\"&expectation;\",\"\u2A73\":\"&Esim;\",\"\u0397\":\"&Eta;\",\"\u00CB\":\"&Euml;\",\"\u2203\":\"&exist;\",\"\u2147\":\"&exponentiale;\",\"\u0424\":\"&Fcy;\",\"\uD835\uDD09\":\"&Ffr;\",\"\u25FC\":\"&FilledSmallSquare;\",\"\u25AA\":\"&squf;\",\"\uD835\uDD3D\":\"&Fopf;\",\"\u2200\":\"&forall;\",\"\u2131\":\"&Fscr;\",\"\u0403\":\"&GJcy;\",\">\":\"&gt;\",\"\u0393\":\"&Gamma;\",\"\u03DC\":\"&Gammad;\",\"\u011E\":\"&Gbreve;\",\"\u0122\":\"&Gcedil;\",\"\u011C\":\"&Gcirc;\",\"\u0413\":\"&Gcy;\",\"\u0120\":\"&Gdot;\",\"\uD835\uDD0A\":\"&Gfr;\",\"\u22D9\":\"&ggg;\",\"\uD835\uDD3E\":\"&Gopf;\",\"\u2265\":\"&geq;\",\"\u22DB\":\"&gtreqless;\",\"\u2267\":\"&geqq;\",\"\u2AA2\":\"&GreaterGreater;\",\"\u2277\":\"&gtrless;\",\"\u2A7E\":\"&ges;\",\"\u2273\":\"&gtrsim;\",\"\uD835\uDCA2\":\"&Gscr;\",\"\u226B\":\"&gg;\",\"\u042A\":\"&HARDcy;\",\"\u02C7\":\"&caron;\",\"^\":\"&Hat;\",\"\u0124\":\"&Hcirc;\",\"\u210C\":\"&Poincareplane;\",\"\u210B\":\"&hamilt;\",\"\u210D\":\"&quaternions;\",\"\u2500\":\"&boxh;\",\"\u0126\":\"&Hstrok;\",\"\u224F\":\"&bumpeq;\",\"\u0415\":\"&IEcy;\",\"\u0132\":\"&IJlig;\",\"\u0401\":\"&IOcy;\",\"\u00CD\":\"&Iacute;\",\"\u00CE\":\"&Icirc;\",\"\u0418\":\"&Icy;\",\"\u0130\":\"&Idot;\",\"\u2111\":\"&imagpart;\",\"\u00CC\":\"&Igrave;\",\"\u012A\":\"&Imacr;\",\"\u2148\":\"&ii;\",\"\u222C\":\"&Int;\",\"\u222B\":\"&int;\",\"\u22C2\":\"&xcap;\",\"\u2063\":\"&ic;\",\"\u2062\":\"&it;\",\"\u012E\":\"&Iogon;\",\"\uD835\uDD40\":\"&Iopf;\",\"\u0399\":\"&Iota;\",\"\u2110\":\"&imagline;\",\"\u0128\":\"&Itilde;\",\"\u0406\":\"&Iukcy;\",\"\u00CF\":\"&Iuml;\",\"\u0134\":\"&Jcirc;\",\"\u0419\":\"&Jcy;\",\"\uD835\uDD0D\":\"&Jfr;\",\"\uD835\uDD41\":\"&Jopf;\",\"\uD835\uDCA5\":\"&Jscr;\",\"\u0408\":\"&Jsercy;\",\"\u0404\":\"&Jukcy;\",\"\u0425\":\"&KHcy;\",\"\u040C\":\"&KJcy;\",\"\u039A\":\"&Kappa;\",\"\u0136\":\"&Kcedil;\",\"\u041A\":\"&Kcy;\",\"\uD835\uDD0E\":\"&Kfr;\",\"\uD835\uDD42\":\"&Kopf;\",\"\uD835\uDCA6\":\"&Kscr;\",\"\u0409\":\"&LJcy;\",\"<\":\"&lt;\",\"\u0139\":\"&Lacute;\",\"\u039B\":\"&Lambda;\",\"\u27EA\":\"&Lang;\",\"\u2112\":\"&lagran;\",\"\u219E\":\"&twoheadleftarrow;\",\"\u013D\":\"&Lcaron;\",\"\u013B\":\"&Lcedil;\",\"\u041B\":\"&Lcy;\",\"\u27E8\":\"&langle;\",\"\u2190\":\"&slarr;\",\"\u21E4\":\"&larrb;\",\"\u21C6\":\"&lrarr;\",\"\u2308\":\"&lceil;\",\"\u27E6\":\"&lobrk;\",\"\u2961\":\"&LeftDownTeeVector;\",\"\u21C3\":\"&downharpoonleft;\",\"\u2959\":\"&LeftDownVectorBar;\",\"\u230A\":\"&lfloor;\",\"\u2194\":\"&leftrightarrow;\",\"\u294E\":\"&LeftRightVector;\",\"\u22A3\":\"&dashv;\",\"\u21A4\":\"&mapstoleft;\",\"\u295A\":\"&LeftTeeVector;\",\"\u22B2\":\"&vltri;\",\"\u29CF\":\"&LeftTriangleBar;\",\"\u22B4\":\"&trianglelefteq;\",\"\u2951\":\"&LeftUpDownVector;\",\"\u2960\":\"&LeftUpTeeVector;\",\"\u21BF\":\"&upharpoonleft;\",\"\u2958\":\"&LeftUpVectorBar;\",\"\u21BC\":\"&lharu;\",\"\u2952\":\"&LeftVectorBar;\",\"\u22DA\":\"&lesseqgtr;\",\"\u2266\":\"&leqq;\",\"\u2276\":\"&lg;\",\"\u2AA1\":\"&LessLess;\",\"\u2A7D\":\"&les;\",\"\u2272\":\"&lsim;\",\"\uD835\uDD0F\":\"&Lfr;\",\"\u22D8\":\"&Ll;\",\"\u21DA\":\"&lAarr;\",\"\u013F\":\"&Lmidot;\",\"\u27F5\":\"&xlarr;\",\"\u27F7\":\"&xharr;\",\"\u27F6\":\"&xrarr;\",\"\uD835\uDD43\":\"&Lopf;\",\"\u2199\":\"&swarrow;\",\"\u2198\":\"&searrow;\",\"\u21B0\":\"&lsh;\",\"\u0141\":\"&Lstrok;\",\"\u226A\":\"&ll;\",\"\u2905\":\"&Map;\",\"\u041C\":\"&Mcy;\",\"\u205F\":\"&MediumSpace;\",\"\u2133\":\"&phmmat;\",\"\uD835\uDD10\":\"&Mfr;\",\"\u2213\":\"&mp;\",\"\uD835\uDD44\":\"&Mopf;\",\"\u039C\":\"&Mu;\",\"\u040A\":\"&NJcy;\",\"\u0143\":\"&Nacute;\",\"\u0147\":\"&Ncaron;\",\"\u0145\":\"&Ncedil;\",\"\u041D\":\"&Ncy;\",\"\u200B\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"\uD835\uDD11\":\"&Nfr;\",\"\u2060\":\"&NoBreak;\",\"\u00A0\":\"&nbsp;\",\"\u2115\":\"&naturals;\",\"\u2AEC\":\"&Not;\",\"\u2262\":\"&nequiv;\",\"\u226D\":\"&NotCupCap;\",\"\u2226\":\"&nspar;\",\"\u2209\":\"&notinva;\",\"\u2260\":\"&ne;\",\"\u2242\u0338\":\"&nesim;\",\"\u2204\":\"&nexists;\",\"\u226F\":\"&ngtr;\",\"\u2271\":\"&ngeq;\",\"\u2267\u0338\":\"&ngeqq;\",\"\u226B\u0338\":\"&nGtv;\",\"\u2279\":\"&ntgl;\",\"\u2A7E\u0338\":\"&nges;\",\"\u2275\":\"&ngsim;\",\"\u224E\u0338\":\"&nbump;\",\"\u224F\u0338\":\"&nbumpe;\",\"\u22EA\":\"&ntriangleleft;\",\"\u29CF\u0338\":\"&NotLeftTriangleBar;\",\"\u22EC\":\"&ntrianglelefteq;\",\"\u226E\":\"&nlt;\",\"\u2270\":\"&nleq;\",\"\u2278\":\"&ntlg;\",\"\u226A\u0338\":\"&nLtv;\",\"\u2A7D\u0338\":\"&nles;\",\"\u2274\":\"&nlsim;\",\"\u2AA2\u0338\":\"&NotNestedGreaterGreater;\",\"\u2AA1\u0338\":\"&NotNestedLessLess;\",\"\u2280\":\"&nprec;\",\"\u2AAF\u0338\":\"&npreceq;\",\"\u22E0\":\"&nprcue;\",\"\u220C\":\"&notniva;\",\"\u22EB\":\"&ntriangleright;\",\"\u29D0\u0338\":\"&NotRightTriangleBar;\",\"\u22ED\":\"&ntrianglerighteq;\",\"\u228F\u0338\":\"&NotSquareSubset;\",\"\u22E2\":\"&nsqsube;\",\"\u2290\u0338\":\"&NotSquareSuperset;\",\"\u22E3\":\"&nsqsupe;\",\"\u2282\u20D2\":\"&vnsub;\",\"\u2288\":\"&nsubseteq;\",\"\u2281\":\"&nsucc;\",\"\u2AB0\u0338\":\"&nsucceq;\",\"\u22E1\":\"&nsccue;\",\"\u227F\u0338\":\"&NotSucceedsTilde;\",\"\u2283\u20D2\":\"&vnsup;\",\"\u2289\":\"&nsupseteq;\",\"\u2241\":\"&nsim;\",\"\u2244\":\"&nsimeq;\",\"\u2247\":\"&ncong;\",\"\u2249\":\"&napprox;\",\"\u2224\":\"&nsmid;\",\"\uD835\uDCA9\":\"&Nscr;\",\"\u00D1\":\"&Ntilde;\",\"\u039D\":\"&Nu;\",\"\u0152\":\"&OElig;\",\"\u00D3\":\"&Oacute;\",\"\u00D4\":\"&Ocirc;\",\"\u041E\":\"&Ocy;\",\"\u0150\":\"&Odblac;\",\"\uD835\uDD12\":\"&Ofr;\",\"\u00D2\":\"&Ograve;\",\"\u014C\":\"&Omacr;\",\"\u03A9\":\"&ohm;\",\"\u039F\":\"&Omicron;\",\"\uD835\uDD46\":\"&Oopf;\",\"\u201C\":\"&ldquo;\",\"\u2018\":\"&lsquo;\",\"\u2A54\":\"&Or;\",\"\uD835\uDCAA\":\"&Oscr;\",\"\u00D8\":\"&Oslash;\",\"\u00D5\":\"&Otilde;\",\"\u2A37\":\"&Otimes;\",\"\u00D6\":\"&Ouml;\",\"\u203E\":\"&oline;\",\"\u23DE\":\"&OverBrace;\",\"\u23B4\":\"&tbrk;\",\"\u23DC\":\"&OverParenthesis;\",\"\u2202\":\"&part;\",\"\u041F\":\"&Pcy;\",\"\uD835\uDD13\":\"&Pfr;\",\"\u03A6\":\"&Phi;\",\"\u03A0\":\"&Pi;\",\"\u00B1\":\"&pm;\",\"\u2119\":\"&primes;\",\"\u2ABB\":\"&Pr;\",\"\u227A\":\"&prec;\",\"\u2AAF\":\"&preceq;\",\"\u227C\":\"&preccurlyeq;\",\"\u227E\":\"&prsim;\",\"\u2033\":\"&Prime;\",\"\u220F\":\"&prod;\",\"\u221D\":\"&vprop;\",\"\uD835\uDCAB\":\"&Pscr;\",\"\u03A8\":\"&Psi;\",'\"':\"&quot;\",\"\uD835\uDD14\":\"&Qfr;\",\"\u211A\":\"&rationals;\",\"\uD835\uDCAC\":\"&Qscr;\",\"\u2910\":\"&drbkarow;\",\"\u00AE\":\"&reg;\",\"\u0154\":\"&Racute;\",\"\u27EB\":\"&Rang;\",\"\u21A0\":\"&twoheadrightarrow;\",\"\u2916\":\"&Rarrtl;\",\"\u0158\":\"&Rcaron;\",\"\u0156\":\"&Rcedil;\",\"\u0420\":\"&Rcy;\",\"\u211C\":\"&realpart;\",\"\u220B\":\"&niv;\",\"\u21CB\":\"&lrhar;\",\"\u296F\":\"&duhar;\",\"\u03A1\":\"&Rho;\",\"\u27E9\":\"&rangle;\",\"\u2192\":\"&srarr;\",\"\u21E5\":\"&rarrb;\",\"\u21C4\":\"&rlarr;\",\"\u2309\":\"&rceil;\",\"\u27E7\":\"&robrk;\",\"\u295D\":\"&RightDownTeeVector;\",\"\u21C2\":\"&downharpoonright;\",\"\u2955\":\"&RightDownVectorBar;\",\"\u230B\":\"&rfloor;\",\"\u22A2\":\"&vdash;\",\"\u21A6\":\"&mapsto;\",\"\u295B\":\"&RightTeeVector;\",\"\u22B3\":\"&vrtri;\",\"\u29D0\":\"&RightTriangleBar;\",\"\u22B5\":\"&trianglerighteq;\",\"\u294F\":\"&RightUpDownVector;\",\"\u295C\":\"&RightUpTeeVector;\",\"\u21BE\":\"&upharpoonright;\",\"\u2954\":\"&RightUpVectorBar;\",\"\u21C0\":\"&rightharpoonup;\",\"\u2953\":\"&RightVectorBar;\",\"\u211D\":\"&reals;\",\"\u2970\":\"&RoundImplies;\",\"\u21DB\":\"&rAarr;\",\"\u211B\":\"&realine;\",\"\u21B1\":\"&rsh;\",\"\u29F4\":\"&RuleDelayed;\",\"\u0429\":\"&SHCHcy;\",\"\u0428\":\"&SHcy;\",\"\u042C\":\"&SOFTcy;\",\"\u015A\":\"&Sacute;\",\"\u2ABC\":\"&Sc;\",\"\u0160\":\"&Scaron;\",\"\u015E\":\"&Scedil;\",\"\u015C\":\"&Scirc;\",\"\u0421\":\"&Scy;\",\"\uD835\uDD16\":\"&Sfr;\",\"\u2191\":\"&uparrow;\",\"\u03A3\":\"&Sigma;\",\"\u2218\":\"&compfn;\",\"\uD835\uDD4A\":\"&Sopf;\",\"\u221A\":\"&radic;\",\"\u25A1\":\"&square;\",\"\u2293\":\"&sqcap;\",\"\u228F\":\"&sqsubset;\",\"\u2291\":\"&sqsubseteq;\",\"\u2290\":\"&sqsupset;\",\"\u2292\":\"&sqsupseteq;\",\"\u2294\":\"&sqcup;\",\"\uD835\uDCAE\":\"&Sscr;\",\"\u22C6\":\"&sstarf;\",\"\u22D0\":\"&Subset;\",\"\u2286\":\"&subseteq;\",\"\u227B\":\"&succ;\",\"\u2AB0\":\"&succeq;\",\"\u227D\":\"&succcurlyeq;\",\"\u227F\":\"&succsim;\",\"\u2211\":\"&sum;\",\"\u22D1\":\"&Supset;\",\"\u2283\":\"&supset;\",\"\u2287\":\"&supseteq;\",\"\u00DE\":\"&THORN;\",\"\u2122\":\"&trade;\",\"\u040B\":\"&TSHcy;\",\"\u0426\":\"&TScy;\",\"\\t\":\"&Tab;\",\"\u03A4\":\"&Tau;\",\"\u0164\":\"&Tcaron;\",\"\u0162\":\"&Tcedil;\",\"\u0422\":\"&Tcy;\",\"\uD835\uDD17\":\"&Tfr;\",\"\u2234\":\"&therefore;\",\"\u0398\":\"&Theta;\",\"\u205F\u200A\":\"&ThickSpace;\",\"\u2009\":\"&thinsp;\",\"\u223C\":\"&thksim;\",\"\u2243\":\"&simeq;\",\"\u2245\":\"&cong;\",\"\u2248\":\"&thkap;\",\"\uD835\uDD4B\":\"&Topf;\",\"\u20DB\":\"&tdot;\",\"\uD835\uDCAF\":\"&Tscr;\",\"\u0166\":\"&Tstrok;\",\"\u00DA\":\"&Uacute;\",\"\u219F\":\"&Uarr;\",\"\u2949\":\"&Uarrocir;\",\"\u040E\":\"&Ubrcy;\",\"\u016C\":\"&Ubreve;\",\"\u00DB\":\"&Ucirc;\",\"\u0423\":\"&Ucy;\",\"\u0170\":\"&Udblac;\",\"\uD835\uDD18\":\"&Ufr;\",\"\u00D9\":\"&Ugrave;\",\"\u016A\":\"&Umacr;\",_:\"&lowbar;\",\"\u23DF\":\"&UnderBrace;\",\"\u23B5\":\"&bbrk;\",\"\u23DD\":\"&UnderParenthesis;\",\"\u22C3\":\"&xcup;\",\"\u228E\":\"&uplus;\",\"\u0172\":\"&Uogon;\",\"\uD835\uDD4C\":\"&Uopf;\",\"\u2912\":\"&UpArrowBar;\",\"\u21C5\":\"&udarr;\",\"\u2195\":\"&varr;\",\"\u296E\":\"&udhar;\",\"\u22A5\":\"&perp;\",\"\u21A5\":\"&mapstoup;\",\"\u2196\":\"&nwarrow;\",\"\u2197\":\"&nearrow;\",\"\u03D2\":\"&upsih;\",\"\u03A5\":\"&Upsilon;\",\"\u016E\":\"&Uring;\",\"\uD835\uDCB0\":\"&Uscr;\",\"\u0168\":\"&Utilde;\",\"\u00DC\":\"&Uuml;\",\"\u22AB\":\"&VDash;\",\"\u2AEB\":\"&Vbar;\",\"\u0412\":\"&Vcy;\",\"\u22A9\":\"&Vdash;\",\"\u2AE6\":\"&Vdashl;\",\"\u22C1\":\"&xvee;\",\"\u2016\":\"&Vert;\",\"\u2223\":\"&smid;\",\"|\":\"&vert;\",\"\u2758\":\"&VerticalSeparator;\",\"\u2240\":\"&wreath;\",\"\u200A\":\"&hairsp;\",\"\uD835\uDD19\":\"&Vfr;\",\"\uD835\uDD4D\":\"&Vopf;\",\"\uD835\uDCB1\":\"&Vscr;\",\"\u22AA\":\"&Vvdash;\",\"\u0174\":\"&Wcirc;\",\"\u22C0\":\"&xwedge;\",\"\uD835\uDD1A\":\"&Wfr;\",\"\uD835\uDD4E\":\"&Wopf;\",\"\uD835\uDCB2\":\"&Wscr;\",\"\uD835\uDD1B\":\"&Xfr;\",\"\u039E\":\"&Xi;\",\"\uD835\uDD4F\":\"&Xopf;\",\"\uD835\uDCB3\":\"&Xscr;\",\"\u042F\":\"&YAcy;\",\"\u0407\":\"&YIcy;\",\"\u042E\":\"&YUcy;\",\"\u00DD\":\"&Yacute;\",\"\u0176\":\"&Ycirc;\",\"\u042B\":\"&Ycy;\",\"\uD835\uDD1C\":\"&Yfr;\",\"\uD835\uDD50\":\"&Yopf;\",\"\uD835\uDCB4\":\"&Yscr;\",\"\u0178\":\"&Yuml;\",\"\u0416\":\"&ZHcy;\",\"\u0179\":\"&Zacute;\",\"\u017D\":\"&Zcaron;\",\"\u0417\":\"&Zcy;\",\"\u017B\":\"&Zdot;\",\"\u0396\":\"&Zeta;\",\"\u2128\":\"&zeetrf;\",\"\u2124\":\"&integers;\",\"\uD835\uDCB5\":\"&Zscr;\",\"\u00E1\":\"&aacute;\",\"\u0103\":\"&abreve;\",\"\u223E\":\"&mstpos;\",\"\u223E\u0333\":\"&acE;\",\"\u223F\":\"&acd;\",\"\u00E2\":\"&acirc;\",\"\u0430\":\"&acy;\",\"\u00E6\":\"&aelig;\",\"\uD835\uDD1E\":\"&afr;\",\"\u00E0\":\"&agrave;\",\"\u2135\":\"&aleph;\",\"\u03B1\":\"&alpha;\",\"\u0101\":\"&amacr;\",\"\u2A3F\":\"&amalg;\",\"\u2227\":\"&wedge;\",\"\u2A55\":\"&andand;\",\"\u2A5C\":\"&andd;\",\"\u2A58\":\"&andslope;\",\"\u2A5A\":\"&andv;\",\"\u2220\":\"&angle;\",\"\u29A4\":\"&ange;\",\"\u2221\":\"&measuredangle;\",\"\u29A8\":\"&angmsdaa;\",\"\u29A9\":\"&angmsdab;\",\"\u29AA\":\"&angmsdac;\",\"\u29AB\":\"&angmsdad;\",\"\u29AC\":\"&angmsdae;\",\"\u29AD\":\"&angmsdaf;\",\"\u29AE\":\"&angmsdag;\",\"\u29AF\":\"&angmsdah;\",\"\u221F\":\"&angrt;\",\"\u22BE\":\"&angrtvb;\",\"\u299D\":\"&angrtvbd;\",\"\u2222\":\"&angsph;\",\"\u237C\":\"&angzarr;\",\"\u0105\":\"&aogon;\",\"\uD835\uDD52\":\"&aopf;\",\"\u2A70\":\"&apE;\",\"\u2A6F\":\"&apacir;\",\"\u224A\":\"&approxeq;\",\"\u224B\":\"&apid;\",\"'\":\"&apos;\",\"\u00E5\":\"&aring;\",\"\uD835\uDCB6\":\"&ascr;\",\"*\":\"&midast;\",\"\u00E3\":\"&atilde;\",\"\u00E4\":\"&auml;\",\"\u2A11\":\"&awint;\",\"\u2AED\":\"&bNot;\",\"\u224C\":\"&bcong;\",\"\u03F6\":\"&bepsi;\",\"\u2035\":\"&bprime;\",\"\u223D\":\"&bsim;\",\"\u22CD\":\"&bsime;\",\"\u22BD\":\"&barvee;\",\"\u2305\":\"&barwedge;\",\"\u23B6\":\"&bbrktbrk;\",\"\u0431\":\"&bcy;\",\"\u201E\":\"&ldquor;\",\"\u29B0\":\"&bemptyv;\",\"\u03B2\":\"&beta;\",\"\u2136\":\"&beth;\",\"\u226C\":\"&twixt;\",\"\uD835\uDD1F\":\"&bfr;\",\"\u25EF\":\"&xcirc;\",\"\u2A00\":\"&xodot;\",\"\u2A01\":\"&xoplus;\",\"\u2A02\":\"&xotime;\",\"\u2A06\":\"&xsqcup;\",\"\u2605\":\"&starf;\",\"\u25BD\":\"&xdtri;\",\"\u25B3\":\"&xutri;\",\"\u2A04\":\"&xuplus;\",\"\u290D\":\"&rbarr;\",\"\u29EB\":\"&lozf;\",\"\u25B4\":\"&utrif;\",\"\u25BE\":\"&dtrif;\",\"\u25C2\":\"&ltrif;\",\"\u25B8\":\"&rtrif;\",\"\u2423\":\"&blank;\",\"\u2592\":\"&blk12;\",\"\u2591\":\"&blk14;\",\"\u2593\":\"&blk34;\",\"\u2588\":\"&block;\",\"=\u20E5\":\"&bne;\",\"\u2261\u20E5\":\"&bnequiv;\",\"\u2310\":\"&bnot;\",\"\uD835\uDD53\":\"&bopf;\",\"\u22C8\":\"&bowtie;\",\"\u2557\":\"&boxDL;\",\"\u2554\":\"&boxDR;\",\"\u2556\":\"&boxDl;\",\"\u2553\":\"&boxDr;\",\"\u2550\":\"&boxH;\",\"\u2566\":\"&boxHD;\",\"\u2569\":\"&boxHU;\",\"\u2564\":\"&boxHd;\",\"\u2567\":\"&boxHu;\",\"\u255D\":\"&boxUL;\",\"\u255A\":\"&boxUR;\",\"\u255C\":\"&boxUl;\",\"\u2559\":\"&boxUr;\",\"\u2551\":\"&boxV;\",\"\u256C\":\"&boxVH;\",\"\u2563\":\"&boxVL;\",\"\u2560\":\"&boxVR;\",\"\u256B\":\"&boxVh;\",\"\u2562\":\"&boxVl;\",\"\u255F\":\"&boxVr;\",\"\u29C9\":\"&boxbox;\",\"\u2555\":\"&boxdL;\",\"\u2552\":\"&boxdR;\",\"\u2510\":\"&boxdl;\",\"\u250C\":\"&boxdr;\",\"\u2565\":\"&boxhD;\",\"\u2568\":\"&boxhU;\",\"\u252C\":\"&boxhd;\",\"\u2534\":\"&boxhu;\",\"\u229F\":\"&minusb;\",\"\u229E\":\"&plusb;\",\"\u22A0\":\"&timesb;\",\"\u255B\":\"&boxuL;\",\"\u2558\":\"&boxuR;\",\"\u2518\":\"&boxul;\",\"\u2514\":\"&boxur;\",\"\u2502\":\"&boxv;\",\"\u256A\":\"&boxvH;\",\"\u2561\":\"&boxvL;\",\"\u255E\":\"&boxvR;\",\"\u253C\":\"&boxvh;\",\"\u2524\":\"&boxvl;\",\"\u251C\":\"&boxvr;\",\"\u00A6\":\"&brvbar;\",\"\uD835\uDCB7\":\"&bscr;\",\"\u204F\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"\u29C5\":\"&bsolb;\",\"\u27C8\":\"&bsolhsub;\",\"\u2022\":\"&bullet;\",\"\u2AAE\":\"&bumpE;\",\"\u0107\":\"&cacute;\",\"\u2229\":\"&cap;\",\"\u2A44\":\"&capand;\",\"\u2A49\":\"&capbrcup;\",\"\u2A4B\":\"&capcap;\",\"\u2A47\":\"&capcup;\",\"\u2A40\":\"&capdot;\",\"\u2229\uFE00\":\"&caps;\",\"\u2041\":\"&caret;\",\"\u2A4D\":\"&ccaps;\",\"\u010D\":\"&ccaron;\",\"\u00E7\":\"&ccedil;\",\"\u0109\":\"&ccirc;\",\"\u2A4C\":\"&ccups;\",\"\u2A50\":\"&ccupssm;\",\"\u010B\":\"&cdot;\",\"\u29B2\":\"&cemptyv;\",\"\u00A2\":\"&cent;\",\"\uD835\uDD20\":\"&cfr;\",\"\u0447\":\"&chcy;\",\"\u2713\":\"&checkmark;\",\"\u03C7\":\"&chi;\",\"\u25CB\":\"&cir;\",\"\u29C3\":\"&cirE;\",\"\u02C6\":\"&circ;\",\"\u2257\":\"&cire;\",\"\u21BA\":\"&olarr;\",\"\u21BB\":\"&orarr;\",\"\u24C8\":\"&oS;\",\"\u229B\":\"&oast;\",\"\u229A\":\"&ocir;\",\"\u229D\":\"&odash;\",\"\u2A10\":\"&cirfnint;\",\"\u2AEF\":\"&cirmid;\",\"\u29C2\":\"&cirscir;\",\"\u2663\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"\u2201\":\"&complement;\",\"\u2A6D\":\"&congdot;\",\"\uD835\uDD54\":\"&copf;\",\"\u2117\":\"&copysr;\",\"\u21B5\":\"&crarr;\",\"\u2717\":\"&cross;\",\"\uD835\uDCB8\":\"&cscr;\",\"\u2ACF\":\"&csub;\",\"\u2AD1\":\"&csube;\",\"\u2AD0\":\"&csup;\",\"\u2AD2\":\"&csupe;\",\"\u22EF\":\"&ctdot;\",\"\u2938\":\"&cudarrl;\",\"\u2935\":\"&cudarrr;\",\"\u22DE\":\"&curlyeqprec;\",\"\u22DF\":\"&curlyeqsucc;\",\"\u21B6\":\"&curvearrowleft;\",\"\u293D\":\"&cularrp;\",\"\u222A\":\"&cup;\",\"\u2A48\":\"&cupbrcap;\",\"\u2A46\":\"&cupcap;\",\"\u2A4A\":\"&cupcup;\",\"\u228D\":\"&cupdot;\",\"\u2A45\":\"&cupor;\",\"\u222A\uFE00\":\"&cups;\",\"\u21B7\":\"&curvearrowright;\",\"\u293C\":\"&curarrm;\",\"\u22CE\":\"&cuvee;\",\"\u22CF\":\"&cuwed;\",\"\u00A4\":\"&curren;\",\"\u2231\":\"&cwint;\",\"\u232D\":\"&cylcty;\",\"\u2965\":\"&dHar;\",\"\u2020\":\"&dagger;\",\"\u2138\":\"&daleth;\",\"\u2010\":\"&hyphen;\",\"\u290F\":\"&rBarr;\",\"\u010F\":\"&dcaron;\",\"\u0434\":\"&dcy;\",\"\u21CA\":\"&downdownarrows;\",\"\u2A77\":\"&eDDot;\",\"\u00B0\":\"&deg;\",\"\u03B4\":\"&delta;\",\"\u29B1\":\"&demptyv;\",\"\u297F\":\"&dfisht;\",\"\uD835\uDD21\":\"&dfr;\",\"\u2666\":\"&diams;\",\"\u03DD\":\"&gammad;\",\"\u22F2\":\"&disin;\",\"\u00F7\":\"&divide;\",\"\u22C7\":\"&divonx;\",\"\u0452\":\"&djcy;\",\"\u231E\":\"&llcorner;\",\"\u230D\":\"&dlcrop;\",$:\"&dollar;\",\"\uD835\uDD55\":\"&dopf;\",\"\u2251\":\"&eDot;\",\"\u2238\":\"&minusd;\",\"\u2214\":\"&plusdo;\",\"\u22A1\":\"&sdotb;\",\"\u231F\":\"&lrcorner;\",\"\u230C\":\"&drcrop;\",\"\uD835\uDCB9\":\"&dscr;\",\"\u0455\":\"&dscy;\",\"\u29F6\":\"&dsol;\",\"\u0111\":\"&dstrok;\",\"\u22F1\":\"&dtdot;\",\"\u25BF\":\"&triangledown;\",\"\u29A6\":\"&dwangle;\",\"\u045F\":\"&dzcy;\",\"\u27FF\":\"&dzigrarr;\",\"\u00E9\":\"&eacute;\",\"\u2A6E\":\"&easter;\",\"\u011B\":\"&ecaron;\",\"\u2256\":\"&eqcirc;\",\"\u00EA\":\"&ecirc;\",\"\u2255\":\"&eqcolon;\",\"\u044D\":\"&ecy;\",\"\u0117\":\"&edot;\",\"\u2252\":\"&fallingdotseq;\",\"\uD835\uDD22\":\"&efr;\",\"\u2A9A\":\"&eg;\",\"\u00E8\":\"&egrave;\",\"\u2A96\":\"&eqslantgtr;\",\"\u2A98\":\"&egsdot;\",\"\u2A99\":\"&el;\",\"\u23E7\":\"&elinters;\",\"\u2113\":\"&ell;\",\"\u2A95\":\"&eqslantless;\",\"\u2A97\":\"&elsdot;\",\"\u0113\":\"&emacr;\",\"\u2205\":\"&varnothing;\",\"\u2004\":\"&emsp13;\",\"\u2005\":\"&emsp14;\",\"\u2003\":\"&emsp;\",\"\u014B\":\"&eng;\",\"\u2002\":\"&ensp;\",\"\u0119\":\"&eogon;\",\"\uD835\uDD56\":\"&eopf;\",\"\u22D5\":\"&epar;\",\"\u29E3\":\"&eparsl;\",\"\u2A71\":\"&eplus;\",\"\u03B5\":\"&epsilon;\",\"\u03F5\":\"&varepsilon;\",\"=\":\"&equals;\",\"\u225F\":\"&questeq;\",\"\u2A78\":\"&equivDD;\",\"\u29E5\":\"&eqvparsl;\",\"\u2253\":\"&risingdotseq;\",\"\u2971\":\"&erarr;\",\"\u212F\":\"&escr;\",\"\u03B7\":\"&eta;\",\"\u00F0\":\"&eth;\",\"\u00EB\":\"&euml;\",\"\u20AC\":\"&euro;\",\"!\":\"&excl;\",\"\u0444\":\"&fcy;\",\"\u2640\":\"&female;\",\"\uFB03\":\"&ffilig;\",\"\uFB00\":\"&fflig;\",\"\uFB04\":\"&ffllig;\",\"\uD835\uDD23\":\"&ffr;\",\"\uFB01\":\"&filig;\",fj:\"&fjlig;\",\"\u266D\":\"&flat;\",\"\uFB02\":\"&fllig;\",\"\u25B1\":\"&fltns;\",\"\u0192\":\"&fnof;\",\"\uD835\uDD57\":\"&fopf;\",\"\u22D4\":\"&pitchfork;\",\"\u2AD9\":\"&forkv;\",\"\u2A0D\":\"&fpartint;\",\"\u00BD\":\"&half;\",\"\u2153\":\"&frac13;\",\"\u00BC\":\"&frac14;\",\"\u2155\":\"&frac15;\",\"\u2159\":\"&frac16;\",\"\u215B\":\"&frac18;\",\"\u2154\":\"&frac23;\",\"\u2156\":\"&frac25;\",\"\u00BE\":\"&frac34;\",\"\u2157\":\"&frac35;\",\"\u215C\":\"&frac38;\",\"\u2158\":\"&frac45;\",\"\u215A\":\"&frac56;\",\"\u215D\":\"&frac58;\",\"\u215E\":\"&frac78;\",\"\u2044\":\"&frasl;\",\"\u2322\":\"&sfrown;\",\"\uD835\uDCBB\":\"&fscr;\",\"\u2A8C\":\"&gtreqqless;\",\"\u01F5\":\"&gacute;\",\"\u03B3\":\"&gamma;\",\"\u2A86\":\"&gtrapprox;\",\"\u011F\":\"&gbreve;\",\"\u011D\":\"&gcirc;\",\"\u0433\":\"&gcy;\",\"\u0121\":\"&gdot;\",\"\u2AA9\":\"&gescc;\",\"\u2A80\":\"&gesdot;\",\"\u2A82\":\"&gesdoto;\",\"\u2A84\":\"&gesdotol;\",\"\u22DB\uFE00\":\"&gesl;\",\"\u2A94\":\"&gesles;\",\"\uD835\uDD24\":\"&gfr;\",\"\u2137\":\"&gimel;\",\"\u0453\":\"&gjcy;\",\"\u2A92\":\"&glE;\",\"\u2AA5\":\"&gla;\",\"\u2AA4\":\"&glj;\",\"\u2269\":\"&gneqq;\",\"\u2A8A\":\"&gnapprox;\",\"\u2A88\":\"&gneq;\",\"\u22E7\":\"&gnsim;\",\"\uD835\uDD58\":\"&gopf;\",\"\u210A\":\"&gscr;\",\"\u2A8E\":\"&gsime;\",\"\u2A90\":\"&gsiml;\",\"\u2AA7\":\"&gtcc;\",\"\u2A7A\":\"&gtcir;\",\"\u22D7\":\"&gtrdot;\",\"\u2995\":\"&gtlPar;\",\"\u2A7C\":\"&gtquest;\",\"\u2978\":\"&gtrarr;\",\"\u2269\uFE00\":\"&gvnE;\",\"\u044A\":\"&hardcy;\",\"\u2948\":\"&harrcir;\",\"\u21AD\":\"&leftrightsquigarrow;\",\"\u210F\":\"&plankv;\",\"\u0125\":\"&hcirc;\",\"\u2665\":\"&heartsuit;\",\"\u2026\":\"&mldr;\",\"\u22B9\":\"&hercon;\",\"\uD835\uDD25\":\"&hfr;\",\"\u2925\":\"&searhk;\",\"\u2926\":\"&swarhk;\",\"\u21FF\":\"&hoarr;\",\"\u223B\":\"&homtht;\",\"\u21A9\":\"&larrhk;\",\"\u21AA\":\"&rarrhk;\",\"\uD835\uDD59\":\"&hopf;\",\"\u2015\":\"&horbar;\",\"\uD835\uDCBD\":\"&hscr;\",\"\u0127\":\"&hstrok;\",\"\u2043\":\"&hybull;\",\"\u00ED\":\"&iacute;\",\"\u00EE\":\"&icirc;\",\"\u0438\":\"&icy;\",\"\u0435\":\"&iecy;\",\"\u00A1\":\"&iexcl;\",\"\uD835\uDD26\":\"&ifr;\",\"\u00EC\":\"&igrave;\",\"\u2A0C\":\"&qint;\",\"\u222D\":\"&tint;\",\"\u29DC\":\"&iinfin;\",\"\u2129\":\"&iiota;\",\"\u0133\":\"&ijlig;\",\"\u012B\":\"&imacr;\",\"\u0131\":\"&inodot;\",\"\u22B7\":\"&imof;\",\"\u01B5\":\"&imped;\",\"\u2105\":\"&incare;\",\"\u221E\":\"&infin;\",\"\u29DD\":\"&infintie;\",\"\u22BA\":\"&intercal;\",\"\u2A17\":\"&intlarhk;\",\"\u2A3C\":\"&iprod;\",\"\u0451\":\"&iocy;\",\"\u012F\":\"&iogon;\",\"\uD835\uDD5A\":\"&iopf;\",\"\u03B9\":\"&iota;\",\"\u00BF\":\"&iquest;\",\"\uD835\uDCBE\":\"&iscr;\",\"\u22F9\":\"&isinE;\",\"\u22F5\":\"&isindot;\",\"\u22F4\":\"&isins;\",\"\u22F3\":\"&isinsv;\",\"\u0129\":\"&itilde;\",\"\u0456\":\"&iukcy;\",\"\u00EF\":\"&iuml;\",\"\u0135\":\"&jcirc;\",\"\u0439\":\"&jcy;\",\"\uD835\uDD27\":\"&jfr;\",\"\u0237\":\"&jmath;\",\"\uD835\uDD5B\":\"&jopf;\",\"\uD835\uDCBF\":\"&jscr;\",\"\u0458\":\"&jsercy;\",\"\u0454\":\"&jukcy;\",\"\u03BA\":\"&kappa;\",\"\u03F0\":\"&varkappa;\",\"\u0137\":\"&kcedil;\",\"\u043A\":\"&kcy;\",\"\uD835\uDD28\":\"&kfr;\",\"\u0138\":\"&kgreen;\",\"\u0445\":\"&khcy;\",\"\u045C\":\"&kjcy;\",\"\uD835\uDD5C\":\"&kopf;\",\"\uD835\uDCC0\":\"&kscr;\",\"\u291B\":\"&lAtail;\",\"\u290E\":\"&lBarr;\",\"\u2A8B\":\"&lesseqqgtr;\",\"\u2962\":\"&lHar;\",\"\u013A\":\"&lacute;\",\"\u29B4\":\"&laemptyv;\",\"\u03BB\":\"&lambda;\",\"\u2991\":\"&langd;\",\"\u2A85\":\"&lessapprox;\",\"\u00AB\":\"&laquo;\",\"\u291F\":\"&larrbfs;\",\"\u291D\":\"&larrfs;\",\"\u21AB\":\"&looparrowleft;\",\"\u2939\":\"&larrpl;\",\"\u2973\":\"&larrsim;\",\"\u21A2\":\"&leftarrowtail;\",\"\u2AAB\":\"&lat;\",\"\u2919\":\"&latail;\",\"\u2AAD\":\"&late;\",\"\u2AAD\uFE00\":\"&lates;\",\"\u290C\":\"&lbarr;\",\"\u2772\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"\u298B\":\"&lbrke;\",\"\u298F\":\"&lbrksld;\",\"\u298D\":\"&lbrkslu;\",\"\u013E\":\"&lcaron;\",\"\u013C\":\"&lcedil;\",\"\u043B\":\"&lcy;\",\"\u2936\":\"&ldca;\",\"\u2967\":\"&ldrdhar;\",\"\u294B\":\"&ldrushar;\",\"\u21B2\":\"&ldsh;\",\"\u2264\":\"&leq;\",\"\u21C7\":\"&llarr;\",\"\u22CB\":\"&lthree;\",\"\u2AA8\":\"&lescc;\",\"\u2A7F\":\"&lesdot;\",\"\u2A81\":\"&lesdoto;\",\"\u2A83\":\"&lesdotor;\",\"\u22DA\uFE00\":\"&lesg;\",\"\u2A93\":\"&lesges;\",\"\u22D6\":\"&ltdot;\",\"\u297C\":\"&lfisht;\",\"\uD835\uDD29\":\"&lfr;\",\"\u2A91\":\"&lgE;\",\"\u296A\":\"&lharul;\",\"\u2584\":\"&lhblk;\",\"\u0459\":\"&ljcy;\",\"\u296B\":\"&llhard;\",\"\u25FA\":\"&lltri;\",\"\u0140\":\"&lmidot;\",\"\u23B0\":\"&lmoustache;\",\"\u2268\":\"&lneqq;\",\"\u2A89\":\"&lnapprox;\",\"\u2A87\":\"&lneq;\",\"\u22E6\":\"&lnsim;\",\"\u27EC\":\"&loang;\",\"\u21FD\":\"&loarr;\",\"\u27FC\":\"&xmap;\",\"\u21AC\":\"&rarrlp;\",\"\u2985\":\"&lopar;\",\"\uD835\uDD5D\":\"&lopf;\",\"\u2A2D\":\"&loplus;\",\"\u2A34\":\"&lotimes;\",\"\u2217\":\"&lowast;\",\"\u25CA\":\"&lozenge;\",\"(\":\"&lpar;\",\"\u2993\":\"&lparlt;\",\"\u296D\":\"&lrhard;\",\"\u200E\":\"&lrm;\",\"\u22BF\":\"&lrtri;\",\"\u2039\":\"&lsaquo;\",\"\uD835\uDCC1\":\"&lscr;\",\"\u2A8D\":\"&lsime;\",\"\u2A8F\":\"&lsimg;\",\"\u201A\":\"&sbquo;\",\"\u0142\":\"&lstrok;\",\"\u2AA6\":\"&ltcc;\",\"\u2A79\":\"&ltcir;\",\"\u22C9\":\"&ltimes;\",\"\u2976\":\"&ltlarr;\",\"\u2A7B\":\"&ltquest;\",\"\u2996\":\"&ltrPar;\",\"\u25C3\":\"&triangleleft;\",\"\u294A\":\"&lurdshar;\",\"\u2966\":\"&luruhar;\",\"\u2268\uFE00\":\"&lvnE;\",\"\u223A\":\"&mDDot;\",\"\u00AF\":\"&strns;\",\"\u2642\":\"&male;\",\"\u2720\":\"&maltese;\",\"\u25AE\":\"&marker;\",\"\u2A29\":\"&mcomma;\",\"\u043C\":\"&mcy;\",\"\u2014\":\"&mdash;\",\"\uD835\uDD2A\":\"&mfr;\",\"\u2127\":\"&mho;\",\"\u00B5\":\"&micro;\",\"\u2AF0\":\"&midcir;\",\"\u2212\":\"&minus;\",\"\u2A2A\":\"&minusdu;\",\"\u2ADB\":\"&mlcp;\",\"\u22A7\":\"&models;\",\"\uD835\uDD5E\":\"&mopf;\",\"\uD835\uDCC2\":\"&mscr;\",\"\u03BC\":\"&mu;\",\"\u22B8\":\"&mumap;\",\"\u22D9\u0338\":\"&nGg;\",\"\u226B\u20D2\":\"&nGt;\",\"\u21CD\":\"&nlArr;\",\"\u21CE\":\"&nhArr;\",\"\u22D8\u0338\":\"&nLl;\",\"\u226A\u20D2\":\"&nLt;\",\"\u21CF\":\"&nrArr;\",\"\u22AF\":\"&nVDash;\",\"\u22AE\":\"&nVdash;\",\"\u0144\":\"&nacute;\",\"\u2220\u20D2\":\"&nang;\",\"\u2A70\u0338\":\"&napE;\",\"\u224B\u0338\":\"&napid;\",\"\u0149\":\"&napos;\",\"\u266E\":\"&natural;\",\"\u2A43\":\"&ncap;\",\"\u0148\":\"&ncaron;\",\"\u0146\":\"&ncedil;\",\"\u2A6D\u0338\":\"&ncongdot;\",\"\u2A42\":\"&ncup;\",\"\u043D\":\"&ncy;\",\"\u2013\":\"&ndash;\",\"\u21D7\":\"&neArr;\",\"\u2924\":\"&nearhk;\",\"\u2250\u0338\":\"&nedot;\",\"\u2928\":\"&toea;\",\"\uD835\uDD2B\":\"&nfr;\",\"\u21AE\":\"&nleftrightarrow;\",\"\u2AF2\":\"&nhpar;\",\"\u22FC\":\"&nis;\",\"\u22FA\":\"&nisd;\",\"\u045A\":\"&njcy;\",\"\u2266\u0338\":\"&nleqq;\",\"\u219A\":\"&nleftarrow;\",\"\u2025\":\"&nldr;\",\"\uD835\uDD5F\":\"&nopf;\",\"\u00AC\":\"&not;\",\"\u22F9\u0338\":\"&notinE;\",\"\u22F5\u0338\":\"&notindot;\",\"\u22F7\":\"&notinvb;\",\"\u22F6\":\"&notinvc;\",\"\u22FE\":\"&notnivb;\",\"\u22FD\":\"&notnivc;\",\"\u2AFD\u20E5\":\"&nparsl;\",\"\u2202\u0338\":\"&npart;\",\"\u2A14\":\"&npolint;\",\"\u219B\":\"&nrightarrow;\",\"\u2933\u0338\":\"&nrarrc;\",\"\u219D\u0338\":\"&nrarrw;\",\"\uD835\uDCC3\":\"&nscr;\",\"\u2284\":\"&nsub;\",\"\u2AC5\u0338\":\"&nsubseteqq;\",\"\u2285\":\"&nsup;\",\"\u2AC6\u0338\":\"&nsupseteqq;\",\"\u00F1\":\"&ntilde;\",\"\u03BD\":\"&nu;\",\"#\":\"&num;\",\"\u2116\":\"&numero;\",\"\u2007\":\"&numsp;\",\"\u22AD\":\"&nvDash;\",\"\u2904\":\"&nvHarr;\",\"\u224D\u20D2\":\"&nvap;\",\"\u22AC\":\"&nvdash;\",\"\u2265\u20D2\":\"&nvge;\",\">\u20D2\":\"&nvgt;\",\"\u29DE\":\"&nvinfin;\",\"\u2902\":\"&nvlArr;\",\"\u2264\u20D2\":\"&nvle;\",\"<\u20D2\":\"&nvlt;\",\"\u22B4\u20D2\":\"&nvltrie;\",\"\u2903\":\"&nvrArr;\",\"\u22B5\u20D2\":\"&nvrtrie;\",\"\u223C\u20D2\":\"&nvsim;\",\"\u21D6\":\"&nwArr;\",\"\u2923\":\"&nwarhk;\",\"\u2927\":\"&nwnear;\",\"\u00F3\":\"&oacute;\",\"\u00F4\":\"&ocirc;\",\"\u043E\":\"&ocy;\",\"\u0151\":\"&odblac;\",\"\u2A38\":\"&odiv;\",\"\u29BC\":\"&odsold;\",\"\u0153\":\"&oelig;\",\"\u29BF\":\"&ofcir;\",\"\uD835\uDD2C\":\"&ofr;\",\"\u02DB\":\"&ogon;\",\"\u00F2\":\"&ograve;\",\"\u29C1\":\"&ogt;\",\"\u29B5\":\"&ohbar;\",\"\u29BE\":\"&olcir;\",\"\u29BB\":\"&olcross;\",\"\u29C0\":\"&olt;\",\"\u014D\":\"&omacr;\",\"\u03C9\":\"&omega;\",\"\u03BF\":\"&omicron;\",\"\u29B6\":\"&omid;\",\"\uD835\uDD60\":\"&oopf;\",\"\u29B7\":\"&opar;\",\"\u29B9\":\"&operp;\",\"\u2228\":\"&vee;\",\"\u2A5D\":\"&ord;\",\"\u2134\":\"&oscr;\",\"\u00AA\":\"&ordf;\",\"\u00BA\":\"&ordm;\",\"\u22B6\":\"&origof;\",\"\u2A56\":\"&oror;\",\"\u2A57\":\"&orslope;\",\"\u2A5B\":\"&orv;\",\"\u00F8\":\"&oslash;\",\"\u2298\":\"&osol;\",\"\u00F5\":\"&otilde;\",\"\u2A36\":\"&otimesas;\",\"\u00F6\":\"&ouml;\",\"\u233D\":\"&ovbar;\",\"\u00B6\":\"&para;\",\"\u2AF3\":\"&parsim;\",\"\u2AFD\":\"&parsl;\",\"\u043F\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"\u2030\":\"&permil;\",\"\u2031\":\"&pertenk;\",\"\uD835\uDD2D\":\"&pfr;\",\"\u03C6\":\"&phi;\",\"\u03D5\":\"&varphi;\",\"\u260E\":\"&phone;\",\"\u03C0\":\"&pi;\",\"\u03D6\":\"&varpi;\",\"\u210E\":\"&planckh;\",\"+\":\"&plus;\",\"\u2A23\":\"&plusacir;\",\"\u2A22\":\"&pluscir;\",\"\u2A25\":\"&plusdu;\",\"\u2A72\":\"&pluse;\",\"\u2A26\":\"&plussim;\",\"\u2A27\":\"&plustwo;\",\"\u2A15\":\"&pointint;\",\"\uD835\uDD61\":\"&popf;\",\"\u00A3\":\"&pound;\",\"\u2AB3\":\"&prE;\",\"\u2AB7\":\"&precapprox;\",\"\u2AB9\":\"&prnap;\",\"\u2AB5\":\"&prnE;\",\"\u22E8\":\"&prnsim;\",\"\u2032\":\"&prime;\",\"\u232E\":\"&profalar;\",\"\u2312\":\"&profline;\",\"\u2313\":\"&profsurf;\",\"\u22B0\":\"&prurel;\",\"\uD835\uDCC5\":\"&pscr;\",\"\u03C8\":\"&psi;\",\"\u2008\":\"&puncsp;\",\"\uD835\uDD2E\":\"&qfr;\",\"\uD835\uDD62\":\"&qopf;\",\"\u2057\":\"&qprime;\",\"\uD835\uDCC6\":\"&qscr;\",\"\u2A16\":\"&quatint;\",\"?\":\"&quest;\",\"\u291C\":\"&rAtail;\",\"\u2964\":\"&rHar;\",\"\u223D\u0331\":\"&race;\",\"\u0155\":\"&racute;\",\"\u29B3\":\"&raemptyv;\",\"\u2992\":\"&rangd;\",\"\u29A5\":\"&range;\",\"\u00BB\":\"&raquo;\",\"\u2975\":\"&rarrap;\",\"\u2920\":\"&rarrbfs;\",\"\u2933\":\"&rarrc;\",\"\u291E\":\"&rarrfs;\",\"\u2945\":\"&rarrpl;\",\"\u2974\":\"&rarrsim;\",\"\u21A3\":\"&rightarrowtail;\",\"\u219D\":\"&rightsquigarrow;\",\"\u291A\":\"&ratail;\",\"\u2236\":\"&ratio;\",\"\u2773\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"\u298C\":\"&rbrke;\",\"\u298E\":\"&rbrksld;\",\"\u2990\":\"&rbrkslu;\",\"\u0159\":\"&rcaron;\",\"\u0157\":\"&rcedil;\",\"\u0440\":\"&rcy;\",\"\u2937\":\"&rdca;\",\"\u2969\":\"&rdldhar;\",\"\u21B3\":\"&rdsh;\",\"\u25AD\":\"&rect;\",\"\u297D\":\"&rfisht;\",\"\uD835\uDD2F\":\"&rfr;\",\"\u296C\":\"&rharul;\",\"\u03C1\":\"&rho;\",\"\u03F1\":\"&varrho;\",\"\u21C9\":\"&rrarr;\",\"\u22CC\":\"&rthree;\",\"\u02DA\":\"&ring;\",\"\u200F\":\"&rlm;\",\"\u23B1\":\"&rmoustache;\",\"\u2AEE\":\"&rnmid;\",\"\u27ED\":\"&roang;\",\"\u21FE\":\"&roarr;\",\"\u2986\":\"&ropar;\",\"\uD835\uDD63\":\"&ropf;\",\"\u2A2E\":\"&roplus;\",\"\u2A35\":\"&rotimes;\",\")\":\"&rpar;\",\"\u2994\":\"&rpargt;\",\"\u2A12\":\"&rppolint;\",\"\u203A\":\"&rsaquo;\",\"\uD835\uDCC7\":\"&rscr;\",\"\u22CA\":\"&rtimes;\",\"\u25B9\":\"&triangleright;\",\"\u29CE\":\"&rtriltri;\",\"\u2968\":\"&ruluhar;\",\"\u211E\":\"&rx;\",\"\u015B\":\"&sacute;\",\"\u2AB4\":\"&scE;\",\"\u2AB8\":\"&succapprox;\",\"\u0161\":\"&scaron;\",\"\u015F\":\"&scedil;\",\"\u015D\":\"&scirc;\",\"\u2AB6\":\"&succneqq;\",\"\u2ABA\":\"&succnapprox;\",\"\u22E9\":\"&succnsim;\",\"\u2A13\":\"&scpolint;\",\"\u0441\":\"&scy;\",\"\u22C5\":\"&sdot;\",\"\u2A66\":\"&sdote;\",\"\u21D8\":\"&seArr;\",\"\u00A7\":\"&sect;\",\";\":\"&semi;\",\"\u2929\":\"&tosa;\",\"\u2736\":\"&sext;\",\"\uD835\uDD30\":\"&sfr;\",\"\u266F\":\"&sharp;\",\"\u0449\":\"&shchcy;\",\"\u0448\":\"&shcy;\",\"\u00AD\":\"&shy;\",\"\u03C3\":\"&sigma;\",\"\u03C2\":\"&varsigma;\",\"\u2A6A\":\"&simdot;\",\"\u2A9E\":\"&simg;\",\"\u2AA0\":\"&simgE;\",\"\u2A9D\":\"&siml;\",\"\u2A9F\":\"&simlE;\",\"\u2246\":\"&simne;\",\"\u2A24\":\"&simplus;\",\"\u2972\":\"&simrarr;\",\"\u2A33\":\"&smashp;\",\"\u29E4\":\"&smeparsl;\",\"\u2323\":\"&ssmile;\",\"\u2AAA\":\"&smt;\",\"\u2AAC\":\"&smte;\",\"\u2AAC\uFE00\":\"&smtes;\",\"\u044C\":\"&softcy;\",\"/\":\"&sol;\",\"\u29C4\":\"&solb;\",\"\u233F\":\"&solbar;\",\"\uD835\uDD64\":\"&sopf;\",\"\u2660\":\"&spadesuit;\",\"\u2293\uFE00\":\"&sqcaps;\",\"\u2294\uFE00\":\"&sqcups;\",\"\uD835\uDCC8\":\"&sscr;\",\"\u2606\":\"&star;\",\"\u2282\":\"&subset;\",\"\u2AC5\":\"&subseteqq;\",\"\u2ABD\":\"&subdot;\",\"\u2AC3\":\"&subedot;\",\"\u2AC1\":\"&submult;\",\"\u2ACB\":\"&subsetneqq;\",\"\u228A\":\"&subsetneq;\",\"\u2ABF\":\"&subplus;\",\"\u2979\":\"&subrarr;\",\"\u2AC7\":\"&subsim;\",\"\u2AD5\":\"&subsub;\",\"\u2AD3\":\"&subsup;\",\"\u266A\":\"&sung;\",\"\u00B9\":\"&sup1;\",\"\u00B2\":\"&sup2;\",\"\u00B3\":\"&sup3;\",\"\u2AC6\":\"&supseteqq;\",\"\u2ABE\":\"&supdot;\",\"\u2AD8\":\"&supdsub;\",\"\u2AC4\":\"&supedot;\",\"\u27C9\":\"&suphsol;\",\"\u2AD7\":\"&suphsub;\",\"\u297B\":\"&suplarr;\",\"\u2AC2\":\"&supmult;\",\"\u2ACC\":\"&supsetneqq;\",\"\u228B\":\"&supsetneq;\",\"\u2AC0\":\"&supplus;\",\"\u2AC8\":\"&supsim;\",\"\u2AD4\":\"&supsub;\",\"\u2AD6\":\"&supsup;\",\"\u21D9\":\"&swArr;\",\"\u292A\":\"&swnwar;\",\"\u00DF\":\"&szlig;\",\"\u2316\":\"&target;\",\"\u03C4\":\"&tau;\",\"\u0165\":\"&tcaron;\",\"\u0163\":\"&tcedil;\",\"\u0442\":\"&tcy;\",\"\u2315\":\"&telrec;\",\"\uD835\uDD31\":\"&tfr;\",\"\u03B8\":\"&theta;\",\"\u03D1\":\"&vartheta;\",\"\u00FE\":\"&thorn;\",\"\u00D7\":\"&times;\",\"\u2A31\":\"&timesbar;\",\"\u2A30\":\"&timesd;\",\"\u2336\":\"&topbot;\",\"\u2AF1\":\"&topcir;\",\"\uD835\uDD65\":\"&topf;\",\"\u2ADA\":\"&topfork;\",\"\u2034\":\"&tprime;\",\"\u25B5\":\"&utri;\",\"\u225C\":\"&trie;\",\"\u25EC\":\"&tridot;\",\"\u2A3A\":\"&triminus;\",\"\u2A39\":\"&triplus;\",\"\u29CD\":\"&trisb;\",\"\u2A3B\":\"&tritime;\",\"\u23E2\":\"&trpezium;\",\"\uD835\uDCC9\":\"&tscr;\",\"\u0446\":\"&tscy;\",\"\u045B\":\"&tshcy;\",\"\u0167\":\"&tstrok;\",\"\u2963\":\"&uHar;\",\"\u00FA\":\"&uacute;\",\"\u045E\":\"&ubrcy;\",\"\u016D\":\"&ubreve;\",\"\u00FB\":\"&ucirc;\",\"\u0443\":\"&ucy;\",\"\u0171\":\"&udblac;\",\"\u297E\":\"&ufisht;\",\"\uD835\uDD32\":\"&ufr;\",\"\u00F9\":\"&ugrave;\",\"\u2580\":\"&uhblk;\",\"\u231C\":\"&ulcorner;\",\"\u230F\":\"&ulcrop;\",\"\u25F8\":\"&ultri;\",\"\u016B\":\"&umacr;\",\"\u0173\":\"&uogon;\",\"\uD835\uDD66\":\"&uopf;\",\"\u03C5\":\"&upsilon;\",\"\u21C8\":\"&uuarr;\",\"\u231D\":\"&urcorner;\",\"\u230E\":\"&urcrop;\",\"\u016F\":\"&uring;\",\"\u25F9\":\"&urtri;\",\"\uD835\uDCCA\":\"&uscr;\",\"\u22F0\":\"&utdot;\",\"\u0169\":\"&utilde;\",\"\u00FC\":\"&uuml;\",\"\u29A7\":\"&uwangle;\",\"\u2AE8\":\"&vBar;\",\"\u2AE9\":\"&vBarv;\",\"\u299C\":\"&vangrt;\",\"\u228A\uFE00\":\"&vsubne;\",\"\u2ACB\uFE00\":\"&vsubnE;\",\"\u228B\uFE00\":\"&vsupne;\",\"\u2ACC\uFE00\":\"&vsupnE;\",\"\u0432\":\"&vcy;\",\"\u22BB\":\"&veebar;\",\"\u225A\":\"&veeeq;\",\"\u22EE\":\"&vellip;\",\"\uD835\uDD33\":\"&vfr;\",\"\uD835\uDD67\":\"&vopf;\",\"\uD835\uDCCB\":\"&vscr;\",\"\u299A\":\"&vzigzag;\",\"\u0175\":\"&wcirc;\",\"\u2A5F\":\"&wedbar;\",\"\u2259\":\"&wedgeq;\",\"\u2118\":\"&wp;\",\"\uD835\uDD34\":\"&wfr;\",\"\uD835\uDD68\":\"&wopf;\",\"\uD835\uDCCC\":\"&wscr;\",\"\uD835\uDD35\":\"&xfr;\",\"\u03BE\":\"&xi;\",\"\u22FB\":\"&xnis;\",\"\uD835\uDD69\":\"&xopf;\",\"\uD835\uDCCD\":\"&xscr;\",\"\u00FD\":\"&yacute;\",\"\u044F\":\"&yacy;\",\"\u0177\":\"&ycirc;\",\"\u044B\":\"&ycy;\",\"\u00A5\":\"&yen;\",\"\uD835\uDD36\":\"&yfr;\",\"\u0457\":\"&yicy;\",\"\uD835\uDD6A\":\"&yopf;\",\"\uD835\uDCCE\":\"&yscr;\",\"\u044E\":\"&yucy;\",\"\u00FF\":\"&yuml;\",\"\u017A\":\"&zacute;\",\"\u017E\":\"&zcaron;\",\"\u0437\":\"&zcy;\",\"\u017C\":\"&zdot;\",\"\u03B6\":\"&zeta;\",\"\uD835\uDD37\":\"&zfr;\",\"\u0436\":\"&zhcy;\",\"\u21DD\":\"&zigrarr;\",\"\uD835\uDD6B\":\"&zopf;\",\"\uD835\uDCCF\":\"&zscr;\",\"\u200D\":\"&zwj;\",\"\u200C\":\"&zwnj;\"}}};", "\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};", "\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;", "\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n};\nvar defaultEncodeOptions = {\n    mode: 'specialChars',\n    level: 'all',\n    numeric: 'decimal'\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */\nfunction encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;\n    if (!text) {\n        return '';\n    }\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === 'hexadecimal';\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = '';\n        var _d = 0;\n        do {\n            if (_d !== _b.index) {\n                _c += text.substring(_d, _b.index);\n            }\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        } while ((_b = encodeRegExp.exec(text)));\n        if (_d !== text.length) {\n            _c += text.substring(_d);\n        }\n    }\n    else {\n        _c =\n            text;\n    }\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: 'body',\n    level: 'all'\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: 'all'\n};\n/** Decodes a single entity */\nfunction decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;\n    if (!entity) {\n        return '';\n    }\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    if (false\n        && decodeEntityLastChar_1 === '=') {\n        _b =\n            entity;\n    }\n    else if (false\n        && decodeEntityLastChar_1 !== ';') {\n        _b =\n            entity;\n    }\n    else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n            _b = decodeResultByReference_1;\n        }\n        else if (entity[0] === '&' && entity[1] === '#') {\n            var decodeSecondChar_1 = entity[2];\n            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'\n                ? parseInt(entity.substr(3), 16)\n                : parseInt(entity.substr(2));\n            _b =\n                decodeCode_1 >= 0x10ffff\n                    ? outOfBoundsChar\n                    : decodeCode_1 > 65535\n                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)\n                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */\nfunction decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;\n    if (!text) {\n        return '';\n    }\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === 'attribute';\n    var isStrict = scope === 'strict';\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = '';\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) {\n                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            }\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute\n                && decodeEntityLastChar_2 === '=') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else if (isStrict\n                && decodeEntityLastChar_2 !== ';') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) {\n                    decodeResult_1 = decodeResultByReference_2;\n                }\n                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'\n                        ? parseInt(replaceInput_1.substr(3), 16)\n                        : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 =\n                        decodeCode_2 >= 0x10ffff\n                            ? outOfBoundsChar\n                            : decodeCode_2 > 65535\n                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)\n                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while ((replaceMatch_1 = decodeRegExp.exec(text)));\n        if (replaceLastIndex_1 !== text.length) {\n            replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n    }\n    else {\n        replaceResult_1 =\n            text;\n    }\n    return replaceResult_1;\n}\nexports.decode = decode;\n", "export enum LegacyFormat {\n    TLE,\n    SATCAT,\n    VCM,\n    VCEPH\n}", "export enum SerializationFormat {\n    csv,\n    fbs,\n    json,\n    txt,\n    kvn,\n    xml\n}", "import { tle as ntle } from \"../parsers/legacy\";\nimport { parse as csvparse } from 'csv-parse/browser/esm/sync';\nimport * as flatbuffers from \"flatbuffers\";\nimport { OMMCOLLECTION as _OMMCOLLECTION, OMMCOLLECTIONT as OMMCOLLECTION } from \"@/lib/OMM/OMMCOLLECTION\";\nimport { OMMT as OMM } from \"@/lib/OMM/OMM\";\nimport { decode } from \"html-entities\";\nimport numCheck from \"./numCheck\";\n\nlet tagTemplate = (tagName: string) => new RegExp(`<${tagName}[^>]*>([\\\\s\\\\S]*?)<\\\\/${tagName}>`, \"gi\");\n\nconst xml = (input: string, schema: any): OMMCOLLECTION => {\n  let resultsOMMCOLLECTION = new OMMCOLLECTION;\n  let xmlOMMArray = input.toString().match(tagTemplate(\"omm\")) || [];\n  let schemaTags = Object.keys(schema.definitions.OMM.properties);\n  for (let x = 0; x < xmlOMMArray.length; x++) {\n    let iOMM: any = {};\n    for (let s = 0; s < schemaTags.length; s++) {\n      let tagMatch = [...xmlOMMArray[x].matchAll(tagTemplate(schemaTags[s]))];\n      if (tagMatch.length) {\n        for (let t = 0; t < tagMatch.length; t++) {\n          iOMM[schemaTags[s]] = numCheck(schema.definitions.OMM, schemaTags[s], decode(tagMatch[t][1]));\n        }\n      }\n    }\n    resultsOMMCOLLECTION.RECORDS.push(iOMM);\n  }\n  return resultsOMMCOLLECTION;\n};\n\nconst json = (input: string | Array<OMM>, schema: any): OMMCOLLECTION => {\n  if (typeof input === \"string\") {\n    input = JSON.parse(input)\n  };\n\n  let resultsOMMCOLLECTION = new OMMCOLLECTION;\n  resultsOMMCOLLECTION.RECORDS = ((input) as Array<OMM>).map((r: any) => {\n    for (let p in r) {\n      r[p] = numCheck(schema.definitions.OMM, p, r[p]);\n    }\n    return r;\n  });\n\n  return resultsOMMCOLLECTION;\n};\n\nconst csv = async (input: any, schema: any): Promise<OMMCOLLECTION> => {\n  let resultsOMMCOLLECTION = new OMMCOLLECTION;\n  let intermediateResults = (await csvparse(input, {\n    columns: true,\n    skip_empty_lines: true\n  }));\n  intermediateResults.forEach((row: any) => {\n    let newOMM: OMM = new OMM();\n    for (let prop in row) {\n      if (newOMM.hasOwnProperty(prop)) {\n        //@ts-ignore\n        newOMM[prop] = numCheck(schema.definitions.OMM, prop, row[prop]);\n      }\n    }\n    resultsOMMCOLLECTION.RECORDS.push(newOMM);\n  });\n  return resultsOMMCOLLECTION;\n};\n\nconst txt = (input: any): Promise<any> => {\n  return new Promise((resolve) => {\n    let isRStream = input.hasOwnProperty(\"_readableState\");\n    input = isRStream\n      ? input\n      : {\n        data: input,\n        init: false,\n        async read() {\n          if (!this.init) {\n            this.init = true;\n            return \"\";\n          } else {\n            return { value: this.data, done: true };\n          }\n        },\n      };\n    let tles = new ntle(input);\n    let started = false;\n    const init = async () => {\n      if (started) return;\n      started = true;\n      let stop = await tles.readLines();\n      if (!stop) return;\n      let resultsOMMCOLLECTION = new OMMCOLLECTION;\n      resultsOMMCOLLECTION.RECORDS = tles.lines.map(tles.format.OMM);\n      resolve(resultsOMMCOLLECTION);\n    };\n    if (!isRStream) {\n      init();\n    } else {\n      input.on(\"readable\", init);\n    }\n  });\n};\n\nconst kvn = async (input: string, schema: any): Promise<OMMCOLLECTION> => {\n  let lines = input.split(/\\r?\\n/g);\n  let resultsOMMCOLLECTION = new OMMCOLLECTION;\n  let _OMM: OMM = new OMM;\n\n  for (let i = 0; i < lines.length; i++) {\n\n    let [predicate, value] = lines[i].split(\"=\").map(x => x.trim());\n\n    if (predicate === \"CCSDS_OMM_VERS\") {\n      if (_OMM.CCSDS_OMM_VERS) {\n        resultsOMMCOLLECTION.RECORDS.push(_OMM);\n      }\n      _OMM = new OMM;\n    }\n\n    if (_OMM.hasOwnProperty(predicate)) {\n      //@ts-ignore\n      _OMM[predicate] = numCheck(schema.definitions.OMM, predicate, value);\n    }\n  }\n  resultsOMMCOLLECTION.RECORDS.push(_OMM);\n  return resultsOMMCOLLECTION;\n}\n\nconst fbs = async (input: Uint8Array): Promise<OMMCOLLECTION> => {\n  let ommcollection = new OMMCOLLECTION;\n  _OMMCOLLECTION.getRootAsOMMCOLLECTION(new flatbuffers.ByteBuffer(input)).unpackTo(ommcollection);\n  return ommcollection;\n}\nexport { numCheck, xml, json, csv, txt, txt as tle, kvn, fbs };\n", "//https://celestrak.com/NORAD/documentation/spacetrk.pdf\n//https://cdf.gsfc.nasa.gov/html/leapseconds_requirements.html\n\nimport bignumber from \"bignumber.js\";\nimport {\n  satcat_map,\n  satcat_transform,\n  tle_map,\n  tle_transform,\n} from \"./definitions.js\";\n\nclass lineReader {\n  reader: { read: () => any; };\n  processLine: (line: any) => any;\n  readLines: () => Promise<Date>;\n  constructor(reader: { read: () => any; }) {\n    this.reader = reader;\n    this.processLine = (line: any) => line;\n\n    this.readLines = async () => {\n      async function* rr(reader: any) {\n        const utf8Decoder = new TextDecoder(\"utf-8\");\n        let leRegex = /[\\r\\n]{1,2}/gm;\n\n        let result = await reader.read();\n\n        if (result === null) yield;\n        let value, done;\n        done = result === null;\n        if (result?.value) {\n          value = result.value;\n        } else {\n          value = result;\n        }\n\n        let startIndex = 0;\n\n        for (; ;) {\n          let remline = leRegex.exec(value);\n          //only progress if there are more lines\n          if (!remline) {\n            if (done) break;\n            //loop through each successive line\n            let remainder: any = value.substr(startIndex);\n            result = await reader.read();\n            if (result?.value) {\n              value = result.value;\n              done = result.done;\n            } else {\n              value = result;\n              done = result === null;\n            }\n            //add more if available\n            value = remainder + (value ? value instanceof ArrayBuffer || ArrayBuffer.isView(value) ? utf8Decoder.decode(value) : value : \"\");\n            startIndex = leRegex.lastIndex = 0;\n          } else {\n            yield value.substring(startIndex, remline.index);\n          }\n          startIndex = leRegex.lastIndex;\n        }\n\n        if (startIndex < value?.length) {\n          yield value.substr(startIndex);\n        }\n      }\n      for await (let line of rr(this.reader)) {\n        this.processLine(line);\n      }\n      return new Date();\n    };\n  }\n}\n\nclass tle extends lineReader {\n  [x: string]: any;\n  constructor(reader: any) {\n    super(reader);\n    this.lines = [];\n    this._line = [];\n    this.processLine = (line: any) => {\n      this._line.push(line);\n      let l0 = this._line[0].length;\n      let l1 = this._line.length;\n      if ((l0 === 24 && l1 === 3) || (l0 >= 68 && l1 === 2)) {\n        this.processTLE(this._line);\n        this._line = [];\n      }\n    };\n    this.processTLE = (tle: any) => {\n      this.lines.push(tle);\n    };\n    this.format = {\n      RAW: (tle: any) => tle,\n      OMM: (tle: any[]) => {\n        if (!tle) return;\n        let OBJECT_NAME;\n        let _OMM: any = {};\n        if (tle.length === 3) {\n          OBJECT_NAME = tle[0].trim();\n          tle = tle.slice(-2);\n        }\n        tle.forEach((_line: string, i: number) => {\n          //@ts-ignore\n          let tt: any = tle_map[i + 1];\n          for (let prop in tt) {\n            let tp = tt[prop];\n            let _tp = [];\n            _tp = tp.length === 2 ? [tp[0] - 1, tp[1]] : [tp[0] - 1, tp[0]];\n            let value = _line.substring(_tp[0], _tp[1]);\n            //@ts-ignore\n            _OMM[prop] = (tle_transform[prop] || bignumber)(value);\n\n            if (_OMM[prop] instanceof bignumber)\n              _OMM[prop] = _OMM[prop].toNumber();\n          }\n        });\n        if (OBJECT_NAME) _OMM.OBJECT_NAME = OBJECT_NAME;\n        return _OMM;\n      },\n    };\n  }\n}\n\nclass satcat extends lineReader {\n  lines: Array<any> = [];\n  format: { RAW: (satcat: any) => any; CAT: (satcat: string) => {} | undefined; };\n  constructor(reader: any) {\n    super(reader);\n    this.lines = [];\n    this.processLine = (line: any) => {\n      this.lines.push(line);\n    };\n    this.format = {\n      RAW: (satcat: any) => satcat,\n      CAT: (satcat: string) => {\n        if (!satcat) return;\n        let _satcat: any = {};\n        for (let prop in satcat_map) {\n          //@ts-ignore\n          let sp = satcat_map[prop];\n          if (sp[1]) {\n            let value = satcat.substring(sp[0], sp[1]);\n            //@ts-ignore\n            _satcat[prop] = satcat_transform[prop]\n              //@ts-ignore\n              ? satcat_transform[prop](value, _satcat)\n              : (new bignumber(value)).toNumber();\n          } else {\n            _satcat[prop] = _satcat[prop];\n          }\n        }\n        return _satcat;\n      },\n    };\n  }\n}\nconst vcm = null;\n\nexport { tle, satcat, vcm };\n", "import bignumber from \"bignumber.js\";\n\nconst decimalAssumed = (value) => {\n  let n = bignumber(\".\" + value);\n  return n.isFinite() && !n.isNaN() ? n : 0;\n};\nconst dpAParse = (value) => {\n  let result =\n    (value.slice(0, 1) === \"-\" ? -1 : 1) *\n    decimalAssumed(`${value.slice(1, 6)}e${value.slice(6)}`);\n  return result;\n};\nconst whatCentury = (digits) => {\n  digits = parseInt(digits);\n  return digits || digits === 0\n    ? (digits < 50 ? \"20\" : \"19\") + digits.toString().padStart(2, 0)\n    : null;\n};\n\nconst satcat_map = {\n  OBJECT_ID: [0, 11],\n  NORAD_CAT_ID: [13, 18],\n  MULTIPLE_NAMES: [19, 20],\n  PAYLOAD: [20, 21],\n  OPS_STATUS_CODE: [21, 22],\n  OBJECT_NAME: [23, 47],\n  OWNER: [49, 54],\n  LAUNCH_DATE: [56, 66],\n  LAUNCH_SITE: [68, 73],\n  DECAY_DATE: [75, 85],\n  PERIOD: [87, 94],\n  INCLINATION: [96, 101],\n  APOGEE: [103, 109],\n  PERIGEE: [111, 117],\n  RCS: [119, 127],\n  ORBITAL_STATUS_CODE: [129, 132],\n  ORBIT_CENTER: [0, 0],\n  ORBIT_TYPE: [0, 0],\n  TYPE: [21, 22],\n};\n\nconst satcat_transform = {\n  TYPE: (d, _satcat) => {\n    let _payload = _satcat.PAYLOAD;\n    let _name = _satcat.OBJECT_NAME;\n    let _active = [0, 2, 3, 4, 5].indexOf(_satcat.OPS_STATUS_CODE) > -1;\n    if (_payload && _active) {\n      return 0;\n    } else if (_payload && !_active) {\n      return 1;\n    } else if (!_payload && _name && _name.indexOf(\" DEB\") > -1) {\n      return 2;\n    } else if (\n      _name &&\n      (_name.indexOf(\" R/B\") > -1 || _name.indexOf(\" AKM\") > -1)\n    ) {\n      return 3;\n    }\n    return 4;\n  },\n  MULTIPLE_NAMES: (d) => d.trim() === \"M\",\n  PAYLOAD: (d) => d.trim() === \"*\",\n  LAUNCH_SITE: (d) => d.trim(),\n  OWNER: (d) => d.trim(),\n  OBJECT_NAME: (d) => d.trim(),\n  OBJECT_ID: (d) => d.trim(),\n  OPS_STATUS_CODE: (d) => {\n    d = d.trim();\n    d = [\"+\", \"P\", \"B\", \"S\", \"X\", \"D\", \"?\"].indexOf(d);\n    return d > -1 ? d : null;\n  },\n  LAUNCH_DATE: (d) => new Date(d),\n  DECAY_DATE: (d) => new Date(d),\n  ORBITAL_STATUS_CODE: (d, _satcat) => {\n    d = d.trim();\n    let _d = [\"NCE\", \"NIE\", \"NEA\", \"DOC\", \"ISS\"].indexOf(d);\n    _satcat.ORBIT_CENTER = 1;\n    _satcat.ORBIT_TYPE = null;\n    if (_d === -1) {\n      _d = null;\n      let _dd = [\n        \"AS\",\n        \"EA\",\n        \"EL\",\n        \"EM\",\n        \"JU\",\n        \"MA\",\n        \"ME\",\n        \"MO\",\n        \"NE\",\n        \"PL\",\n        \"SA\",\n        \"SS\",\n        \"SU\",\n        \"UR\",\n        \"VE\",\n      ].indexOf(d.slice(0, 2));\n      if (_dd > -1) {\n        _satcat.ORBIT_CENTER = _d;\n        let _n = parseInt(d.slice(2));\n        _satcat.ORBIT_TYPE = _n >= 0 ? _n : null;\n      }\n    }\n    if (_satcat.ORBIT_TYPE === null) {\n      let _decayed =\n        _satcat.OPS_STATUS_CODE === 6 || !isNaN(_satcat.DECAY_DATE.getTime());\n      if (_decayed) {\n        _satcat.ORBIT_TYPE = 2;\n      } else {\n        _satcat.ORBIT_TYPE =\n          [0, 2, 3, 4, 5].indexOf(_satcat.OPS_STATUS_CODE) > -1 ? 0 : null;\n      }\n    }\n    return _d;\n  },\n\n  RCS: (d) => (parseFloat(d) ? bignumber(d) : null),\n};\n\nconst tle_map = {\n  1: {\n    NORAD_CAT_ID: [3, 7],\n    CLASSIFICATION_TYPE: [8],\n    OBJECT_ID: [10, 18],\n    EPOCH: [19, 32],\n    MEAN_MOTION_DOT: [34, 43],\n    MEAN_MOTION_DDOT: [45, 52],\n    BSTAR: [54, 61],\n    EPHEMERIS_TYPE: [63],\n    ELEMENT_SET_NO: [65, 68],\n    CHECKSUM: [69],\n  },\n  2: {\n    NORAD_CAT_ID: [3, 7],\n    INCLINATION: [9, 16],\n    RA_OF_ASC_NODE: [18, 25],\n    ECCENTRICITY: [27, 33],\n    ARG_OF_PERICENTER: [35, 42],\n    MEAN_ANOMALY: [44, 51],\n    MEAN_MOTION: [53, 63],\n    REV_AT_EPOCH: [64, 68],\n    CHECKSUM: [69],\n  },\n};\n\nconst tle_transform = {\n  BSTAR: dpAParse,\n  CLASSIFICATION_TYPE: (value) => value,\n  OBJECT_ID: (value) => {\n    let year = whatCentury(parseInt(value.slice(0, 2)));\n    if (!year) return \"\";\n    return `${year ? year : \"0000\"}-${value.slice(2)}`.trim();\n  },\n  ECCENTRICITY: decimalAssumed,\n  MEAN_MOTION_DDOT: dpAParse,\n  EPOCH: (value) => {\n    value = value.trim();\n    let tA = [\n      whatCentury(value.slice(0, 2)),\n      0,\n      parseFloat(value.substr(2)),\n      0,\n      24,\n      0,\n      60,\n      0,\n      60,\n      0,\n      1000,\n    ];\n    tA.forEach((v, i) => {\n      if (i % 2 && i !== 1) {\n        tA[i] = Math.floor(tA[i - 1]);\n      } else if (i > 2) {\n        tA[i] = tA[i] * (tA[i - 2] - tA[i - 1]);\n      }\n    });\n    tA = tA.filter((v, i) => {\n      return i % 2 || i == 0 || i == tA.length - 1;\n    });\n\n    let dateString = (\n      new Date(Date.UTC.apply(0, tA))\n        .toISOString()\n        .replace(/z/gi, \"\")\n    );\n\n    let dateSeconds = (parseInt(dateString.split(\":\").pop().split(\".\")[0]) + (tA[tA.length - 1] / 1000)).toFixed(6);\n\n    return `${dateString.slice(0, -6)}${dateSeconds.padStart(9, \"0\")}`;\n\n  },\n};\n\nexport { satcat_map, satcat_transform, tle_map, tle_transform };\n", "var global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nclass CsvError extends Error {\n  constructor(code, message, options, ...contexts) {\n    if(Array.isArray(message)) message = message.join(' ');\n    super(message);\n    if(Error.captureStackTrace !== undefined){\n      Error.captureStackTrace(this, CsvError);\n    }\n    this.code = code;\n    for(const context of contexts){\n      for(const key in context){\n        const value = context[key];\n        this[key] = isBuffer(value) ? value.toString(options.encoding) : value == null ? value : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n}\n\nconst is_object = function(obj){\n  return (typeof obj === 'object' && obj !== null && !Array.isArray(obj));\n};\n\nconst normalize_columns_array = function(columns){\n  const normalizedColumns = [];\n  for(let i = 0, l = columns.length; i < l; i++){\n    const column = columns[i];\n    if(column === undefined || column === null || column === false){\n      normalizedColumns[i] = { disabled: true };\n    }else if(typeof column === 'string'){\n      normalizedColumns[i] = { name: column };\n    }else if(is_object(column)){\n      if(typeof column.name !== 'string'){\n        throw new CsvError('CSV_OPTION_COLUMNS_MISSING_NAME', [\n          'Option columns missing name:',\n          `property \"name\" is required at position ${i}`,\n          'when column is an object literal'\n        ]);\n      }\n      normalizedColumns[i] = column;\n    }else {\n      throw new CsvError('CSV_INVALID_COLUMN_DEFINITION', [\n        'Invalid column definition:',\n        'expect a string or a literal object,',\n        `got ${JSON.stringify(column)} at position ${i}`\n      ]);\n    }\n  }\n  return normalizedColumns;\n};\n\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val){\n    if(isBuffer(val)){\n      const length = this.length + val.length;\n      if(length >= this.size){\n        this.resize();\n        if(length >= this.size){\n          throw Error('INVALID_BUFFER_STATE');\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    }else {\n      const length = this.length++;\n      if(length === this.size){\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf,1, 0, length);\n    }\n  }\n  append(val){\n    const length = this.length++;\n    if(length === this.size){\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize(){\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf,0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding){\n    if(encoding){\n      return this.buf.slice(0, this.length).toString(encoding);\n    }else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON(){\n    return this.toString('utf8');\n  }\n  reset(){\n    this.length = 0;\n  }\n}\n\n// white space characters\n// https://en.wikipedia.org/wiki/Whitespace_character\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes#Types\n// \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\nconst np = 12;\nconst cr$1 = 13; // `\\r`, carriage return, 0x0D in hexad\u00E9cimal, 13 in decimal\nconst nl$1 = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\nconst space = 32;\nconst tab = 9;\n\nconst init_state = function(options){\n  return {\n    bomSkipped: false,\n    bufBytesStart: 0,\n    castField: options.cast_function,\n    commenting: false,\n    // Current error encountered by a record\n    error: undefined,\n    enabled: options.from_line === 1,\n    escaping: false,\n    escapeIsQuote: isBuffer(options.escape) && isBuffer(options.quote) && Buffer.compare(options.escape, options.quote) === 0,\n    // columns can be `false`, `true`, `Array`\n    expectedRecordLength: Array.isArray(options.columns) ? options.columns.length : undefined,\n    field: new ResizeableBuffer(20),\n    firstLineToHeaders: options.cast_first_line_to_header,\n    needMoreDataSize: Math.max(\n      // Skip if the remaining buffer smaller than comment\n      options.comment !== null ? options.comment.length : 0,\n      // Skip if the remaining buffer can be delimiter\n      ...options.delimiter.map((delimiter) => delimiter.length),\n      // Skip if the remaining buffer can be escape sequence\n      options.quote !== null ? options.quote.length : 0,\n    ),\n    previousBuf: undefined,\n    quoting: false,\n    stop: false,\n    rawBuffer: new ResizeableBuffer(100),\n    record: [],\n    recordHasError: false,\n    record_length: 0,\n    recordDelimiterMaxLength: options.record_delimiter.length === 0 ? 2 : Math.max(...options.record_delimiter.map((v) => v.length)),\n    trimChars: [Buffer.from(' ', options.encoding)[0], Buffer.from('\\t', options.encoding)[0]],\n    wasQuoting: false,\n    wasRowDelimiter: false,\n    timchars: [\n      Buffer.from(Buffer.from([cr$1], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([nl$1], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([np], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([space], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([tab], 'utf8').toString(), options.encoding),\n    ]\n  };\n};\n\nconst underscore = function(str){\n  return str.replace(/([A-Z])/g, function(_, match){\n    return '_' + match.toLowerCase();\n  });\n};\n\nconst normalize_options = function(opts){\n  const options = {};\n  // Merge with user options\n  for(const opt in opts){\n    options[underscore(opt)] = opts[opt];\n  }\n  // Normalize option `encoding`\n  // Note: defined first because other options depends on it\n  // to convert chars/strings into buffers.\n  if(options.encoding === undefined || options.encoding === true){\n    options.encoding = 'utf8';\n  }else if(options.encoding === null || options.encoding === false){\n    options.encoding = null;\n  }else if(typeof options.encoding !== 'string' && options.encoding !== null){\n    throw new CsvError('CSV_INVALID_OPTION_ENCODING', [\n      'Invalid option encoding:',\n      'encoding must be a string or null to return a buffer,',\n      `got ${JSON.stringify(options.encoding)}`\n    ], options);\n  }\n  // Normalize option `bom`\n  if(options.bom === undefined || options.bom === null || options.bom === false){\n    options.bom = false;\n  }else if(options.bom !== true){\n    throw new CsvError('CSV_INVALID_OPTION_BOM', [\n      'Invalid option bom:', 'bom must be true,',\n      `got ${JSON.stringify(options.bom)}`\n    ], options);\n  }\n  // Normalize option `cast`\n  options.cast_function = null;\n  if(options.cast === undefined || options.cast === null || options.cast === false || options.cast === ''){\n    options.cast = undefined;\n  }else if(typeof options.cast === 'function'){\n    options.cast_function = options.cast;\n    options.cast = true;\n  }else if(options.cast !== true){\n    throw new CsvError('CSV_INVALID_OPTION_CAST', [\n      'Invalid option cast:', 'cast must be true or a function,',\n      `got ${JSON.stringify(options.cast)}`\n    ], options);\n  }\n  // Normalize option `cast_date`\n  if(options.cast_date === undefined || options.cast_date === null || options.cast_date === false || options.cast_date === ''){\n    options.cast_date = false;\n  }else if(options.cast_date === true){\n    options.cast_date = function(value){\n      const date = Date.parse(value);\n      return !isNaN(date) ? new Date(date) : value;\n    };\n  }else if (typeof options.cast_date !== 'function'){\n    throw new CsvError('CSV_INVALID_OPTION_CAST_DATE', [\n      'Invalid option cast_date:', 'cast_date must be true or a function,',\n      `got ${JSON.stringify(options.cast_date)}`\n    ], options);\n  }\n  // Normalize option `columns`\n  options.cast_first_line_to_header = null;\n  if(options.columns === true){\n    // Fields in the first line are converted as-is to columns\n    options.cast_first_line_to_header = undefined;\n  }else if(typeof options.columns === 'function'){\n    options.cast_first_line_to_header = options.columns;\n    options.columns = true;\n  }else if(Array.isArray(options.columns)){\n    options.columns = normalize_columns_array(options.columns);\n  }else if(options.columns === undefined || options.columns === null || options.columns === false){\n    options.columns = false;\n  }else {\n    throw new CsvError('CSV_INVALID_OPTION_COLUMNS', [\n      'Invalid option columns:',\n      'expect an array, a function or true,',\n      `got ${JSON.stringify(options.columns)}`\n    ], options);\n  }\n  // Normalize option `group_columns_by_name`\n  if(options.group_columns_by_name === undefined || options.group_columns_by_name === null || options.group_columns_by_name === false){\n    options.group_columns_by_name = false;\n  }else if(options.group_columns_by_name !== true){\n    throw new CsvError('CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME', [\n      'Invalid option group_columns_by_name:',\n      'expect an boolean,',\n      `got ${JSON.stringify(options.group_columns_by_name)}`\n    ], options);\n  }else if(options.columns === false){\n    throw new CsvError('CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME', [\n      'Invalid option group_columns_by_name:',\n      'the `columns` mode must be activated.'\n    ], options);\n  }\n  // Normalize option `comment`\n  if(options.comment === undefined || options.comment === null || options.comment === false || options.comment === ''){\n    options.comment = null;\n  }else {\n    if(typeof options.comment === 'string'){\n      options.comment = Buffer.from(options.comment, options.encoding);\n    }\n    if(!isBuffer(options.comment)){\n      throw new CsvError('CSV_INVALID_OPTION_COMMENT', [\n        'Invalid option comment:',\n        'comment must be a buffer or a string,',\n        `got ${JSON.stringify(options.comment)}`\n      ], options);\n    }\n  }\n  // Normalize option `delimiter`\n  const delimiter_json = JSON.stringify(options.delimiter);\n  if(!Array.isArray(options.delimiter)) options.delimiter = [options.delimiter];\n  if(options.delimiter.length === 0){\n    throw new CsvError('CSV_INVALID_OPTION_DELIMITER', [\n      'Invalid option delimiter:',\n      'delimiter must be a non empty string or buffer or array of string|buffer,',\n      `got ${delimiter_json}`\n    ], options);\n  }\n  options.delimiter = options.delimiter.map(function(delimiter){\n    if(delimiter === undefined || delimiter === null || delimiter === false){\n      return Buffer.from(',', options.encoding);\n    }\n    if(typeof delimiter === 'string'){\n      delimiter = Buffer.from(delimiter, options.encoding);\n    }\n    if(!isBuffer(delimiter) || delimiter.length === 0){\n      throw new CsvError('CSV_INVALID_OPTION_DELIMITER', [\n        'Invalid option delimiter:',\n        'delimiter must be a non empty string or buffer or array of string|buffer,',\n        `got ${delimiter_json}`\n      ], options);\n    }\n    return delimiter;\n  });\n  // Normalize option `escape`\n  if(options.escape === undefined || options.escape === true){\n    options.escape = Buffer.from('\"', options.encoding);\n  }else if(typeof options.escape === 'string'){\n    options.escape = Buffer.from(options.escape, options.encoding);\n  }else if (options.escape === null || options.escape === false){\n    options.escape = null;\n  }\n  if(options.escape !== null){\n    if(!isBuffer(options.escape)){\n      throw new Error(`Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options.escape)}`);\n    }\n  }\n  // Normalize option `from`\n  if(options.from === undefined || options.from === null){\n    options.from = 1;\n  }else {\n    if(typeof options.from === 'string' && /\\d+/.test(options.from)){\n      options.from = parseInt(options.from);\n    }\n    if(Number.isInteger(options.from)){\n      if(options.from < 0){\n        throw new Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`);\n    }\n  }\n  // Normalize option `from_line`\n  if(options.from_line === undefined || options.from_line === null){\n    options.from_line = 1;\n  }else {\n    if(typeof options.from_line === 'string' && /\\d+/.test(options.from_line)){\n      options.from_line = parseInt(options.from_line);\n    }\n    if(Number.isInteger(options.from_line)){\n      if(options.from_line <= 0){\n        throw new Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`);\n    }\n  }\n  // Normalize options `ignore_last_delimiters`\n  if(options.ignore_last_delimiters === undefined || options.ignore_last_delimiters === null){\n    options.ignore_last_delimiters = false;\n  }else if(typeof options.ignore_last_delimiters === 'number'){\n    options.ignore_last_delimiters = Math.floor(options.ignore_last_delimiters);\n    if(options.ignore_last_delimiters === 0){\n      options.ignore_last_delimiters = false;\n    }\n  }else if(typeof options.ignore_last_delimiters !== 'boolean'){\n    throw new CsvError('CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS', [\n      'Invalid option `ignore_last_delimiters`:',\n      'the value must be a boolean value or an integer,',\n      `got ${JSON.stringify(options.ignore_last_delimiters)}`\n    ], options);\n  }\n  if(options.ignore_last_delimiters === true && options.columns === false){\n    throw new CsvError('CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS', [\n      'The option `ignore_last_delimiters`',\n      'requires the activation of the `columns` option'\n    ], options);\n  }\n  // Normalize option `info`\n  if(options.info === undefined || options.info === null || options.info === false){\n    options.info = false;\n  }else if(options.info !== true){\n    throw new Error(`Invalid Option: info must be true, got ${JSON.stringify(options.info)}`);\n  }\n  // Normalize option `max_record_size`\n  if(options.max_record_size === undefined || options.max_record_size === null || options.max_record_size === false){\n    options.max_record_size = 0;\n  }else if(Number.isInteger(options.max_record_size) && options.max_record_size >= 0);else if(typeof options.max_record_size === 'string' && /\\d+/.test(options.max_record_size)){\n    options.max_record_size = parseInt(options.max_record_size);\n  }else {\n    throw new Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`);\n  }\n  // Normalize option `objname`\n  if(options.objname === undefined || options.objname === null || options.objname === false){\n    options.objname = undefined;\n  }else if(isBuffer(options.objname)){\n    if(options.objname.length === 0){\n      throw new Error(`Invalid Option: objname must be a non empty buffer`);\n    }\n    if(options.encoding === null);else {\n      options.objname = options.objname.toString(options.encoding);\n    }\n  }else if(typeof options.objname === 'string'){\n    if(options.objname.length === 0){\n      throw new Error(`Invalid Option: objname must be a non empty string`);\n    }\n    // Great, nothing to do\n  }else if(typeof options.objname === 'number');else {\n    throw new Error(`Invalid Option: objname must be a string or a buffer, got ${options.objname}`);\n  }\n  if(options.objname !== undefined){\n    if(typeof options.objname === 'number'){\n      if(options.columns !== false){\n        throw Error('Invalid Option: objname index cannot be combined with columns or be defined as a field');\n      }\n    }else { // A string or a buffer\n      if(options.columns === false){\n        throw Error('Invalid Option: objname field must be combined with columns or be defined as an index');\n      }\n    }\n  }\n  // Normalize option `on_record`\n  if(options.on_record === undefined || options.on_record === null){\n    options.on_record = undefined;\n  }else if(typeof options.on_record !== 'function'){\n    throw new CsvError('CSV_INVALID_OPTION_ON_RECORD', [\n      'Invalid option `on_record`:',\n      'expect a function,',\n      `got ${JSON.stringify(options.on_record)}`\n    ], options);\n  }\n  // Normalize option `quote`\n  if(options.quote === null || options.quote === false || options.quote === ''){\n    options.quote = null;\n  }else {\n    if(options.quote === undefined || options.quote === true){\n      options.quote = Buffer.from('\"', options.encoding);\n    }else if(typeof options.quote === 'string'){\n      options.quote = Buffer.from(options.quote, options.encoding);\n    }\n    if(!isBuffer(options.quote)){\n      throw new Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`);\n    }\n  }\n  // Normalize option `raw`\n  if(options.raw === undefined || options.raw === null || options.raw === false){\n    options.raw = false;\n  }else if(options.raw !== true){\n    throw new Error(`Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`);\n  }\n  // Normalize option `record_delimiter`\n  if(options.record_delimiter === undefined){\n    options.record_delimiter = [];\n  }else if(typeof options.record_delimiter === 'string' || isBuffer(options.record_delimiter)){\n    if(options.record_delimiter.length === 0){\n      throw new CsvError('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n        'Invalid option `record_delimiter`:',\n        'value must be a non empty string or buffer,',\n        `got ${JSON.stringify(options.record_delimiter)}`\n      ], options);\n    }\n    options.record_delimiter = [options.record_delimiter];\n  }else if(!Array.isArray(options.record_delimiter)){\n    throw new CsvError('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n      'Invalid option `record_delimiter`:',\n      'value must be a string, a buffer or array of string|buffer,',\n      `got ${JSON.stringify(options.record_delimiter)}`\n    ], options);\n  }\n  options.record_delimiter = options.record_delimiter.map(function(rd, i){\n    if(typeof rd !== 'string' && ! isBuffer(rd)){\n      throw new CsvError('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n        'Invalid option `record_delimiter`:',\n        'value must be a string, a buffer or array of string|buffer',\n        `at index ${i},`,\n        `got ${JSON.stringify(rd)}`\n      ], options);\n    }else if(rd.length === 0){\n      throw new CsvError('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n        'Invalid option `record_delimiter`:',\n        'value must be a non empty string or buffer',\n        `at index ${i},`,\n        `got ${JSON.stringify(rd)}`\n      ], options);\n    }\n    if(typeof rd === 'string'){\n      rd = Buffer.from(rd, options.encoding);\n    }\n    return rd;\n  });\n  // Normalize option `relax_column_count`\n  if(typeof options.relax_column_count === 'boolean');else if(options.relax_column_count === undefined || options.relax_column_count === null){\n    options.relax_column_count = false;\n  }else {\n    throw new Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`);\n  }\n  if(typeof options.relax_column_count_less === 'boolean');else if(options.relax_column_count_less === undefined || options.relax_column_count_less === null){\n    options.relax_column_count_less = false;\n  }else {\n    throw new Error(`Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options.relax_column_count_less)}`);\n  }\n  if(typeof options.relax_column_count_more === 'boolean');else if(options.relax_column_count_more === undefined || options.relax_column_count_more === null){\n    options.relax_column_count_more = false;\n  }else {\n    throw new Error(`Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options.relax_column_count_more)}`);\n  }\n  // Normalize option `relax_quotes`\n  if(typeof options.relax_quotes === 'boolean');else if(options.relax_quotes === undefined || options.relax_quotes === null){\n    options.relax_quotes = false;\n  }else {\n    throw new Error(`Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options.relax_quotes)}`);\n  }\n  // Normalize option `skip_empty_lines`\n  if(typeof options.skip_empty_lines === 'boolean');else if(options.skip_empty_lines === undefined || options.skip_empty_lines === null){\n    options.skip_empty_lines = false;\n  }else {\n    throw new Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`);\n  }\n  // Normalize option `skip_records_with_empty_values`\n  if(typeof options.skip_records_with_empty_values === 'boolean');else if(options.skip_records_with_empty_values === undefined || options.skip_records_with_empty_values === null){\n    options.skip_records_with_empty_values = false;\n  }else {\n    throw new Error(`Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_records_with_empty_values)}`);\n  }\n  // Normalize option `skip_records_with_error`\n  if(typeof options.skip_records_with_error === 'boolean');else if(options.skip_records_with_error === undefined || options.skip_records_with_error === null){\n    options.skip_records_with_error = false;\n  }else {\n    throw new Error(`Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options.skip_records_with_error)}`);\n  }\n  // Normalize option `rtrim`\n  if(options.rtrim === undefined || options.rtrim === null || options.rtrim === false){\n    options.rtrim = false;\n  }else if(options.rtrim !== true){\n    throw new Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`);\n  }\n  // Normalize option `ltrim`\n  if(options.ltrim === undefined || options.ltrim === null || options.ltrim === false){\n    options.ltrim = false;\n  }else if(options.ltrim !== true){\n    throw new Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`);\n  }\n  // Normalize option `trim`\n  if(options.trim === undefined || options.trim === null || options.trim === false){\n    options.trim = false;\n  }else if(options.trim !== true){\n    throw new Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`);\n  }\n  // Normalize options `trim`, `ltrim` and `rtrim`\n  if(options.trim === true && opts.ltrim !== false){\n    options.ltrim = true;\n  }else if(options.ltrim !== true){\n    options.ltrim = false;\n  }\n  if(options.trim === true && opts.rtrim !== false){\n    options.rtrim = true;\n  }else if(options.rtrim !== true){\n    options.rtrim = false;\n  }\n  // Normalize option `to`\n  if(options.to === undefined || options.to === null){\n    options.to = -1;\n  }else {\n    if(typeof options.to === 'string' && /\\d+/.test(options.to)){\n      options.to = parseInt(options.to);\n    }\n    if(Number.isInteger(options.to)){\n      if(options.to <= 0){\n        throw new Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`);\n    }\n  }\n  // Normalize option `to_line`\n  if(options.to_line === undefined || options.to_line === null){\n    options.to_line = -1;\n  }else {\n    if(typeof options.to_line === 'string' && /\\d+/.test(options.to_line)){\n      options.to_line = parseInt(options.to_line);\n    }\n    if(Number.isInteger(options.to_line)){\n      if(options.to_line <= 0){\n        throw new Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`);\n    }\n  }\n  return options;\n};\n\nconst isRecordEmpty = function(record){\n  return record.every((field) => field == null || field.toString && field.toString().trim() === '');\n};\n\nconst cr = 13; // `\\r`, carriage return, 0x0D in hexad\u00E9cimal, 13 in decimal\nconst nl = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\n\nconst boms = {\n  // Note, the following are equals:\n  // Buffer.from(\"\\ufeff\")\n  // Buffer.from([239, 187, 191])\n  // Buffer.from('EFBBBF', 'hex')\n  'utf8': Buffer.from([239, 187, 191]),\n  // Note, the following are equals:\n  // Buffer.from \"\\ufeff\", 'utf16le\n  // Buffer.from([255, 254])\n  'utf16le': Buffer.from([255, 254])\n};\n\nconst transform = function(original_options = {}) {\n  const info = {\n    bytes: 0,\n    comment_lines: 0,\n    empty_lines: 0,\n    invalid_field_length: 0,\n    lines: 1,\n    records: 0\n  };\n  const options = normalize_options(original_options);\n  return {\n    info: info,\n    original_options: original_options,\n    options: options,\n    state: init_state(options),\n    __needMoreData: function(i, bufLen, end){\n      if(end) return false;\n      const {quote} = this.options;\n      const {quoting, needMoreDataSize, recordDelimiterMaxLength} = this.state;\n      const numOfCharLeft = bufLen - i - 1;\n      const requiredLength = Math.max(\n        needMoreDataSize,\n        // Skip if the remaining buffer smaller than record delimiter\n        recordDelimiterMaxLength,\n        // Skip if the remaining buffer can be record delimiter following the closing quote\n        // 1 is for quote.length\n        quoting ? (quote.length + recordDelimiterMaxLength) : 0,\n      );\n      return numOfCharLeft < requiredLength;\n    },\n    // Central parser implementation\n    parse: function(nextBuf, end, push, close){\n      const {bom, from_line, ltrim, max_record_size,raw, relax_quotes, rtrim, skip_empty_lines, to, to_line} = this.options;\n      let {comment, escape, quote, record_delimiter} = this.options;\n      const {bomSkipped, previousBuf, rawBuffer, escapeIsQuote} = this.state;\n      let buf;\n      if(previousBuf === undefined){\n        if(nextBuf === undefined){\n          // Handle empty string\n          close();\n          return;\n        }else {\n          buf = nextBuf;\n        }\n      }else if(previousBuf !== undefined && nextBuf === undefined){\n        buf = previousBuf;\n      }else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      }\n      // Handle UTF BOM\n      if(bomSkipped === false){\n        if(bom === false){\n          this.state.bomSkipped = true;\n        }else if(buf.length < 3){\n          // No enough data\n          if(end === false){\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          }\n        }else {\n          for(const encoding in boms){\n            if(boms[encoding].compare(buf, 0, boms[encoding].length) === 0){\n              // Skip BOM\n              const bomLength = boms[encoding].length;\n              this.state.bufBytesStart += bomLength;\n              buf = buf.slice(bomLength);\n              // Renormalize original options with the new encoding\n              this.options = normalize_options({...this.original_options, encoding: encoding});\n              // Options will re-evaluate the Buffer with the new encoding\n              ({comment, escape, quote } = this.options);\n              break;\n            }\n          }\n          this.state.bomSkipped = true;\n        }\n      }\n      const bufLen = buf.length;\n      let pos;\n      for(pos = 0; pos < bufLen; pos++){\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if(this.__needMoreData(pos, bufLen, end)){\n          break;\n        }\n        if(this.state.wasRowDelimiter === true){\n          this.info.lines++;\n          this.state.wasRowDelimiter = false;\n        }\n        if(to_line !== -1 && this.info.lines > to_line){\n          this.state.stop = true;\n          close();\n          return;\n        }\n        // Auto discovery of record_delimiter, unix, mac and windows supported\n        if(this.state.quoting === false && record_delimiter.length === 0){\n          const record_delimiterCount = this.__autoDiscoverRecordDelimiter(buf, pos);\n          if(record_delimiterCount){\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n        const chr = buf[pos];\n        if(raw === true){\n          rawBuffer.append(chr);\n        }\n        if((chr === cr || chr === nl) && this.state.wasRowDelimiter === false){\n          this.state.wasRowDelimiter = true;\n        }\n        // Previous char was a valid escape char\n        // treat the current char as a regular char\n        if(this.state.escaping === true){\n          this.state.escaping = false;\n        }else {\n          // Escape is only active inside quoted fields\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          // if(escape !== null && this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          if(escape !== null && this.state.quoting === true && this.__isEscape(buf, pos, chr) && pos + escape.length < bufLen){\n            if(escapeIsQuote){\n              if(this.__isQuote(buf, pos+escape.length)){\n                this.state.escaping = true;\n                pos += escape.length - 1;\n                continue;\n              }\n            }else {\n              this.state.escaping = true;\n              pos += escape.length - 1;\n              continue;\n            }\n          }\n          // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n          if(this.state.commenting === false && this.__isQuote(buf, pos)){\n            if(this.state.quoting === true){\n              const nextChr = buf[pos+quote.length];\n              const isNextChrTrimable = rtrim && this.__isCharTrimable(buf, pos+quote.length);\n              const isNextChrComment = comment !== null && this.__compareBytes(comment, buf, pos+quote.length, nextChr);\n              const isNextChrDelimiter = this.__isDelimiter(buf, pos+quote.length, nextChr);\n              const isNextChrRecordDelimiter = record_delimiter.length === 0 ? this.__autoDiscoverRecordDelimiter(buf, pos+quote.length) : this.__isRecordDelimiter(nextChr, buf, pos+quote.length);\n              // Escape a quote\n              // Treat next char as a regular character\n              if(escape !== null && this.__isEscape(buf, pos, chr) && this.__isQuote(buf, pos + escape.length)){\n                pos += escape.length - 1;\n              }else if(!nextChr || isNextChrDelimiter || isNextChrRecordDelimiter || isNextChrComment || isNextChrTrimable){\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                pos += quote.length - 1;\n                continue;\n              }else if(relax_quotes === false){\n                const err = this.__error(\n                  new CsvError('CSV_INVALID_CLOSING_QUOTE', [\n                    'Invalid Closing Quote:',\n                    `got \"${String.fromCharCode(nextChr)}\"`,\n                    `at line ${this.info.lines}`,\n                    'instead of delimiter, record delimiter, trimable character',\n                    '(if activated) or comment',\n                  ], this.options, this.__infoField())\n                );\n                if(err !== undefined) return err;\n              }else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                this.state.field.prepend(quote);\n                pos += quote.length - 1;\n              }\n            }else {\n              if(this.state.field.length !== 0){\n                // In relax_quotes mode, treat opening quote preceded by chrs as regular\n                if(relax_quotes === false){\n                  const err = this.__error(\n                    new CsvError('INVALID_OPENING_QUOTE', [\n                      'Invalid Opening Quote:',\n                      `a quote is found inside a field at line ${this.info.lines}`,\n                    ], this.options, this.__infoField(), {\n                      field: this.state.field,\n                    })\n                  );\n                  if(err !== undefined) return err;\n                }\n              }else {\n                this.state.quoting = true;\n                pos += quote.length - 1;\n                continue;\n              }\n            }\n          }\n          if(this.state.quoting === false){\n            const recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos);\n            if(recordDelimiterLength !== 0){\n              // Do not emit comments which take a full line\n              const skipCommentLine = this.state.commenting && (this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0);\n              if(skipCommentLine){\n                this.info.comment_lines++;\n                // Skip full comment line\n              }else {\n                // Activate records emition if above from_line\n                if(this.state.enabled === false && this.info.lines + (this.state.wasRowDelimiter === true ? 1: 0) >= from_line){\n                  this.state.enabled = true;\n                  this.__resetField();\n                  this.__resetRecord();\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                // Skip if line is empty and skip_empty_lines activated\n                if(skip_empty_lines === true && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0){\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                this.info.bytes = this.state.bufBytesStart + pos;\n                const errField = this.__onField();\n                if(errField !== undefined) return errField;\n                this.info.bytes = this.state.bufBytesStart + pos + recordDelimiterLength;\n                const errRecord = this.__onRecord(push);\n                if(errRecord !== undefined) return errRecord;\n                if(to !== -1 && this.info.records >= to){\n                  this.state.stop = true;\n                  close();\n                  return;\n                }\n              }\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n            if(this.state.commenting){\n              continue;\n            }\n            const commentCount = comment === null ? 0 : this.__compareBytes(comment, buf, pos, chr);\n            if(commentCount !== 0){\n              this.state.commenting = true;\n              continue;\n            }\n            const delimiterLength = this.__isDelimiter(buf, pos, chr);\n            if(delimiterLength !== 0){\n              this.info.bytes = this.state.bufBytesStart + pos;\n              const errField = this.__onField();\n              if(errField !== undefined) return errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n        if(this.state.commenting === false){\n          if(max_record_size !== 0 && this.state.record_length + this.state.field.length > max_record_size){\n            return this.__error(\n              new CsvError('CSV_MAX_RECORD_SIZE', [\n                'Max Record Size:',\n                'record exceed the maximum number of tolerated bytes',\n                `of ${max_record_size}`,\n                `at line ${this.info.lines}`,\n              ], this.options, this.__infoField())\n            );\n          }\n        }\n        const lappend = ltrim === false || this.state.quoting === true || this.state.field.length !== 0 || !this.__isCharTrimable(buf, pos);\n        // rtrim in non quoting is handle in __onField\n        const rappend = rtrim === false || this.state.wasQuoting === false;\n        if(lappend === true && rappend === true){\n          this.state.field.append(chr);\n        }else if(rtrim === true && !this.__isCharTrimable(buf, pos)){\n          return this.__error(\n            new CsvError('CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE', [\n              'Invalid Closing Quote:',\n              'found non trimable byte after quote',\n              `at line ${this.info.lines}`,\n            ], this.options, this.__infoField())\n          );\n        }else {\n          if(lappend === false){\n            pos += this.__isCharTrimable(buf, pos) - 1;\n          }\n          continue;\n        }\n      }\n      if(end === true){\n        // Ensure we are not ending in a quoting state\n        if(this.state.quoting === true){\n          const err = this.__error(\n            new CsvError('CSV_QUOTE_NOT_CLOSED', [\n              'Quote Not Closed:',\n              `the parsing is finished with an opening quote at line ${this.info.lines}`,\n            ], this.options, this.__infoField())\n          );\n          if(err !== undefined) return err;\n        }else {\n          // Skip last line if it has no characters\n          if(this.state.wasQuoting === true || this.state.record.length !== 0 || this.state.field.length !== 0){\n            this.info.bytes = this.state.bufBytesStart + pos;\n            const errField = this.__onField();\n            if(errField !== undefined) return errField;\n            const errRecord = this.__onRecord(push);\n            if(errRecord !== undefined) return errRecord;\n          }else if(this.state.wasRowDelimiter === true){\n            this.info.empty_lines++;\n          }else if(this.state.commenting === true){\n            this.info.comment_lines++;\n          }\n        }\n      }else {\n        this.state.bufBytesStart += pos;\n        this.state.previousBuf = buf.slice(pos);\n      }\n      if(this.state.wasRowDelimiter === true){\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    },\n    __onRecord: function(push){\n      const {columns, group_columns_by_name, encoding, info, from, relax_column_count, relax_column_count_less, relax_column_count_more, raw, skip_records_with_empty_values} = this.options;\n      const {enabled, record} = this.state;\n      if(enabled === false){\n        return this.__resetRecord();\n      }\n      // Convert the first line into column names\n      const recordLength = record.length;\n      if(columns === true){\n        if(skip_records_with_empty_values === true && isRecordEmpty(record)){\n          this.__resetRecord();\n          return;\n        }\n        return this.__firstLineToColumns(record);\n      }\n      if(columns === false && this.info.records === 0){\n        this.state.expectedRecordLength = recordLength;\n      }\n      if(recordLength !== this.state.expectedRecordLength){\n        const err = columns === false ?\n          new CsvError('CSV_RECORD_INCONSISTENT_FIELDS_LENGTH', [\n            'Invalid Record Length:',\n            `expect ${this.state.expectedRecordLength},`,\n            `got ${recordLength} on line ${this.info.lines}`,\n          ], this.options, this.__infoField(), {\n            record: record,\n          })\n          :\n          new CsvError('CSV_RECORD_INCONSISTENT_COLUMNS', [\n            'Invalid Record Length:',\n            `columns length is ${columns.length},`, // rename columns\n            `got ${recordLength} on line ${this.info.lines}`,\n          ], this.options, this.__infoField(), {\n            record: record,\n          });\n        if(relax_column_count === true ||\n          (relax_column_count_less === true && recordLength < this.state.expectedRecordLength) ||\n          (relax_column_count_more === true && recordLength > this.state.expectedRecordLength)){\n          this.info.invalid_field_length++;\n          this.state.error = err;\n        // Error is undefined with skip_records_with_error\n        }else {\n          const finalErr = this.__error(err);\n          if(finalErr) return finalErr;\n        }\n      }\n      if(skip_records_with_empty_values === true && isRecordEmpty(record)){\n        this.__resetRecord();\n        return;\n      }\n      if(this.state.recordHasError === true){\n        this.__resetRecord();\n        this.state.recordHasError = false;\n        return;\n      }\n      this.info.records++;\n      if(from === 1 || this.info.records >= from){\n        const {objname} = this.options;\n        // With columns, records are object\n        if(columns !== false){\n          const obj = {};\n          // Transform record array to an object\n          for(let i = 0, l = record.length; i < l; i++){\n            if(columns[i] === undefined || columns[i].disabled) continue;\n            // Turn duplicate columns into an array\n            if (group_columns_by_name === true && obj[columns[i].name] !== undefined) {\n              if (Array.isArray(obj[columns[i].name])) {\n                obj[columns[i].name] = obj[columns[i].name].concat(record[i]);\n              } else {\n                obj[columns[i].name] = [obj[columns[i].name], record[i]];\n              }\n            } else {\n              obj[columns[i].name] = record[i];\n            }\n          }\n          // Without objname (default)\n          if(raw === true || info === true){\n            const extRecord = Object.assign(\n              {record: obj},\n              (raw === true ? {raw: this.state.rawBuffer.toString(encoding)}: {}),\n              (info === true ? {info: this.__infoRecord()}: {})\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [obj[objname], extRecord]\n              , push);\n            if(err){\n              return err;\n            }\n          }else {\n            const err = this.__push(\n              objname === undefined ? obj : [obj[objname], obj]\n              , push);\n            if(err){\n              return err;\n            }\n          }\n        // Without columns, records are array\n        }else {\n          if(raw === true || info === true){\n            const extRecord = Object.assign(\n              {record: record},\n              raw === true ? {raw: this.state.rawBuffer.toString(encoding)}: {},\n              info === true ? {info: this.__infoRecord()}: {}\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [record[objname], extRecord]\n              , push);\n            if(err){\n              return err;\n            }\n          }else {\n            const err = this.__push(\n              objname === undefined ? record : [record[objname], record]\n              , push);\n            if(err){\n              return err;\n            }\n          }\n        }\n      }\n      this.__resetRecord();\n    },\n    __firstLineToColumns: function(record){\n      const {firstLineToHeaders} = this.state;\n      try{\n        const headers = firstLineToHeaders === undefined ? record : firstLineToHeaders.call(null, record);\n        if(!Array.isArray(headers)){\n          return this.__error(\n            new CsvError('CSV_INVALID_COLUMN_MAPPING', [\n              'Invalid Column Mapping:',\n              'expect an array from column function,',\n              `got ${JSON.stringify(headers)}`\n            ], this.options, this.__infoField(), {\n              headers: headers,\n            })\n          );\n        }\n        const normalizedHeaders = normalize_columns_array(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n        this.__resetRecord();\n        return;\n      }catch(err){\n        return err;\n      }\n    },\n    __resetRecord: function(){\n      if(this.options.raw === true){\n        this.state.rawBuffer.reset();\n      }\n      this.state.error = undefined;\n      this.state.record = [];\n      this.state.record_length = 0;\n    },\n    __onField: function(){\n      const {cast, encoding, rtrim, max_record_size} = this.options;\n      const {enabled, wasQuoting} = this.state;\n      // Short circuit for the from_line options\n      if(enabled === false){\n        return this.__resetField();\n      }\n      let field = this.state.field.toString(encoding);\n      if(rtrim === true && wasQuoting === false){\n        field = field.trimRight();\n      }\n      if(cast === true){\n        const [err, f] = this.__cast(field);\n        if(err !== undefined) return err;\n        field = f;\n      }\n      this.state.record.push(field);\n      // Increment record length if record size must not exceed a limit\n      if(max_record_size !== 0 && typeof field === 'string'){\n        this.state.record_length += field.length;\n      }\n      this.__resetField();\n    },\n    __resetField: function(){\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    },\n    __push: function(record, push){\n      const {on_record} = this.options;\n      if(on_record !== undefined){\n        const info = this.__infoRecord();\n        try{\n          record = on_record.call(null, record, info);\n        }catch(err){\n          return err;\n        }\n        if(record === undefined || record === null){ return; }\n      }\n      push(record);\n    },\n    // Return a tuple with the error and the casted value\n    __cast: function(field){\n      const {columns, relax_column_count} = this.options;\n      const isColumns = Array.isArray(columns);\n      // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n      if(isColumns === true && relax_column_count && this.options.columns.length <= this.state.record.length){\n        return [undefined, undefined];\n      }\n      if(this.state.castField !== null){\n        try{\n          const info = this.__infoField();\n          return [undefined, this.state.castField.call(null, field, info)];\n        }catch(err){\n          return [err];\n        }\n      }\n      if(this.__isFloat(field)){\n        return [undefined, parseFloat(field)];\n      }else if(this.options.cast_date !== false){\n        const info = this.__infoField();\n        return [undefined, this.options.cast_date.call(null, field, info)];\n      }\n      return [undefined, field];\n    },\n    // Helper to test if a character is a space or a line delimiter\n    __isCharTrimable: function(buf, pos){\n      const isTrim = (buf, pos) => {\n        const {timchars} = this.state;\n        loop1: for(let i = 0; i < timchars.length; i++){\n          const timchar = timchars[i];\n          for(let j = 0; j < timchar.length; j++){\n            if(timchar[j] !== buf[pos+j]) continue loop1;\n          }\n          return timchar.length;\n        }\n        return 0;\n      };\n      return isTrim(buf, pos);\n    },\n    // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n    __isFloat: function(value){\n      return (value - parseFloat(value) + 1) >= 0; // Borrowed from jquery\n    },\n    __compareBytes: function(sourceBuf, targetBuf, targetPos, firstByte){\n      if(sourceBuf[0] !== firstByte) return 0;\n      const sourceLength = sourceBuf.length;\n      for(let i = 1; i < sourceLength; i++){\n        if(sourceBuf[i] !== targetBuf[targetPos+i]) return 0;\n      }\n      return sourceLength;\n    },\n    __isDelimiter: function(buf, pos, chr){\n      const {delimiter, ignore_last_delimiters} = this.options;\n      if(ignore_last_delimiters === true && this.state.record.length === this.options.columns.length - 1){\n        return 0;\n      }else if(ignore_last_delimiters !== false && typeof ignore_last_delimiters === 'number' && this.state.record.length === ignore_last_delimiters - 1){\n        return 0;\n      }\n      loop1: for(let i = 0; i < delimiter.length; i++){\n        const del = delimiter[i];\n        if(del[0] === chr){\n          for(let j = 1; j < del.length; j++){\n            if(del[j] !== buf[pos+j]) continue loop1;\n          }\n          return del.length;\n        }\n      }\n      return 0;\n    },\n    __isRecordDelimiter: function(chr, buf, pos){\n      const {record_delimiter} = this.options;\n      const recordDelimiterLength = record_delimiter.length;\n      loop1: for(let i = 0; i < recordDelimiterLength; i++){\n        const rd = record_delimiter[i];\n        const rdLength = rd.length;\n        if(rd[0] !== chr){\n          continue;\n        }\n        for(let j = 1; j < rdLength; j++){\n          if(rd[j] !== buf[pos+j]){\n            continue loop1;\n          }\n        }\n        return rd.length;\n      }\n      return 0;\n    },\n    __isEscape: function(buf, pos, chr){\n      const {escape} = this.options;\n      if(escape === null) return false;\n      const l = escape.length;\n      if(escape[0] === chr){\n        for(let i = 0; i < l; i++){\n          if(escape[i] !== buf[pos+i]){\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    __isQuote: function(buf, pos){\n      const {quote} = this.options;\n      if(quote === null) return false;\n      const l = quote.length;\n      for(let i = 0; i < l; i++){\n        if(quote[i] !== buf[pos+i]){\n          return false;\n        }\n      }\n      return true;\n    },\n    __autoDiscoverRecordDelimiter: function(buf, pos){\n      const {encoding} = this.options;\n      const chr = buf[pos];\n      if(chr === cr){\n        if(buf[pos+1] === nl){\n          this.options.record_delimiter.push(Buffer.from('\\r\\n', encoding));\n          this.state.recordDelimiterMaxLength = 2;\n          return 2;\n        }else {\n          this.options.record_delimiter.push(Buffer.from('\\r', encoding));\n          this.state.recordDelimiterMaxLength = 1;\n          return 1;\n        }\n      }else if(chr === nl){\n        this.options.record_delimiter.push(Buffer.from('\\n', encoding));\n        this.state.recordDelimiterMaxLength = 1;\n        return 1;\n      }\n      return 0;\n    },\n    __error: function(msg){\n      const {encoding, raw, skip_records_with_error} = this.options;\n      const err = typeof msg === 'string' ? new Error(msg) : msg;\n      if(skip_records_with_error){\n        this.state.recordHasError = true;\n        if(this.options.on_skip !== undefined){\n          this.options.on_skip(err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        }\n        // this.emit('skip', err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        return undefined;\n      }else {\n        return err;\n      }\n    },\n    __infoDataSet: function(){\n      return {\n        ...this.info,\n        columns: this.options.columns\n      };\n    },\n    __infoRecord: function(){\n      const {columns, raw, encoding} = this.options;\n      return {\n        ...this.__infoDataSet(),\n        error: this.state.error,\n        header: columns === true,\n        index: this.state.record.length,\n        raw: raw ? this.state.rawBuffer.toString(encoding) : undefined\n      };\n    },\n    __infoField: function(){\n      const {columns} = this.options;\n      const isColumns = Array.isArray(columns);\n      return {\n        ...this.__infoRecord(),\n        column: isColumns === true ?\n          (columns.length > this.state.record.length ?\n            columns[this.state.record.length].name :\n            null\n          ) :\n          this.state.record.length,\n        quoting: this.state.wasQuoting,\n      };\n    }\n  };\n};\n\nconst parse = function(data, opts={}){\n  if(typeof data === 'string'){\n    data = Buffer.from(data);\n  }\n  const records = opts && opts.objname ? {} : [];\n  const parser = transform(opts);\n  const push = (record) => {\n    if(parser.options.objname === undefined)\n      records.push(record);\n    else {\n      records[record[0]] = record[1];\n    }\n  };\n  const close = () => {};\n  const err1 = parser.parse(data, false, push, close);\n  if(err1 !== undefined) throw err1;\n  const err2 = parser.parse(undefined, true, push, close);\n  if(err2 !== undefined) throw err2;\n  return records;\n};\n\nexport { CsvError, parse };\n", "export const int32 = new Int32Array(2);\r\nexport const float32 = new Float32Array(int32.buffer);\r\nexport const float64 = new Float64Array(int32.buffer);\r\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n", "export var Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n", "import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants.js\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils.js\";\r\nimport { Encoding } from \"./encoding.js\";\r\nexport class ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return BigInt.asIntN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\r\n    }\r\n    readUint64(offset) {\r\n        return BigInt.asUintN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\r\n    }\r\n    readFloat32(offset) {\r\n        int32[0] = this.readInt32(offset);\r\n        return float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, Number(BigInt.asIntN(32, value)));\r\n        this.writeInt32(offset + 4, Number(BigInt.asIntN(32, value >> BigInt(32))));\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, Number(BigInt.asUintN(32, value)));\r\n        this.writeUint32(offset + 4, Number(BigInt.asUintN(32, value >> BigInt(32))));\r\n    }\r\n    writeFloat32(offset, value) {\r\n        float32[0] = value;\r\n        this.writeInt32(offset, int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        float64[0] = value;\r\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n            FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += SIZEOF_INT;\r\n        if (opt_encoding === Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n", "import { ByteBuffer } from \"./byte-buffer.js\";\r\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants.js\";\r\nexport class Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value !== defaultValue) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, SIZEOF_INT +\r\n                FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (s === null || s === undefined) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { ephemerisType } from './ephemerisType';\nimport { manCovRefFrame } from './manCovRefFrame';\nimport { meanElementTheory } from './meanElementTheory';\nimport { referenceFrame } from './referenceFrame';\nimport { timeSystem } from './timeSystem';\n\n\nexport class OMM {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):OMM {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsOMM(bb:flatbuffers.ByteBuffer, obj?:OMM):OMM {\n  return (obj || new OMM()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsOMM(bb:flatbuffers.ByteBuffer, obj?:OMM):OMM {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new OMM()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {\n  return bb.__has_identifier('$OMM');\n}\n\nCCSDS_OMM_VERS():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCREATION_DATE():string|null\nCREATION_DATE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nCREATION_DATE(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nORIGINATOR():string|null\nORIGINATOR(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nORIGINATOR(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nOBJECT_NAME():string|null\nOBJECT_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nOBJECT_NAME(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nOBJECT_ID():string|null\nOBJECT_ID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nOBJECT_ID(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nCENTER_NAME():string|null\nCENTER_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nCENTER_NAME(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nREF_FRAME():referenceFrame {\n  const offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : referenceFrame.TEME;\n}\n\nREF_FRAME_EPOCH():string|null\nREF_FRAME_EPOCH(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nREF_FRAME_EPOCH(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nTIME_SYSTEM():timeSystem {\n  const offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : timeSystem.UTC;\n}\n\nMEAN_ELEMENT_THEORY():meanElementTheory {\n  const offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : meanElementTheory.SGP4;\n}\n\nCOMMENT():string|null\nCOMMENT(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nCOMMENT(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nEPOCH():string|null\nEPOCH(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nEPOCH(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nSEMI_MAJOR_AXIS():number {\n  const offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nMEAN_MOTION():number {\n  const offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nECCENTRICITY():number {\n  const offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nINCLINATION():number {\n  const offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nRA_OF_ASC_NODE():number {\n  const offset = this.bb!.__offset(this.bb_pos, 36);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nARG_OF_PERICENTER():number {\n  const offset = this.bb!.__offset(this.bb_pos, 38);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nMEAN_ANOMALY():number {\n  const offset = this.bb!.__offset(this.bb_pos, 40);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nGM():number {\n  const offset = this.bb!.__offset(this.bb_pos, 42);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nMASS():number {\n  const offset = this.bb!.__offset(this.bb_pos, 44);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nSOLAR_RAD_AREA():number {\n  const offset = this.bb!.__offset(this.bb_pos, 46);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nSOLAR_RAD_COEFF():number {\n  const offset = this.bb!.__offset(this.bb_pos, 48);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nDRAG_AREA():number {\n  const offset = this.bb!.__offset(this.bb_pos, 50);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nDRAG_COEFF():number {\n  const offset = this.bb!.__offset(this.bb_pos, 52);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nEPHEMERIS_TYPE():ephemerisType {\n  const offset = this.bb!.__offset(this.bb_pos, 54);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ephemerisType.SGP4;\n}\n\nCLASSIFICATION_TYPE():string|null\nCLASSIFICATION_TYPE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nCLASSIFICATION_TYPE(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 56);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nNORAD_CAT_ID():number {\n  const offset = this.bb!.__offset(this.bb_pos, 58);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n}\n\nELEMENT_SET_NO():number {\n  const offset = this.bb!.__offset(this.bb_pos, 60);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n}\n\nREV_AT_EPOCH():number {\n  const offset = this.bb!.__offset(this.bb_pos, 62);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nBSTAR():number {\n  const offset = this.bb!.__offset(this.bb_pos, 64);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nMEAN_MOTION_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 66);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nMEAN_MOTION_DDOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 68);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCOV_REF_FRAME():manCovRefFrame {\n  const offset = this.bb!.__offset(this.bb_pos, 70);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : manCovRefFrame.RSW;\n}\n\nCX_X():number {\n  const offset = this.bb!.__offset(this.bb_pos, 72);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_X():number {\n  const offset = this.bb!.__offset(this.bb_pos, 74);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_Y():number {\n  const offset = this.bb!.__offset(this.bb_pos, 76);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_X():number {\n  const offset = this.bb!.__offset(this.bb_pos, 78);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_Y():number {\n  const offset = this.bb!.__offset(this.bb_pos, 80);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_Z():number {\n  const offset = this.bb!.__offset(this.bb_pos, 82);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCX_DOT_X():number {\n  const offset = this.bb!.__offset(this.bb_pos, 84);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCX_DOT_Y():number {\n  const offset = this.bb!.__offset(this.bb_pos, 86);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCX_DOT_Z():number {\n  const offset = this.bb!.__offset(this.bb_pos, 88);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCX_DOT_X_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 90);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_DOT_X():number {\n  const offset = this.bb!.__offset(this.bb_pos, 92);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_DOT_Y():number {\n  const offset = this.bb!.__offset(this.bb_pos, 94);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_DOT_Z():number {\n  const offset = this.bb!.__offset(this.bb_pos, 96);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_DOT_X_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 98);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCY_DOT_Y_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 100);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_DOT_X():number {\n  const offset = this.bb!.__offset(this.bb_pos, 102);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_DOT_Y():number {\n  const offset = this.bb!.__offset(this.bb_pos, 104);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_DOT_Z():number {\n  const offset = this.bb!.__offset(this.bb_pos, 106);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_DOT_X_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 108);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_DOT_Y_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 110);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nCZ_DOT_Z_DOT():number {\n  const offset = this.bb!.__offset(this.bb_pos, 112);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nUSER_DEFINED_BIP_0044_TYPE():number {\n  const offset = this.bb!.__offset(this.bb_pos, 114);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n}\n\nUSER_DEFINED_OBJECT_DESIGNATOR():string|null\nUSER_DEFINED_OBJECT_DESIGNATOR(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nUSER_DEFINED_OBJECT_DESIGNATOR(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 116);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nUSER_DEFINED_EARTH_MODEL():string|null\nUSER_DEFINED_EARTH_MODEL(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nUSER_DEFINED_EARTH_MODEL(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 118);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nUSER_DEFINED_EPOCH_TIMESTAMP():number {\n  const offset = this.bb!.__offset(this.bb_pos, 120);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nUSER_DEFINED_MICROSECONDS():number {\n  const offset = this.bb!.__offset(this.bb_pos, 122);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nstatic startOMM(builder:flatbuffers.Builder) {\n  builder.startObject(60);\n}\n\nstatic addCCSDS_OMM_VERS(builder:flatbuffers.Builder, CCSDS_OMM_VERS:number) {\n  builder.addFieldFloat64(0, CCSDS_OMM_VERS, 0.0);\n}\n\nstatic addCREATION_DATE(builder:flatbuffers.Builder, CREATION_DATEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, CREATION_DATEOffset, 0);\n}\n\nstatic addORIGINATOR(builder:flatbuffers.Builder, ORIGINATOROffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, ORIGINATOROffset, 0);\n}\n\nstatic addOBJECT_NAME(builder:flatbuffers.Builder, OBJECT_NAMEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, OBJECT_NAMEOffset, 0);\n}\n\nstatic addOBJECT_ID(builder:flatbuffers.Builder, OBJECT_IDOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, OBJECT_IDOffset, 0);\n}\n\nstatic addCENTER_NAME(builder:flatbuffers.Builder, CENTER_NAMEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, CENTER_NAMEOffset, 0);\n}\n\nstatic addREF_FRAME(builder:flatbuffers.Builder, REF_FRAME:referenceFrame) {\n  builder.addFieldInt8(6, REF_FRAME, referenceFrame.TEME);\n}\n\nstatic addREF_FRAME_EPOCH(builder:flatbuffers.Builder, REF_FRAME_EPOCHOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(7, REF_FRAME_EPOCHOffset, 0);\n}\n\nstatic addTIME_SYSTEM(builder:flatbuffers.Builder, TIME_SYSTEM:timeSystem) {\n  builder.addFieldInt8(8, TIME_SYSTEM, timeSystem.UTC);\n}\n\nstatic addMEAN_ELEMENT_THEORY(builder:flatbuffers.Builder, MEAN_ELEMENT_THEORY:meanElementTheory) {\n  builder.addFieldInt8(9, MEAN_ELEMENT_THEORY, meanElementTheory.SGP4);\n}\n\nstatic addCOMMENT(builder:flatbuffers.Builder, COMMENTOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(10, COMMENTOffset, 0);\n}\n\nstatic addEPOCH(builder:flatbuffers.Builder, EPOCHOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(11, EPOCHOffset, 0);\n}\n\nstatic addSEMI_MAJOR_AXIS(builder:flatbuffers.Builder, SEMI_MAJOR_AXIS:number) {\n  builder.addFieldFloat64(12, SEMI_MAJOR_AXIS, 0.0);\n}\n\nstatic addMEAN_MOTION(builder:flatbuffers.Builder, MEAN_MOTION:number) {\n  builder.addFieldFloat64(13, MEAN_MOTION, 0.0);\n}\n\nstatic addECCENTRICITY(builder:flatbuffers.Builder, ECCENTRICITY:number) {\n  builder.addFieldFloat64(14, ECCENTRICITY, 0.0);\n}\n\nstatic addINCLINATION(builder:flatbuffers.Builder, INCLINATION:number) {\n  builder.addFieldFloat64(15, INCLINATION, 0.0);\n}\n\nstatic addRA_OF_ASC_NODE(builder:flatbuffers.Builder, RA_OF_ASC_NODE:number) {\n  builder.addFieldFloat64(16, RA_OF_ASC_NODE, 0.0);\n}\n\nstatic addARG_OF_PERICENTER(builder:flatbuffers.Builder, ARG_OF_PERICENTER:number) {\n  builder.addFieldFloat64(17, ARG_OF_PERICENTER, 0.0);\n}\n\nstatic addMEAN_ANOMALY(builder:flatbuffers.Builder, MEAN_ANOMALY:number) {\n  builder.addFieldFloat64(18, MEAN_ANOMALY, 0.0);\n}\n\nstatic addGM(builder:flatbuffers.Builder, GM:number) {\n  builder.addFieldFloat64(19, GM, 0.0);\n}\n\nstatic addMASS(builder:flatbuffers.Builder, MASS:number) {\n  builder.addFieldFloat64(20, MASS, 0.0);\n}\n\nstatic addSOLAR_RAD_AREA(builder:flatbuffers.Builder, SOLAR_RAD_AREA:number) {\n  builder.addFieldFloat64(21, SOLAR_RAD_AREA, 0.0);\n}\n\nstatic addSOLAR_RAD_COEFF(builder:flatbuffers.Builder, SOLAR_RAD_COEFF:number) {\n  builder.addFieldFloat64(22, SOLAR_RAD_COEFF, 0.0);\n}\n\nstatic addDRAG_AREA(builder:flatbuffers.Builder, DRAG_AREA:number) {\n  builder.addFieldFloat64(23, DRAG_AREA, 0.0);\n}\n\nstatic addDRAG_COEFF(builder:flatbuffers.Builder, DRAG_COEFF:number) {\n  builder.addFieldFloat64(24, DRAG_COEFF, 0.0);\n}\n\nstatic addEPHEMERIS_TYPE(builder:flatbuffers.Builder, EPHEMERIS_TYPE:ephemerisType) {\n  builder.addFieldInt8(25, EPHEMERIS_TYPE, ephemerisType.SGP4);\n}\n\nstatic addCLASSIFICATION_TYPE(builder:flatbuffers.Builder, CLASSIFICATION_TYPEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(26, CLASSIFICATION_TYPEOffset, 0);\n}\n\nstatic addNORAD_CAT_ID(builder:flatbuffers.Builder, NORAD_CAT_ID:number) {\n  builder.addFieldInt32(27, NORAD_CAT_ID, 0);\n}\n\nstatic addELEMENT_SET_NO(builder:flatbuffers.Builder, ELEMENT_SET_NO:number) {\n  builder.addFieldInt32(28, ELEMENT_SET_NO, 0);\n}\n\nstatic addREV_AT_EPOCH(builder:flatbuffers.Builder, REV_AT_EPOCH:number) {\n  builder.addFieldFloat64(29, REV_AT_EPOCH, 0.0);\n}\n\nstatic addBSTAR(builder:flatbuffers.Builder, BSTAR:number) {\n  builder.addFieldFloat64(30, BSTAR, 0.0);\n}\n\nstatic addMEAN_MOTION_DOT(builder:flatbuffers.Builder, MEAN_MOTION_DOT:number) {\n  builder.addFieldFloat64(31, MEAN_MOTION_DOT, 0.0);\n}\n\nstatic addMEAN_MOTION_DDOT(builder:flatbuffers.Builder, MEAN_MOTION_DDOT:number) {\n  builder.addFieldFloat64(32, MEAN_MOTION_DDOT, 0.0);\n}\n\nstatic addCOV_REF_FRAME(builder:flatbuffers.Builder, COV_REF_FRAME:manCovRefFrame) {\n  builder.addFieldInt8(33, COV_REF_FRAME, manCovRefFrame.RSW);\n}\n\nstatic addCX_X(builder:flatbuffers.Builder, CX_X:number) {\n  builder.addFieldFloat64(34, CX_X, 0.0);\n}\n\nstatic addCY_X(builder:flatbuffers.Builder, CY_X:number) {\n  builder.addFieldFloat64(35, CY_X, 0.0);\n}\n\nstatic addCY_Y(builder:flatbuffers.Builder, CY_Y:number) {\n  builder.addFieldFloat64(36, CY_Y, 0.0);\n}\n\nstatic addCZ_X(builder:flatbuffers.Builder, CZ_X:number) {\n  builder.addFieldFloat64(37, CZ_X, 0.0);\n}\n\nstatic addCZ_Y(builder:flatbuffers.Builder, CZ_Y:number) {\n  builder.addFieldFloat64(38, CZ_Y, 0.0);\n}\n\nstatic addCZ_Z(builder:flatbuffers.Builder, CZ_Z:number) {\n  builder.addFieldFloat64(39, CZ_Z, 0.0);\n}\n\nstatic addCX_DOT_X(builder:flatbuffers.Builder, CX_DOT_X:number) {\n  builder.addFieldFloat64(40, CX_DOT_X, 0.0);\n}\n\nstatic addCX_DOT_Y(builder:flatbuffers.Builder, CX_DOT_Y:number) {\n  builder.addFieldFloat64(41, CX_DOT_Y, 0.0);\n}\n\nstatic addCX_DOT_Z(builder:flatbuffers.Builder, CX_DOT_Z:number) {\n  builder.addFieldFloat64(42, CX_DOT_Z, 0.0);\n}\n\nstatic addCX_DOT_X_DOT(builder:flatbuffers.Builder, CX_DOT_X_DOT:number) {\n  builder.addFieldFloat64(43, CX_DOT_X_DOT, 0.0);\n}\n\nstatic addCY_DOT_X(builder:flatbuffers.Builder, CY_DOT_X:number) {\n  builder.addFieldFloat64(44, CY_DOT_X, 0.0);\n}\n\nstatic addCY_DOT_Y(builder:flatbuffers.Builder, CY_DOT_Y:number) {\n  builder.addFieldFloat64(45, CY_DOT_Y, 0.0);\n}\n\nstatic addCY_DOT_Z(builder:flatbuffers.Builder, CY_DOT_Z:number) {\n  builder.addFieldFloat64(46, CY_DOT_Z, 0.0);\n}\n\nstatic addCY_DOT_X_DOT(builder:flatbuffers.Builder, CY_DOT_X_DOT:number) {\n  builder.addFieldFloat64(47, CY_DOT_X_DOT, 0.0);\n}\n\nstatic addCY_DOT_Y_DOT(builder:flatbuffers.Builder, CY_DOT_Y_DOT:number) {\n  builder.addFieldFloat64(48, CY_DOT_Y_DOT, 0.0);\n}\n\nstatic addCZ_DOT_X(builder:flatbuffers.Builder, CZ_DOT_X:number) {\n  builder.addFieldFloat64(49, CZ_DOT_X, 0.0);\n}\n\nstatic addCZ_DOT_Y(builder:flatbuffers.Builder, CZ_DOT_Y:number) {\n  builder.addFieldFloat64(50, CZ_DOT_Y, 0.0);\n}\n\nstatic addCZ_DOT_Z(builder:flatbuffers.Builder, CZ_DOT_Z:number) {\n  builder.addFieldFloat64(51, CZ_DOT_Z, 0.0);\n}\n\nstatic addCZ_DOT_X_DOT(builder:flatbuffers.Builder, CZ_DOT_X_DOT:number) {\n  builder.addFieldFloat64(52, CZ_DOT_X_DOT, 0.0);\n}\n\nstatic addCZ_DOT_Y_DOT(builder:flatbuffers.Builder, CZ_DOT_Y_DOT:number) {\n  builder.addFieldFloat64(53, CZ_DOT_Y_DOT, 0.0);\n}\n\nstatic addCZ_DOT_Z_DOT(builder:flatbuffers.Builder, CZ_DOT_Z_DOT:number) {\n  builder.addFieldFloat64(54, CZ_DOT_Z_DOT, 0.0);\n}\n\nstatic addUSER_DEFINED_BIP_0044_TYPE(builder:flatbuffers.Builder, USER_DEFINED_BIP_0044_TYPE:number) {\n  builder.addFieldInt32(55, USER_DEFINED_BIP_0044_TYPE, 0);\n}\n\nstatic addUSER_DEFINED_OBJECT_DESIGNATOR(builder:flatbuffers.Builder, USER_DEFINED_OBJECT_DESIGNATOROffset:flatbuffers.Offset) {\n  builder.addFieldOffset(56, USER_DEFINED_OBJECT_DESIGNATOROffset, 0);\n}\n\nstatic addUSER_DEFINED_EARTH_MODEL(builder:flatbuffers.Builder, USER_DEFINED_EARTH_MODELOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(57, USER_DEFINED_EARTH_MODELOffset, 0);\n}\n\nstatic addUSER_DEFINED_EPOCH_TIMESTAMP(builder:flatbuffers.Builder, USER_DEFINED_EPOCH_TIMESTAMP:number) {\n  builder.addFieldFloat64(58, USER_DEFINED_EPOCH_TIMESTAMP, 0.0);\n}\n\nstatic addUSER_DEFINED_MICROSECONDS(builder:flatbuffers.Builder, USER_DEFINED_MICROSECONDS:number) {\n  builder.addFieldFloat64(59, USER_DEFINED_MICROSECONDS, 0.0);\n}\n\nstatic endOMM(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic finishOMMBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, '$OMM');\n}\n\nstatic finishSizePrefixedOMMBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, '$OMM', true);\n}\n\nstatic createOMM(builder:flatbuffers.Builder, CCSDS_OMM_VERS:number, CREATION_DATEOffset:flatbuffers.Offset, ORIGINATOROffset:flatbuffers.Offset, OBJECT_NAMEOffset:flatbuffers.Offset, OBJECT_IDOffset:flatbuffers.Offset, CENTER_NAMEOffset:flatbuffers.Offset, REF_FRAME:referenceFrame, REF_FRAME_EPOCHOffset:flatbuffers.Offset, TIME_SYSTEM:timeSystem, MEAN_ELEMENT_THEORY:meanElementTheory, COMMENTOffset:flatbuffers.Offset, EPOCHOffset:flatbuffers.Offset, SEMI_MAJOR_AXIS:number, MEAN_MOTION:number, ECCENTRICITY:number, INCLINATION:number, RA_OF_ASC_NODE:number, ARG_OF_PERICENTER:number, MEAN_ANOMALY:number, GM:number, MASS:number, SOLAR_RAD_AREA:number, SOLAR_RAD_COEFF:number, DRAG_AREA:number, DRAG_COEFF:number, EPHEMERIS_TYPE:ephemerisType, CLASSIFICATION_TYPEOffset:flatbuffers.Offset, NORAD_CAT_ID:number, ELEMENT_SET_NO:number, REV_AT_EPOCH:number, BSTAR:number, MEAN_MOTION_DOT:number, MEAN_MOTION_DDOT:number, COV_REF_FRAME:manCovRefFrame, CX_X:number, CY_X:number, CY_Y:number, CZ_X:number, CZ_Y:number, CZ_Z:number, CX_DOT_X:number, CX_DOT_Y:number, CX_DOT_Z:number, CX_DOT_X_DOT:number, CY_DOT_X:number, CY_DOT_Y:number, CY_DOT_Z:number, CY_DOT_X_DOT:number, CY_DOT_Y_DOT:number, CZ_DOT_X:number, CZ_DOT_Y:number, CZ_DOT_Z:number, CZ_DOT_X_DOT:number, CZ_DOT_Y_DOT:number, CZ_DOT_Z_DOT:number, USER_DEFINED_BIP_0044_TYPE:number, USER_DEFINED_OBJECT_DESIGNATOROffset:flatbuffers.Offset, USER_DEFINED_EARTH_MODELOffset:flatbuffers.Offset, USER_DEFINED_EPOCH_TIMESTAMP:number, USER_DEFINED_MICROSECONDS:number):flatbuffers.Offset {\n  OMM.startOMM(builder);\n  OMM.addCCSDS_OMM_VERS(builder, CCSDS_OMM_VERS);\n  OMM.addCREATION_DATE(builder, CREATION_DATEOffset);\n  OMM.addORIGINATOR(builder, ORIGINATOROffset);\n  OMM.addOBJECT_NAME(builder, OBJECT_NAMEOffset);\n  OMM.addOBJECT_ID(builder, OBJECT_IDOffset);\n  OMM.addCENTER_NAME(builder, CENTER_NAMEOffset);\n  OMM.addREF_FRAME(builder, REF_FRAME);\n  OMM.addREF_FRAME_EPOCH(builder, REF_FRAME_EPOCHOffset);\n  OMM.addTIME_SYSTEM(builder, TIME_SYSTEM);\n  OMM.addMEAN_ELEMENT_THEORY(builder, MEAN_ELEMENT_THEORY);\n  OMM.addCOMMENT(builder, COMMENTOffset);\n  OMM.addEPOCH(builder, EPOCHOffset);\n  OMM.addSEMI_MAJOR_AXIS(builder, SEMI_MAJOR_AXIS);\n  OMM.addMEAN_MOTION(builder, MEAN_MOTION);\n  OMM.addECCENTRICITY(builder, ECCENTRICITY);\n  OMM.addINCLINATION(builder, INCLINATION);\n  OMM.addRA_OF_ASC_NODE(builder, RA_OF_ASC_NODE);\n  OMM.addARG_OF_PERICENTER(builder, ARG_OF_PERICENTER);\n  OMM.addMEAN_ANOMALY(builder, MEAN_ANOMALY);\n  OMM.addGM(builder, GM);\n  OMM.addMASS(builder, MASS);\n  OMM.addSOLAR_RAD_AREA(builder, SOLAR_RAD_AREA);\n  OMM.addSOLAR_RAD_COEFF(builder, SOLAR_RAD_COEFF);\n  OMM.addDRAG_AREA(builder, DRAG_AREA);\n  OMM.addDRAG_COEFF(builder, DRAG_COEFF);\n  OMM.addEPHEMERIS_TYPE(builder, EPHEMERIS_TYPE);\n  OMM.addCLASSIFICATION_TYPE(builder, CLASSIFICATION_TYPEOffset);\n  OMM.addNORAD_CAT_ID(builder, NORAD_CAT_ID);\n  OMM.addELEMENT_SET_NO(builder, ELEMENT_SET_NO);\n  OMM.addREV_AT_EPOCH(builder, REV_AT_EPOCH);\n  OMM.addBSTAR(builder, BSTAR);\n  OMM.addMEAN_MOTION_DOT(builder, MEAN_MOTION_DOT);\n  OMM.addMEAN_MOTION_DDOT(builder, MEAN_MOTION_DDOT);\n  OMM.addCOV_REF_FRAME(builder, COV_REF_FRAME);\n  OMM.addCX_X(builder, CX_X);\n  OMM.addCY_X(builder, CY_X);\n  OMM.addCY_Y(builder, CY_Y);\n  OMM.addCZ_X(builder, CZ_X);\n  OMM.addCZ_Y(builder, CZ_Y);\n  OMM.addCZ_Z(builder, CZ_Z);\n  OMM.addCX_DOT_X(builder, CX_DOT_X);\n  OMM.addCX_DOT_Y(builder, CX_DOT_Y);\n  OMM.addCX_DOT_Z(builder, CX_DOT_Z);\n  OMM.addCX_DOT_X_DOT(builder, CX_DOT_X_DOT);\n  OMM.addCY_DOT_X(builder, CY_DOT_X);\n  OMM.addCY_DOT_Y(builder, CY_DOT_Y);\n  OMM.addCY_DOT_Z(builder, CY_DOT_Z);\n  OMM.addCY_DOT_X_DOT(builder, CY_DOT_X_DOT);\n  OMM.addCY_DOT_Y_DOT(builder, CY_DOT_Y_DOT);\n  OMM.addCZ_DOT_X(builder, CZ_DOT_X);\n  OMM.addCZ_DOT_Y(builder, CZ_DOT_Y);\n  OMM.addCZ_DOT_Z(builder, CZ_DOT_Z);\n  OMM.addCZ_DOT_X_DOT(builder, CZ_DOT_X_DOT);\n  OMM.addCZ_DOT_Y_DOT(builder, CZ_DOT_Y_DOT);\n  OMM.addCZ_DOT_Z_DOT(builder, CZ_DOT_Z_DOT);\n  OMM.addUSER_DEFINED_BIP_0044_TYPE(builder, USER_DEFINED_BIP_0044_TYPE);\n  OMM.addUSER_DEFINED_OBJECT_DESIGNATOR(builder, USER_DEFINED_OBJECT_DESIGNATOROffset);\n  OMM.addUSER_DEFINED_EARTH_MODEL(builder, USER_DEFINED_EARTH_MODELOffset);\n  OMM.addUSER_DEFINED_EPOCH_TIMESTAMP(builder, USER_DEFINED_EPOCH_TIMESTAMP);\n  OMM.addUSER_DEFINED_MICROSECONDS(builder, USER_DEFINED_MICROSECONDS);\n  return OMM.endOMM(builder);\n}\n\nunpack(): OMMT {\n  return new OMMT(\n    this.CCSDS_OMM_VERS(),\n    this.CREATION_DATE(),\n    this.ORIGINATOR(),\n    this.OBJECT_NAME(),\n    this.OBJECT_ID(),\n    this.CENTER_NAME(),\n    this.REF_FRAME(),\n    this.REF_FRAME_EPOCH(),\n    this.TIME_SYSTEM(),\n    this.MEAN_ELEMENT_THEORY(),\n    this.COMMENT(),\n    this.EPOCH(),\n    this.SEMI_MAJOR_AXIS(),\n    this.MEAN_MOTION(),\n    this.ECCENTRICITY(),\n    this.INCLINATION(),\n    this.RA_OF_ASC_NODE(),\n    this.ARG_OF_PERICENTER(),\n    this.MEAN_ANOMALY(),\n    this.GM(),\n    this.MASS(),\n    this.SOLAR_RAD_AREA(),\n    this.SOLAR_RAD_COEFF(),\n    this.DRAG_AREA(),\n    this.DRAG_COEFF(),\n    this.EPHEMERIS_TYPE(),\n    this.CLASSIFICATION_TYPE(),\n    this.NORAD_CAT_ID(),\n    this.ELEMENT_SET_NO(),\n    this.REV_AT_EPOCH(),\n    this.BSTAR(),\n    this.MEAN_MOTION_DOT(),\n    this.MEAN_MOTION_DDOT(),\n    this.COV_REF_FRAME(),\n    this.CX_X(),\n    this.CY_X(),\n    this.CY_Y(),\n    this.CZ_X(),\n    this.CZ_Y(),\n    this.CZ_Z(),\n    this.CX_DOT_X(),\n    this.CX_DOT_Y(),\n    this.CX_DOT_Z(),\n    this.CX_DOT_X_DOT(),\n    this.CY_DOT_X(),\n    this.CY_DOT_Y(),\n    this.CY_DOT_Z(),\n    this.CY_DOT_X_DOT(),\n    this.CY_DOT_Y_DOT(),\n    this.CZ_DOT_X(),\n    this.CZ_DOT_Y(),\n    this.CZ_DOT_Z(),\n    this.CZ_DOT_X_DOT(),\n    this.CZ_DOT_Y_DOT(),\n    this.CZ_DOT_Z_DOT(),\n    this.USER_DEFINED_BIP_0044_TYPE(),\n    this.USER_DEFINED_OBJECT_DESIGNATOR(),\n    this.USER_DEFINED_EARTH_MODEL(),\n    this.USER_DEFINED_EPOCH_TIMESTAMP(),\n    this.USER_DEFINED_MICROSECONDS()\n  );\n}\n\n\nunpackTo(_o: OMMT): void {\n  _o.CCSDS_OMM_VERS = this.CCSDS_OMM_VERS();\n  _o.CREATION_DATE = this.CREATION_DATE();\n  _o.ORIGINATOR = this.ORIGINATOR();\n  _o.OBJECT_NAME = this.OBJECT_NAME();\n  _o.OBJECT_ID = this.OBJECT_ID();\n  _o.CENTER_NAME = this.CENTER_NAME();\n  _o.REF_FRAME = this.REF_FRAME();\n  _o.REF_FRAME_EPOCH = this.REF_FRAME_EPOCH();\n  _o.TIME_SYSTEM = this.TIME_SYSTEM();\n  _o.MEAN_ELEMENT_THEORY = this.MEAN_ELEMENT_THEORY();\n  _o.COMMENT = this.COMMENT();\n  _o.EPOCH = this.EPOCH();\n  _o.SEMI_MAJOR_AXIS = this.SEMI_MAJOR_AXIS();\n  _o.MEAN_MOTION = this.MEAN_MOTION();\n  _o.ECCENTRICITY = this.ECCENTRICITY();\n  _o.INCLINATION = this.INCLINATION();\n  _o.RA_OF_ASC_NODE = this.RA_OF_ASC_NODE();\n  _o.ARG_OF_PERICENTER = this.ARG_OF_PERICENTER();\n  _o.MEAN_ANOMALY = this.MEAN_ANOMALY();\n  _o.GM = this.GM();\n  _o.MASS = this.MASS();\n  _o.SOLAR_RAD_AREA = this.SOLAR_RAD_AREA();\n  _o.SOLAR_RAD_COEFF = this.SOLAR_RAD_COEFF();\n  _o.DRAG_AREA = this.DRAG_AREA();\n  _o.DRAG_COEFF = this.DRAG_COEFF();\n  _o.EPHEMERIS_TYPE = this.EPHEMERIS_TYPE();\n  _o.CLASSIFICATION_TYPE = this.CLASSIFICATION_TYPE();\n  _o.NORAD_CAT_ID = this.NORAD_CAT_ID();\n  _o.ELEMENT_SET_NO = this.ELEMENT_SET_NO();\n  _o.REV_AT_EPOCH = this.REV_AT_EPOCH();\n  _o.BSTAR = this.BSTAR();\n  _o.MEAN_MOTION_DOT = this.MEAN_MOTION_DOT();\n  _o.MEAN_MOTION_DDOT = this.MEAN_MOTION_DDOT();\n  _o.COV_REF_FRAME = this.COV_REF_FRAME();\n  _o.CX_X = this.CX_X();\n  _o.CY_X = this.CY_X();\n  _o.CY_Y = this.CY_Y();\n  _o.CZ_X = this.CZ_X();\n  _o.CZ_Y = this.CZ_Y();\n  _o.CZ_Z = this.CZ_Z();\n  _o.CX_DOT_X = this.CX_DOT_X();\n  _o.CX_DOT_Y = this.CX_DOT_Y();\n  _o.CX_DOT_Z = this.CX_DOT_Z();\n  _o.CX_DOT_X_DOT = this.CX_DOT_X_DOT();\n  _o.CY_DOT_X = this.CY_DOT_X();\n  _o.CY_DOT_Y = this.CY_DOT_Y();\n  _o.CY_DOT_Z = this.CY_DOT_Z();\n  _o.CY_DOT_X_DOT = this.CY_DOT_X_DOT();\n  _o.CY_DOT_Y_DOT = this.CY_DOT_Y_DOT();\n  _o.CZ_DOT_X = this.CZ_DOT_X();\n  _o.CZ_DOT_Y = this.CZ_DOT_Y();\n  _o.CZ_DOT_Z = this.CZ_DOT_Z();\n  _o.CZ_DOT_X_DOT = this.CZ_DOT_X_DOT();\n  _o.CZ_DOT_Y_DOT = this.CZ_DOT_Y_DOT();\n  _o.CZ_DOT_Z_DOT = this.CZ_DOT_Z_DOT();\n  _o.USER_DEFINED_BIP_0044_TYPE = this.USER_DEFINED_BIP_0044_TYPE();\n  _o.USER_DEFINED_OBJECT_DESIGNATOR = this.USER_DEFINED_OBJECT_DESIGNATOR();\n  _o.USER_DEFINED_EARTH_MODEL = this.USER_DEFINED_EARTH_MODEL();\n  _o.USER_DEFINED_EPOCH_TIMESTAMP = this.USER_DEFINED_EPOCH_TIMESTAMP();\n  _o.USER_DEFINED_MICROSECONDS = this.USER_DEFINED_MICROSECONDS();\n}\n}\n\nexport class OMMT {\nconstructor(\n  public CCSDS_OMM_VERS: number = 0.0,\n  public CREATION_DATE: string|Uint8Array|null = null,\n  public ORIGINATOR: string|Uint8Array|null = null,\n  public OBJECT_NAME: string|Uint8Array|null = null,\n  public OBJECT_ID: string|Uint8Array|null = null,\n  public CENTER_NAME: string|Uint8Array|null = null,\n  public REF_FRAME: referenceFrame = referenceFrame.TEME,\n  public REF_FRAME_EPOCH: string|Uint8Array|null = null,\n  public TIME_SYSTEM: timeSystem = timeSystem.UTC,\n  public MEAN_ELEMENT_THEORY: meanElementTheory = meanElementTheory.SGP4,\n  public COMMENT: string|Uint8Array|null = null,\n  public EPOCH: string|Uint8Array|null = null,\n  public SEMI_MAJOR_AXIS: number = 0.0,\n  public MEAN_MOTION: number = 0.0,\n  public ECCENTRICITY: number = 0.0,\n  public INCLINATION: number = 0.0,\n  public RA_OF_ASC_NODE: number = 0.0,\n  public ARG_OF_PERICENTER: number = 0.0,\n  public MEAN_ANOMALY: number = 0.0,\n  public GM: number = 0.0,\n  public MASS: number = 0.0,\n  public SOLAR_RAD_AREA: number = 0.0,\n  public SOLAR_RAD_COEFF: number = 0.0,\n  public DRAG_AREA: number = 0.0,\n  public DRAG_COEFF: number = 0.0,\n  public EPHEMERIS_TYPE: ephemerisType = ephemerisType.SGP4,\n  public CLASSIFICATION_TYPE: string|Uint8Array|null = null,\n  public NORAD_CAT_ID: number = 0,\n  public ELEMENT_SET_NO: number = 0,\n  public REV_AT_EPOCH: number = 0.0,\n  public BSTAR: number = 0.0,\n  public MEAN_MOTION_DOT: number = 0.0,\n  public MEAN_MOTION_DDOT: number = 0.0,\n  public COV_REF_FRAME: manCovRefFrame = manCovRefFrame.RSW,\n  public CX_X: number = 0.0,\n  public CY_X: number = 0.0,\n  public CY_Y: number = 0.0,\n  public CZ_X: number = 0.0,\n  public CZ_Y: number = 0.0,\n  public CZ_Z: number = 0.0,\n  public CX_DOT_X: number = 0.0,\n  public CX_DOT_Y: number = 0.0,\n  public CX_DOT_Z: number = 0.0,\n  public CX_DOT_X_DOT: number = 0.0,\n  public CY_DOT_X: number = 0.0,\n  public CY_DOT_Y: number = 0.0,\n  public CY_DOT_Z: number = 0.0,\n  public CY_DOT_X_DOT: number = 0.0,\n  public CY_DOT_Y_DOT: number = 0.0,\n  public CZ_DOT_X: number = 0.0,\n  public CZ_DOT_Y: number = 0.0,\n  public CZ_DOT_Z: number = 0.0,\n  public CZ_DOT_X_DOT: number = 0.0,\n  public CZ_DOT_Y_DOT: number = 0.0,\n  public CZ_DOT_Z_DOT: number = 0.0,\n  public USER_DEFINED_BIP_0044_TYPE: number = 0,\n  public USER_DEFINED_OBJECT_DESIGNATOR: string|Uint8Array|null = null,\n  public USER_DEFINED_EARTH_MODEL: string|Uint8Array|null = null,\n  public USER_DEFINED_EPOCH_TIMESTAMP: number = 0.0,\n  public USER_DEFINED_MICROSECONDS: number = 0.0\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const CREATION_DATE = (this.CREATION_DATE !== null ? builder.createString(this.CREATION_DATE!) : 0);\n  const ORIGINATOR = (this.ORIGINATOR !== null ? builder.createString(this.ORIGINATOR!) : 0);\n  const OBJECT_NAME = (this.OBJECT_NAME !== null ? builder.createString(this.OBJECT_NAME!) : 0);\n  const OBJECT_ID = (this.OBJECT_ID !== null ? builder.createString(this.OBJECT_ID!) : 0);\n  const CENTER_NAME = (this.CENTER_NAME !== null ? builder.createString(this.CENTER_NAME!) : 0);\n  const REF_FRAME_EPOCH = (this.REF_FRAME_EPOCH !== null ? builder.createString(this.REF_FRAME_EPOCH!) : 0);\n  const COMMENT = (this.COMMENT !== null ? builder.createString(this.COMMENT!) : 0);\n  const EPOCH = (this.EPOCH !== null ? builder.createString(this.EPOCH!) : 0);\n  const CLASSIFICATION_TYPE = (this.CLASSIFICATION_TYPE !== null ? builder.createString(this.CLASSIFICATION_TYPE!) : 0);\n  const USER_DEFINED_OBJECT_DESIGNATOR = (this.USER_DEFINED_OBJECT_DESIGNATOR !== null ? builder.createString(this.USER_DEFINED_OBJECT_DESIGNATOR!) : 0);\n  const USER_DEFINED_EARTH_MODEL = (this.USER_DEFINED_EARTH_MODEL !== null ? builder.createString(this.USER_DEFINED_EARTH_MODEL!) : 0);\n\n  return OMM.createOMM(builder,\n    this.CCSDS_OMM_VERS,\n    CREATION_DATE,\n    ORIGINATOR,\n    OBJECT_NAME,\n    OBJECT_ID,\n    CENTER_NAME,\n    this.REF_FRAME,\n    REF_FRAME_EPOCH,\n    this.TIME_SYSTEM,\n    this.MEAN_ELEMENT_THEORY,\n    COMMENT,\n    EPOCH,\n    this.SEMI_MAJOR_AXIS,\n    this.MEAN_MOTION,\n    this.ECCENTRICITY,\n    this.INCLINATION,\n    this.RA_OF_ASC_NODE,\n    this.ARG_OF_PERICENTER,\n    this.MEAN_ANOMALY,\n    this.GM,\n    this.MASS,\n    this.SOLAR_RAD_AREA,\n    this.SOLAR_RAD_COEFF,\n    this.DRAG_AREA,\n    this.DRAG_COEFF,\n    this.EPHEMERIS_TYPE,\n    CLASSIFICATION_TYPE,\n    this.NORAD_CAT_ID,\n    this.ELEMENT_SET_NO,\n    this.REV_AT_EPOCH,\n    this.BSTAR,\n    this.MEAN_MOTION_DOT,\n    this.MEAN_MOTION_DDOT,\n    this.COV_REF_FRAME,\n    this.CX_X,\n    this.CY_X,\n    this.CY_Y,\n    this.CZ_X,\n    this.CZ_Y,\n    this.CZ_Z,\n    this.CX_DOT_X,\n    this.CX_DOT_Y,\n    this.CX_DOT_Z,\n    this.CX_DOT_X_DOT,\n    this.CY_DOT_X,\n    this.CY_DOT_Y,\n    this.CY_DOT_Z,\n    this.CY_DOT_X_DOT,\n    this.CY_DOT_Y_DOT,\n    this.CZ_DOT_X,\n    this.CZ_DOT_Y,\n    this.CZ_DOT_Z,\n    this.CZ_DOT_X_DOT,\n    this.CZ_DOT_Y_DOT,\n    this.CZ_DOT_Z_DOT,\n    this.USER_DEFINED_BIP_0044_TYPE,\n    USER_DEFINED_OBJECT_DESIGNATOR,\n    USER_DEFINED_EARTH_MODEL,\n    this.USER_DEFINED_EPOCH_TIMESTAMP,\n    this.USER_DEFINED_MICROSECONDS\n  );\n}\n}\n", "// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { OMM, OMMT } from './OMM';\n\n\nexport class OMMCOLLECTION {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):OMMCOLLECTION {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsOMMCOLLECTION(bb:flatbuffers.ByteBuffer, obj?:OMMCOLLECTION):OMMCOLLECTION {\n  return (obj || new OMMCOLLECTION()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsOMMCOLLECTION(bb:flatbuffers.ByteBuffer, obj?:OMMCOLLECTION):OMMCOLLECTION {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new OMMCOLLECTION()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nRECORDS(index: number, obj?:OMM):OMM|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new OMM()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\nRECORDSLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startOMMCOLLECTION(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addRECORDS(builder:flatbuffers.Builder, RECORDSOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, RECORDSOffset, 0);\n}\n\nstatic createRECORDSVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startRECORDSVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic endOMMCOLLECTION(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createOMMCOLLECTION(builder:flatbuffers.Builder, RECORDSOffset:flatbuffers.Offset):flatbuffers.Offset {\n  OMMCOLLECTION.startOMMCOLLECTION(builder);\n  OMMCOLLECTION.addRECORDS(builder, RECORDSOffset);\n  return OMMCOLLECTION.endOMMCOLLECTION(builder);\n}\n\nunpack(): OMMCOLLECTIONT {\n  return new OMMCOLLECTIONT(\n    this.bb!.createObjList(this.RECORDS.bind(this), this.RECORDSLength())\n  );\n}\n\n\nunpackTo(_o: OMMCOLLECTIONT): void {\n  _o.RECORDS = this.bb!.createObjList(this.RECORDS.bind(this), this.RECORDSLength());\n}\n}\n\nexport class OMMCOLLECTIONT {\nconstructor(\n  public RECORDS: (OMMT)[] = []\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const RECORDS = OMMCOLLECTION.createRECORDSVector(builder, builder.createObjectOffsetList(this.RECORDS));\n\n  return OMMCOLLECTION.createOMMCOLLECTION(builder,\n    RECORDS\n  );\n}\n}\n", "export default [\n    \"short\", \"ushort\",\n    \"int\", \"uint\", \"float\",\n    \"long\", \"ulong\", \"double\",\n    \"number\",\n    \"integer\"];", "import flatbufferScalartypes from \"./flatbuffer.scalartypes\";\nconst useAsNumber = [\"#/definitions/ephemerisType\"]; //Hack until we can formalize fields between each format\n\nconst numCheck = (schema: any, pkey: string, pval: any) => {\n    let sD = schema.properties[pkey];\n    let pF = parseFloat(pval);\n    let isZero = pF === 0;\n    return ~flatbufferScalartypes.indexOf(sD?.type) || useAsNumber.indexOf(sD?.$ref) > -1 ? isZero ? pF : pF || null : pval ?? null;\n};\nexport default numCheck", "import { parse as csvparse } from 'csv-parse/browser/esm/sync';\nimport * as flatbuffers from \"flatbuffers\";\nimport { SATCATCOLLECTION as _SATCATCOLLECTION, SATCATCOLLECTIONT as SATCATCOLLECTION } from \"@/lib/SAT/SATCATCOLLECTION\";\nimport { SATCATT as SAT } from \"@/lib/SAT/SATCAT\";\nimport numCheck from \"./numCheck\";\n\nconst json = async (input: string | Array<SAT>, schema: any): Promise<SATCATCOLLECTION> => {\n  if (typeof input === \"string\") {\n    input = JSON.parse(input)\n  };\n\n  let resultsSATCATCOLLECTION = new SATCATCOLLECTION;\n  for (let i = 0; i < input.length; i++) {\n    let newSAT: any = new SAT();\n    for (let p in input[i] as any) {\n      let inputSat: any = input[i];\n      if (newSAT.hasOwnProperty(p)) {\n        newSAT[p] = numCheck(schema.definitions.SATCAT, p, inputSat[p]);\n      }\n    }\n    resultsSATCATCOLLECTION.RECORDS.push(newSAT);\n  };\n  return resultsSATCATCOLLECTION;\n};\n\nconst csv = async (input: any, schema: any): Promise<SATCATCOLLECTION> => {\n  let resultsSATCATCOLLECTION = new SATCATCOLLECTION;\n  let intermediateResults = (await csvparse(input, {\n    columns: true,\n    skip_empty_lines: true\n  }));\n  intermediateResults.forEach((row: any) => {\n    let newSAT: SAT = new SAT();\n    for (let prop in row) {\n      if (newSAT.hasOwnProperty(prop)) {\n        //@ts-ignore\n        newSAT[prop] = numCheck(schema.definitions.SATCAT, prop, row[prop]);\n      }\n    }\n    resultsSATCATCOLLECTION.RECORDS.push(newSAT);\n  });\n  return resultsSATCATCOLLECTION;\n};\n\n/*\nconst txt = (input: any): Promise<any> => {\n  return new Promise((resolve) => {\n    let isRStream = input.hasOwnProperty(\"_readableState\");\n    input = isRStream\n      ? input\n      : {\n        data: input,\n        init: false,\n        async read() {\n          if (!this.init) {\n            this.init = true;\n            return \"\";\n          } else {\n            return { value: this.data, done: true };\n          }\n        },\n      };\n    let satCat = new satcat(input);\n    let started = false;\n    const init = async () => {\n      if (started) return;\n      started = true;\n      let stop = await satCat.readLines();\n      if (!stop) return;\n      let resultsSATCATCOLLECTION = new SATCATCOLLECTION;\n      resultsSATCATCOLLECTION.RECORDS = satCat.lines.map(satCat.format.CAT) as Array<any>;\n      resolve(resultsSATCATCOLLECTION);\n    };\n    if (!isRStream) {\n      init();\n    } else {\n      input.on(\"readable\", init);\n    }\n  });\n};\n*/\n\nconst fbs = async (input: Uint8Array): Promise<SATCATCOLLECTION> => {\n  let satCollection = new SATCATCOLLECTION;\n  _SATCATCOLLECTION.getRootAsSATCATCOLLECTION(new flatbuffers.ByteBuffer(input)).unpackTo(satCollection);\n  return satCollection;\n}\nexport { numCheck, json, csv, /*txt,*/ fbs };\n", "// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { dataStatusCode } from './dataStatusCode';\nimport { objectType } from './objectType';\nimport { opsStatusCode } from './opsStatusCode';\nimport { orbitType } from './orbitType';\n\n\nexport class SATCAT {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):SATCAT {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsSATCAT(bb:flatbuffers.ByteBuffer, obj?:SATCAT):SATCAT {\n  return (obj || new SATCAT()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsSATCAT(bb:flatbuffers.ByteBuffer, obj?:SATCAT):SATCAT {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new SATCAT()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {\n  return bb.__has_identifier('$SAT');\n}\n\nOBJECT_NAME():string|null\nOBJECT_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nOBJECT_NAME(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nOBJECT_ID():string|null\nOBJECT_ID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nOBJECT_ID(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nNORAD_CAT_ID():number {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n}\n\nOBJECT_TYPE():objectType {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : objectType.UNKNOWN;\n}\n\nOPS_STATUS_CODE():opsStatusCode {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : opsStatusCode.UNKNOWN;\n}\n\nOWNER():string|null\nOWNER(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nOWNER(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nLAUNCH_DATE():string|null\nLAUNCH_DATE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nLAUNCH_DATE(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nLAUNCH_SITE():string|null\nLAUNCH_SITE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nLAUNCH_SITE(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nDECAY_DATE():string|null\nDECAY_DATE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nDECAY_DATE(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nPERIOD():number {\n  const offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nINCLINATION():number {\n  const offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nAPOGEE():number {\n  const offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nPERIGEE():number {\n  const offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nRCS():number {\n  const offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nDATA_STATUS_CODE():dataStatusCode {\n  const offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : dataStatusCode.NO_CURRENT_ELEMENTS;\n}\n\nORBIT_CENTER():string|null\nORBIT_CENTER(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nORBIT_CENTER(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nORBIT_TYPE():orbitType {\n  const offset = this.bb!.__offset(this.bb_pos, 36);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : orbitType.ORBIT;\n}\n\nstatic startSATCAT(builder:flatbuffers.Builder) {\n  builder.startObject(17);\n}\n\nstatic addOBJECT_NAME(builder:flatbuffers.Builder, OBJECT_NAMEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, OBJECT_NAMEOffset, 0);\n}\n\nstatic addOBJECT_ID(builder:flatbuffers.Builder, OBJECT_IDOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, OBJECT_IDOffset, 0);\n}\n\nstatic addNORAD_CAT_ID(builder:flatbuffers.Builder, NORAD_CAT_ID:number) {\n  builder.addFieldInt32(2, NORAD_CAT_ID, 0);\n}\n\nstatic addOBJECT_TYPE(builder:flatbuffers.Builder, OBJECT_TYPE:objectType) {\n  builder.addFieldInt8(3, OBJECT_TYPE, objectType.UNKNOWN);\n}\n\nstatic addOPS_STATUS_CODE(builder:flatbuffers.Builder, OPS_STATUS_CODE:opsStatusCode) {\n  builder.addFieldInt8(4, OPS_STATUS_CODE, opsStatusCode.UNKNOWN);\n}\n\nstatic addOWNER(builder:flatbuffers.Builder, OWNEROffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, OWNEROffset, 0);\n}\n\nstatic addLAUNCH_DATE(builder:flatbuffers.Builder, LAUNCH_DATEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, LAUNCH_DATEOffset, 0);\n}\n\nstatic addLAUNCH_SITE(builder:flatbuffers.Builder, LAUNCH_SITEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(7, LAUNCH_SITEOffset, 0);\n}\n\nstatic addDECAY_DATE(builder:flatbuffers.Builder, DECAY_DATEOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(8, DECAY_DATEOffset, 0);\n}\n\nstatic addPERIOD(builder:flatbuffers.Builder, PERIOD:number) {\n  builder.addFieldFloat64(9, PERIOD, 0.0);\n}\n\nstatic addINCLINATION(builder:flatbuffers.Builder, INCLINATION:number) {\n  builder.addFieldFloat64(10, INCLINATION, 0.0);\n}\n\nstatic addAPOGEE(builder:flatbuffers.Builder, APOGEE:number) {\n  builder.addFieldFloat64(11, APOGEE, 0.0);\n}\n\nstatic addPERIGEE(builder:flatbuffers.Builder, PERIGEE:number) {\n  builder.addFieldFloat64(12, PERIGEE, 0.0);\n}\n\nstatic addRCS(builder:flatbuffers.Builder, RCS:number) {\n  builder.addFieldFloat64(13, RCS, 0.0);\n}\n\nstatic addDATA_STATUS_CODE(builder:flatbuffers.Builder, DATA_STATUS_CODE:dataStatusCode) {\n  builder.addFieldInt8(14, DATA_STATUS_CODE, dataStatusCode.NO_CURRENT_ELEMENTS);\n}\n\nstatic addORBIT_CENTER(builder:flatbuffers.Builder, ORBIT_CENTEROffset:flatbuffers.Offset) {\n  builder.addFieldOffset(15, ORBIT_CENTEROffset, 0);\n}\n\nstatic addORBIT_TYPE(builder:flatbuffers.Builder, ORBIT_TYPE:orbitType) {\n  builder.addFieldInt8(16, ORBIT_TYPE, orbitType.ORBIT);\n}\n\nstatic endSATCAT(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic finishSATCATBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, '$SAT');\n}\n\nstatic finishSizePrefixedSATCATBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, '$SAT', true);\n}\n\nstatic createSATCAT(builder:flatbuffers.Builder, OBJECT_NAMEOffset:flatbuffers.Offset, OBJECT_IDOffset:flatbuffers.Offset, NORAD_CAT_ID:number, OBJECT_TYPE:objectType, OPS_STATUS_CODE:opsStatusCode, OWNEROffset:flatbuffers.Offset, LAUNCH_DATEOffset:flatbuffers.Offset, LAUNCH_SITEOffset:flatbuffers.Offset, DECAY_DATEOffset:flatbuffers.Offset, PERIOD:number, INCLINATION:number, APOGEE:number, PERIGEE:number, RCS:number, DATA_STATUS_CODE:dataStatusCode, ORBIT_CENTEROffset:flatbuffers.Offset, ORBIT_TYPE:orbitType):flatbuffers.Offset {\n  SATCAT.startSATCAT(builder);\n  SATCAT.addOBJECT_NAME(builder, OBJECT_NAMEOffset);\n  SATCAT.addOBJECT_ID(builder, OBJECT_IDOffset);\n  SATCAT.addNORAD_CAT_ID(builder, NORAD_CAT_ID);\n  SATCAT.addOBJECT_TYPE(builder, OBJECT_TYPE);\n  SATCAT.addOPS_STATUS_CODE(builder, OPS_STATUS_CODE);\n  SATCAT.addOWNER(builder, OWNEROffset);\n  SATCAT.addLAUNCH_DATE(builder, LAUNCH_DATEOffset);\n  SATCAT.addLAUNCH_SITE(builder, LAUNCH_SITEOffset);\n  SATCAT.addDECAY_DATE(builder, DECAY_DATEOffset);\n  SATCAT.addPERIOD(builder, PERIOD);\n  SATCAT.addINCLINATION(builder, INCLINATION);\n  SATCAT.addAPOGEE(builder, APOGEE);\n  SATCAT.addPERIGEE(builder, PERIGEE);\n  SATCAT.addRCS(builder, RCS);\n  SATCAT.addDATA_STATUS_CODE(builder, DATA_STATUS_CODE);\n  SATCAT.addORBIT_CENTER(builder, ORBIT_CENTEROffset);\n  SATCAT.addORBIT_TYPE(builder, ORBIT_TYPE);\n  return SATCAT.endSATCAT(builder);\n}\n\nunpack(): SATCATT {\n  return new SATCATT(\n    this.OBJECT_NAME(),\n    this.OBJECT_ID(),\n    this.NORAD_CAT_ID(),\n    this.OBJECT_TYPE(),\n    this.OPS_STATUS_CODE(),\n    this.OWNER(),\n    this.LAUNCH_DATE(),\n    this.LAUNCH_SITE(),\n    this.DECAY_DATE(),\n    this.PERIOD(),\n    this.INCLINATION(),\n    this.APOGEE(),\n    this.PERIGEE(),\n    this.RCS(),\n    this.DATA_STATUS_CODE(),\n    this.ORBIT_CENTER(),\n    this.ORBIT_TYPE()\n  );\n}\n\n\nunpackTo(_o: SATCATT): void {\n  _o.OBJECT_NAME = this.OBJECT_NAME();\n  _o.OBJECT_ID = this.OBJECT_ID();\n  _o.NORAD_CAT_ID = this.NORAD_CAT_ID();\n  _o.OBJECT_TYPE = this.OBJECT_TYPE();\n  _o.OPS_STATUS_CODE = this.OPS_STATUS_CODE();\n  _o.OWNER = this.OWNER();\n  _o.LAUNCH_DATE = this.LAUNCH_DATE();\n  _o.LAUNCH_SITE = this.LAUNCH_SITE();\n  _o.DECAY_DATE = this.DECAY_DATE();\n  _o.PERIOD = this.PERIOD();\n  _o.INCLINATION = this.INCLINATION();\n  _o.APOGEE = this.APOGEE();\n  _o.PERIGEE = this.PERIGEE();\n  _o.RCS = this.RCS();\n  _o.DATA_STATUS_CODE = this.DATA_STATUS_CODE();\n  _o.ORBIT_CENTER = this.ORBIT_CENTER();\n  _o.ORBIT_TYPE = this.ORBIT_TYPE();\n}\n}\n\nexport class SATCATT {\nconstructor(\n  public OBJECT_NAME: string|Uint8Array|null = null,\n  public OBJECT_ID: string|Uint8Array|null = null,\n  public NORAD_CAT_ID: number = 0,\n  public OBJECT_TYPE: objectType = objectType.UNKNOWN,\n  public OPS_STATUS_CODE: opsStatusCode = opsStatusCode.UNKNOWN,\n  public OWNER: string|Uint8Array|null = null,\n  public LAUNCH_DATE: string|Uint8Array|null = null,\n  public LAUNCH_SITE: string|Uint8Array|null = null,\n  public DECAY_DATE: string|Uint8Array|null = null,\n  public PERIOD: number = 0.0,\n  public INCLINATION: number = 0.0,\n  public APOGEE: number = 0.0,\n  public PERIGEE: number = 0.0,\n  public RCS: number = 0.0,\n  public DATA_STATUS_CODE: dataStatusCode = dataStatusCode.NO_CURRENT_ELEMENTS,\n  public ORBIT_CENTER: string|Uint8Array|null = null,\n  public ORBIT_TYPE: orbitType = orbitType.ORBIT\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const OBJECT_NAME = (this.OBJECT_NAME !== null ? builder.createString(this.OBJECT_NAME!) : 0);\n  const OBJECT_ID = (this.OBJECT_ID !== null ? builder.createString(this.OBJECT_ID!) : 0);\n  const OWNER = (this.OWNER !== null ? builder.createString(this.OWNER!) : 0);\n  const LAUNCH_DATE = (this.LAUNCH_DATE !== null ? builder.createString(this.LAUNCH_DATE!) : 0);\n  const LAUNCH_SITE = (this.LAUNCH_SITE !== null ? builder.createString(this.LAUNCH_SITE!) : 0);\n  const DECAY_DATE = (this.DECAY_DATE !== null ? builder.createString(this.DECAY_DATE!) : 0);\n  const ORBIT_CENTER = (this.ORBIT_CENTER !== null ? builder.createString(this.ORBIT_CENTER!) : 0);\n\n  return SATCAT.createSATCAT(builder,\n    OBJECT_NAME,\n    OBJECT_ID,\n    this.NORAD_CAT_ID,\n    this.OBJECT_TYPE,\n    this.OPS_STATUS_CODE,\n    OWNER,\n    LAUNCH_DATE,\n    LAUNCH_SITE,\n    DECAY_DATE,\n    this.PERIOD,\n    this.INCLINATION,\n    this.APOGEE,\n    this.PERIGEE,\n    this.RCS,\n    this.DATA_STATUS_CODE,\n    ORBIT_CENTER,\n    this.ORBIT_TYPE\n  );\n}\n}\n", "// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { SATCAT, SATCATT } from './SATCAT';\n\n\nexport class SATCATCOLLECTION {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):SATCATCOLLECTION {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsSATCATCOLLECTION(bb:flatbuffers.ByteBuffer, obj?:SATCATCOLLECTION):SATCATCOLLECTION {\n  return (obj || new SATCATCOLLECTION()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsSATCATCOLLECTION(bb:flatbuffers.ByteBuffer, obj?:SATCATCOLLECTION):SATCATCOLLECTION {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new SATCATCOLLECTION()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nRECORDS(index: number, obj?:SATCAT):SATCAT|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new SATCAT()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\nRECORDSLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startSATCATCOLLECTION(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addRECORDS(builder:flatbuffers.Builder, RECORDSOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, RECORDSOffset, 0);\n}\n\nstatic createRECORDSVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startRECORDSVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic endSATCATCOLLECTION(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createSATCATCOLLECTION(builder:flatbuffers.Builder, RECORDSOffset:flatbuffers.Offset):flatbuffers.Offset {\n  SATCATCOLLECTION.startSATCATCOLLECTION(builder);\n  SATCATCOLLECTION.addRECORDS(builder, RECORDSOffset);\n  return SATCATCOLLECTION.endSATCATCOLLECTION(builder);\n}\n\nunpack(): SATCATCOLLECTIONT {\n  return new SATCATCOLLECTIONT(\n    this.bb!.createObjList(this.RECORDS.bind(this), this.RECORDSLength())\n  );\n}\n\n\nunpackTo(_o: SATCATCOLLECTIONT): void {\n  _o.RECORDS = this.bb!.createObjList(this.RECORDS.bind(this), this.RECORDSLength());\n}\n}\n\nexport class SATCATCOLLECTIONT {\nconstructor(\n  public RECORDS: (SATCATT)[] = []\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const RECORDS = SATCATCOLLECTION.createRECORDSVector(builder, builder.createObjectOffsetList(this.RECORDS));\n\n  return SATCATCOLLECTION.createSATCATCOLLECTION(builder,\n    RECORDS\n  );\n}\n}\n", "export default {\n    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\n    \"definitions\": {\n        \"referenceFrame\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"EME2000\",\n                \"GCRF\",\n                \"GRC\",\n                \"ICRF\",\n                \"ITRF2000\",\n                \"ITRF93\",\n                \"ITRF97\",\n                \"MCI\",\n                \"TDR\",\n                \"TEME\",\n                \"TOD\"\n            ]\n        },\n        \"ephemerisType\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"SGP\",\n                \"SGP4\",\n                \"SDP4\",\n                \"SGP8\",\n                \"SDP8\"\n            ]\n        },\n        \"timeSystem\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"GMST\",\n                \"GPS\",\n                \"MET\",\n                \"MRT\",\n                \"SCLK\",\n                \"TAI\",\n                \"TCB\",\n                \"TDB\",\n                \"TCG\",\n                \"TT\",\n                \"UT1\",\n                \"UTC\"\n            ]\n        },\n        \"meanElementTheory\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"SGP4\",\n                \"DSST\",\n                \"USM\"\n            ]\n        },\n        \"manCovRefFrame\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"RSW\",\n                \"RTN\",\n                \"TNW\"\n            ]\n        },\n        \"OMM\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"CCSDS_OMM_VERS\": {\n                    \"type\": \"number\"\n                },\n                \"CREATION_DATE\": {\n                    \"type\": \"string\"\n                },\n                \"ORIGINATOR\": {\n                    \"type\": \"string\"\n                },\n                \"OBJECT_NAME\": {\n                    \"type\": \"string\"\n                },\n                \"OBJECT_ID\": {\n                    \"type\": \"string\"\n                },\n                \"CENTER_NAME\": {\n                    \"type\": \"string\"\n                },\n                \"REF_FRAME\": {\n                    \"$ref\": \"#/definitions/referenceFrame\"\n                },\n                \"REF_FRAME_EPOCH\": {\n                    \"type\": \"string\"\n                },\n                \"TIME_SYSTEM\": {\n                    \"$ref\": \"#/definitions/timeSystem\"\n                },\n                \"MEAN_ELEMENT_THEORY\": {\n                    \"$ref\": \"#/definitions/meanElementTheory\"\n                },\n                \"COMMENT\": {\n                    \"type\": \"string\"\n                },\n                \"EPOCH\": {\n                    \"type\": \"string\"\n                },\n                \"SEMI_MAJOR_AXIS\": {\n                    \"type\": \"number\"\n                },\n                \"MEAN_MOTION\": {\n                    \"type\": \"number\"\n                },\n                \"ECCENTRICITY\": {\n                    \"type\": \"number\"\n                },\n                \"INCLINATION\": {\n                    \"type\": \"number\"\n                },\n                \"RA_OF_ASC_NODE\": {\n                    \"type\": \"number\"\n                },\n                \"ARG_OF_PERICENTER\": {\n                    \"type\": \"number\"\n                },\n                \"MEAN_ANOMALY\": {\n                    \"type\": \"number\"\n                },\n                \"GM\": {\n                    \"type\": \"number\"\n                },\n                \"MASS\": {\n                    \"type\": \"number\"\n                },\n                \"SOLAR_RAD_AREA\": {\n                    \"type\": \"number\"\n                },\n                \"SOLAR_RAD_COEFF\": {\n                    \"type\": \"number\"\n                },\n                \"DRAG_AREA\": {\n                    \"type\": \"number\"\n                },\n                \"DRAG_COEFF\": {\n                    \"type\": \"number\"\n                },\n                \"EPHEMERIS_TYPE\": {\n                    \"$ref\": \"#/definitions/ephemerisType\"\n                },\n                \"CLASSIFICATION_TYPE\": {\n                    \"type\": \"string\"\n                },\n                \"NORAD_CAT_ID\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 4294967295\n                },\n                \"ELEMENT_SET_NO\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 4294967295\n                },\n                \"REV_AT_EPOCH\": {\n                    \"type\": \"number\"\n                },\n                \"BSTAR\": {\n                    \"type\": \"number\"\n                },\n                \"MEAN_MOTION_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"MEAN_MOTION_DDOT\": {\n                    \"type\": \"number\"\n                },\n                \"COV_REF_FRAME\": {\n                    \"$ref\": \"#/definitions/manCovRefFrame\"\n                },\n                \"CX_X\": {\n                    \"type\": \"number\"\n                },\n                \"CY_X\": {\n                    \"type\": \"number\"\n                },\n                \"CY_Y\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_X\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_Y\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_Z\": {\n                    \"type\": \"number\"\n                },\n                \"CX_DOT_X\": {\n                    \"type\": \"number\"\n                },\n                \"CX_DOT_Y\": {\n                    \"type\": \"number\"\n                },\n                \"CX_DOT_Z\": {\n                    \"type\": \"number\"\n                },\n                \"CX_DOT_X_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"CY_DOT_X\": {\n                    \"type\": \"number\"\n                },\n                \"CY_DOT_Y\": {\n                    \"type\": \"number\"\n                },\n                \"CY_DOT_Z\": {\n                    \"type\": \"number\"\n                },\n                \"CY_DOT_X_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"CY_DOT_Y_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_DOT_X\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_DOT_Y\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_DOT_Z\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_DOT_X_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_DOT_Y_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"CZ_DOT_Z_DOT\": {\n                    \"type\": \"number\"\n                },\n                \"USER_DEFINED_BIP_0044_TYPE\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 4294967295\n                },\n                \"USER_DEFINED_OBJECT_DESIGNATOR\": {\n                    \"type\": \"string\"\n                },\n                \"USER_DEFINED_EARTH_MODEL\": {\n                    \"type\": \"string\"\n                },\n                \"USER_DEFINED_EPOCH_TIMESTAMP\": {\n                    \"type\": \"number\"\n                },\n                \"USER_DEFINED_MICROSECONDS\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"additionalProperties\": false\n        },\n        \"MPE\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"MEAN_MOTION\": {\n                    \"type\": \"number\"\n                },\n                \"ECCENTRICITY\": {\n                    \"type\": \"number\"\n                },\n                \"INCLINATION\": {\n                    \"type\": \"number\"\n                },\n                \"RA_OF_ASC_NODE\": {\n                    \"type\": \"number\"\n                },\n                \"ARG_OF_PERICENTER\": {\n                    \"type\": \"number\"\n                },\n                \"MEAN_ANOMALY\": {\n                    \"type\": \"number\"\n                },\n                \"NORAD_CAT_ID\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 4294967295\n                },\n                \"BSTAR\": {\n                    \"type\": \"number\"\n                },\n                \"USER_DEFINED_EPOCH_TIMESTAMP\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"additionalProperties\": false\n        },\n        \"OMMCOLLECTION\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"RECORDS\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/OMM\"\n                    }\n                }\n            },\n            \"additionalProperties\": false\n        },\n        \"MPECOLLECTION\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"RECORDS\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MPE\"\n                    }\n                }\n            },\n            \"additionalProperties\": false\n        }\n    },\n    \"$ref\": \"#/definitions/OMM\"\n}", "export default {\n    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\n    \"definitions\": {\n        \"objectType\": {\n            \"type\": \"string\",\n            \"enum\": [\"PAYLOAD\", \"ROCKET_BODY\", \"DEBRIS\", \"UNKNOWN\"]\n        },\n        \"opsStatusCode\": {\n            \"type\": \"string\",\n            \"enum\": [\"OPERATIONAL\", \"NONOPERATIONAL\", \"PARTIALLY_OPERATIONAL\", \"BACKUP_STANDBY\", \"SPARE\", \"EXTENDED_MISSION\", \"DECAYED\", \"UNKNOWN\"]\n        },\n        \"dataStatusCode\": {\n            \"type\": \"string\",\n            \"enum\": [\"NO_CURRENT_ELEMENTS\", \"NO_INITIAL_ELEMENTS\", \"NO_ELEMENTS_AVAILABLE\", \"OK\"]\n        },\n        \"orbitType\": {\n            \"type\": \"string\",\n            \"enum\": [\"ORBIT\", \"LANDING\", \"IMPACT\", \"DOCKED\", \"ROUNDTRIP\"]\n        },\n        \"massType\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRY\", \"WET\"]\n        },\n        \"SATCAT\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"OBJECT_NAME\": {\n                    \"type\": \"string\"\n                },\n                \"OBJECT_ID\": {\n                    \"type\": \"string\"\n                },\n                \"NORAD_CAT_ID\": {\n                    \"type\": \"integer\", \"minimum\": 0, \"maximum\": 4294967295\n                },\n                \"OBJECT_TYPE\": {\n                    \"$ref\": \"#/definitions/objectType\"\n                },\n                \"OPS_STATUS_CODE\": {\n                    \"$ref\": \"#/definitions/opsStatusCode\"\n                },\n                \"OWNER\": {\n                    \"type\": \"string\"\n                },\n                \"LAUNCH_DATE\": {\n                    \"type\": \"string\"\n                },\n                \"LAUNCH_SITE\": {\n                    \"type\": \"string\"\n                },\n                \"DECAY_DATE\": {\n                    \"type\": \"string\"\n                },\n                \"PERIOD\": {\n                    \"type\": \"number\"\n                },\n                \"INCLINATION\": {\n                    \"type\": \"number\"\n                },\n                \"APOGEE\": {\n                    \"type\": \"number\"\n                },\n                \"PERIGEE\": {\n                    \"type\": \"number\"\n                },\n                \"RCS\": {\n                    \"type\": \"number\"\n                },\n                \"DATA_STATUS_CODE\": {\n                    \"$ref\": \"#/definitions/dataStatusCode\"\n                },\n                \"ORBIT_CENTER\": {\n                    \"type\": \"string\"\n                },\n                \"ORBIT_TYPE\": {\n                    \"$ref\": \"#/definitions/orbitType\"\n                }\n            },\n            \"additionalProperties\": false\n        },\n        \"PAYLOAD\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"OBJECT_ID\": {\n                    \"type\": \"string\"\n                },\n                \"OBJECT_NAME\": {\n                    \"type\": \"string\"\n                },\n                \"DEPLOYMENT_DATE\": {\n                    \"type\": \"string\"\n                },\n                \"MANEUVERABLE\": {\n                    \"type\": \"boolean\"\n                },\n                \"SIZE\": {\n                    \"type\": \"number\"\n                },\n                \"MASS\": {\n                    \"type\": \"number\"\n                },\n                \"MASS_TYPE\": {\n                    \"$ref\": \"#/definitions/massType\"\n                }\n            },\n            \"additionalProperties\": false\n        },\n        \"SATCATCOLLECTION\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"RECORDS\": {\n                    \"type\": \"array\", \"items\": { \"$ref\": \"#/definitions/SATCAT\" }\n                }\n            },\n            \"additionalProperties\": false\n        }\n    },\n    \"$ref\": \"#/definitions/SATCAT\"\n}\n", "import { LegacyFormat } from \"./lib/legacyformat.enum\";\nimport { SerializationFormat } from \"./lib/serialization.enum\";\nimport * as omm from \"@/lib/parsers/omm.converter\";\nimport * as sat from \"@/lib/parsers/sat.converter\";\nimport ommSchema from \"@/lib/OMM/omm.schema\";\nimport satSchema from \"@/lib/SAT/sat.schema\";\nimport { OMMCOLLECTIONT as OMMCOLLECTION } from \"./lib/OMM/OMMCOLLECTION\";\nimport { SATCATCOLLECTIONT as SATCATCOLLECTION } from \"./lib/SAT/SATCATCOLLECTION\";\nimport * as flatbuffers from \"flatbuffers\";\n\ntype KVI = {\n  [key: string]: any\n};\n\nexport const parse = async (\n  data: any,\n  format: LegacyFormat,\n  serialization: SerializationFormat,\n  resultSerialization: SerializationFormat.json | SerializationFormat.fbs = SerializationFormat.json\n): Promise<any> => {\n  let sFormat: string = SerializationFormat[serialization];\n  if (format === LegacyFormat.TLE) {\n    let parser: KVI = omm;\n    let ommCollection: OMMCOLLECTION = await parser[sFormat](data, ommSchema);\n    if (resultSerialization === SerializationFormat.fbs) {\n      let flatBufferBuilder = new flatbuffers.Builder(1);\n      flatBufferBuilder.finish(ommCollection.pack(flatBufferBuilder));\n      return flatBufferBuilder.asUint8Array();\n    }\n    return ommCollection;\n  } else if (format === LegacyFormat.SATCAT) {\n    let parser: KVI = sat;\n\n    let satCollection: SATCATCOLLECTION = await parser[sFormat](data, satSchema);\n    if (resultSerialization === SerializationFormat.fbs) {\n      let flatBufferBuilder = new flatbuffers.Builder(1);\n      flatBufferBuilder.finish(satCollection.pack(flatBufferBuilder));\n      return flatBufferBuilder.asUint8Array();\n    }\n    return satCollection;\n  }\n};\n\nexport const schemas: KVI = {\n  OMM: ommSchema,\n  SAT: satSchema\n};\n\nconst version = \"a6e8f29b-1669-11ac-8dff-abb4448b34d0\";\n\nexport { LegacyFormat, SerializationFormat, version };"],
  "mappings": "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SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,QAAQ,OAAI,SAAS,OAAI,QAAQ,OAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,QAAQ,OAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,QAAQ,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,QAAQ,OAAI,SAAS,OAAI,OAAO,OAAI,QAAQ,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,QAAQ,OAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,QAAQ,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,QAAQ,OAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,QAAQ,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,QAAQ,OAAI,SAAS,OAAI,OAAO,OAAI,QAAQ,OAAI,UAAU,OAAI,WAAW,OAAI,UAAU,OAAI,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WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,QAAQ,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,SAAS,SAAI,SAAS,SAAI,UAAU,SAAI,SAAS,SAAI,SAAS,SAAI,WAAW,SAAI,SAAS,SAAI,QAAQ,SAAI,QAAQ,SAAI,QAAQ,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,WAAW,SAAI,WAAW,SAAI,WAAW,SAAI,WAAW,SAAI,WAAW,SAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,YAAY,OAAI,SAAS,OAAI,QAAQ,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,OAAO,OAAI,OAAO,OAAI,OAAO,OAAI,YAAY,OAAI,OAAO,OAAI,QAAQ,OAAI,UAAU,OAAI,QAAQ,OAAI,YAAY,OAAI,QAAQ,OAAI,QAAQ,OAAI,QAAQ,OAAI,UAAU,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,YAAY,OAAI,SAAS,OAAI,QAAQ,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,OAAO,OAAI,OAAO,OAAI,OAAO,OAAI,YAAY,OAAI,OAAO,OAAI,QAAQ,OAAI,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",
  "names": ["require_bignumber", "__commonJSMin", "exports", "module", "globalObject", "BigNumber", "isNumeric", "mathceil", "mathfloor", "bignumberError", "tooManyDigits", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "POWS_TEN", "SQRT_BASE", "MAX", "clone", "configObject", "div", "convertBase", "parseNumeric", "P", "ONE", "DECIMAL_PLACES", "ROUNDING_MODE", "TO_EXP_NEG", "TO_EXP_POS", "MIN_EXP", "MAX_EXP", "CRYPTO", "MODULO_MODE", "POW_PRECISION", "FORMAT", "ALPHABET", "alphabetHasNormalDecimalDigits", "v", "b", "alphabet", "c", "caseChanged", "e", "i", "isNum", "len", "str", "x", "intCheck", "round", "obj", "p", "n", "s", "out", "maxOrMin", "pow2_53", "random53bitInt", "dp", "a", "k", "rand", "args", "sum", "decimal", "toBaseOut", "baseIn", "baseOut", "j", "arr", "arrL", "sign", "callerIsToString", "r", "xc", "y", "rm", "toFixedPoint", "coeffToString", "multiply", "base", "m", "temp", "xlo", "xhi", "carry", "klo", "khi", "compare", "aL", "bL", "cmp", "subtract", "more", "prod", "prodL", "q", "qc", "rem", "remL", "rem0", "xi", "xL", "yc0", "yL", "yz", "yc", "bitFloor", "format", "id", "c0", "ne", "toExponential", "method", "normalise", "basePrefix", "dotAfter", "dotBefore", "isInfinityOrNaN", "whitespaceOrPlus", "p1", "p2", "sd", "d", "ni", "rd", "pows10", "valueOf", "half", "isModExp", "nIsBig", "nIsNeg", "nIsOdd", "isOdd", "t", "xLTy", "xe", "ye", "xcL", "ycL", "ylo", "yhi", "zc", "sqrtBase", "rep", "g1", "g2", "groupSeparator", "intPart", "fractionPart", "isNeg", "intDigits", "md", "d0", "d1", "d2", "exp", "n0", "n1", "z", "l", "min", "max", "name", "zs", "require_named_references", "__commonJSMin", "exports", "require_numeric_unicode_map", "__commonJSMin", "exports", "require_surrogate_pairs", "__commonJSMin", "exports", "astralCodePoint", "input", "position", "require_lib", "__commonJSMin", "exports", "__assign", "t", "s", "i", "n", "p", "named_references_1", "numeric_unicode_map_1", "surrogate_pairs_1", "allNamedReferences", "encodeRegExps", "defaultEncodeOptions", "encode", "text", "_a", "_b", "_c", "mode", "_d", "numeric", "_e", "level", "encodeRegExp", "references", "isHex", "result_1", "code_1", "defaultDecodeOptions", "strict", "attribute", "baseDecodeRegExps", "decodeRegExps", "fromCharCode", "outOfBoundsChar", "defaultDecodeEntityOptions", "decodeEntity", "entity", "decodeEntityLastChar_1", "decodeResultByReference_1", "decodeSecondChar_1", "decodeCode_1", "decode", "scope", "decodeRegExp", "isAttribute", "isStrict", "replaceMatch_1", "replaceResult_1", "replaceLastIndex_1", "replaceInput_1", "decodeResult_1", "decodeEntityLastChar_2", "decodeResultByReference_2", "decodeSecondChar_2", "decodeCode_2", "LegacyFormat", "SerializationFormat", "omm_converter_exports", "__export", "csv", "fbs", "json", "kvn", "numCheck_default", "txt", "xml", "import_bignumber", "import_bignumber", "decimalAssumed", "value", "n", "bignumber", "dpAParse", "whatCentury", "digits", "tle_map", "tle_transform", "dpAParse", "value", "year", "whatCentury", "decimalAssumed", "tA", "v", "i", "dateString", "dateSeconds", "lineReader", "reader", "line", "rr", "utf8Decoder", "leRegex", "result", "value", "done", "startIndex", "remline", "remainder", "tle", "l0", "l1", "OBJECT_NAME", "_OMM", "_line", "i", "tt", "tle_map", "prop", "tp", "_tp", "tle_transform", "bignumber", "global$1", "lookup", "revLookup", "Arr", "inited", "init", "code", "i", "len", "toByteArray", "b64", "j", "l", "tmp", "placeHolders", "arr", "L", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "fromByteArray", "extraBytes", "parts", "maxChunkLength", "len2", "read", "buffer", "offset", "isLE", "mLen", "nBytes", "e", "m", "eLen", "eMax", "eBias", "nBits", "d", "s", "write", "value", "c", "rt", "toString", "isArray", "INSPECT_MAX_BYTES", "Buffer", "kMaxLength", "createBuffer", "that", "length", "arg", "encodingOrOffset", "allocUnsafe", "from", "fromArrayBuffer", "fromString", "fromObject", "assertSize", "size", "alloc", "fill", "encoding", "checked", "string", "byteLength", "actual", "fromArrayLike", "array", "byteOffset", "obj", "internalIsBuffer", "isnan", "isBuffer", "b", "a", "x", "y", "list", "pos", "buf", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "str", "max", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "indexSize", "arrLength", "valLength", "foundIndex", "found", "hexWrite", "remaining", "strLen", "parsed", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "latin1Write", "base64Write", "ucs2Write", "utf16leToBytes", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "codePoints", "ret", "out", "toHex", "bytes", "newBuf", "sliceLen", "checkOffset", "ext", "noAssert", "mul", "checkInt", "min", "maxBytes", "objectWriteUInt16", "littleEndian", "objectWriteUInt32", "limit", "sub", "checkIEEE754", "writeFloat", "writeDouble", "targetStart", "INVALID_BASE64_RE", "base64clean", "stringtrim", "units", "leadSurrogate", "byteArray", "hi", "lo", "src", "dst", "isFastBuffer", "isSlowBuffer", "CsvError", "message", "options", "contexts", "context", "key", "is_object", "normalize_columns_array", "columns", "normalizedColumns", "column", "ResizeableBuffer", "np", "cr$1", "nl$1", "space", "tab", "init_state", "delimiter", "v", "underscore", "_", "match", "normalize_options", "opts", "opt", "date", "delimiter_json", "rd", "isRecordEmpty", "record", "field", "cr", "nl", "boms", "transform", "original_options", "info", "bufLen", "quote", "quoting", "needMoreDataSize", "recordDelimiterMaxLength", "numOfCharLeft", "requiredLength", "nextBuf", "push", "close", "bom", "from_line", "ltrim", "max_record_size", "raw", "relax_quotes", "rtrim", "skip_empty_lines", "to", "to_line", "comment", "escape", "record_delimiter", "bomSkipped", "previousBuf", "rawBuffer", "escapeIsQuote", "bomLength", "chr", "nextChr", "isNextChrTrimable", "isNextChrComment", "isNextChrDelimiter", "isNextChrRecordDelimiter", "err", "recordDelimiterLength", "errField", "errRecord", "delimiterLength", "lappend", "rappend", "group_columns_by_name", "relax_column_count", "relax_column_count_less", "relax_column_count_more", "skip_records_with_empty_values", "enabled", "recordLength", "finalErr", "objname", "extRecord", "firstLineToHeaders", "headers", "normalizedHeaders", "cast", "wasQuoting", "f", "on_record", "timchars", "loop1", "timchar", "sourceBuf", "targetBuf", "targetPos", "sourceLength", "ignore_last_delimiters", "del", "rdLength", "msg", "skip_records_with_error", "isColumns", "parse", "data", "records", "parser", "err1", "err2", "int32", "float32", "float64", "isLittleEndian", "Encoding", "ByteBuffer", "bytes_", "byte_size", "position", "offset", "int32", "float32", "isLittleEndian", "float64", "value", "result", "i", "bb_pos", "vtable_offset", "vtable", "t", "opt_encoding", "length", "Encoding", "codePoint", "a", "b", "c", "d", "o", "ident", "listAccessor", "listLength", "ret", "val", "Builder", "opt_initial_size", "initial_size", "ByteBuffer", "forceDefaults", "size", "additional_bytes", "align_size", "old_buf_size", "byte_size", "i", "value", "voffset", "defaultValue", "obj", "bb", "new_buf_size", "nbb", "offset", "numfields", "vtableloc", "trimmed_size", "standard_fields", "len", "existing_vtable", "vt1", "outer_loop", "vt2", "j", "root_table", "opt_file_identifier", "opt_size_prefix", "size_prefix", "file_identifier", "table", "field", "table_start", "vtable_start", "elem_size", "num_elems", "alignment", "s", "utf8", "codePoint", "a", "b", "bytes", "list", "ret", "val", "startFunc", "OMM", "i", "bb", "obj", "offset", "optionalEncoding", "builder", "CCSDS_OMM_VERS", "CREATION_DATEOffset", "ORIGINATOROffset", "OBJECT_NAMEOffset", "OBJECT_IDOffset", "CENTER_NAMEOffset", "REF_FRAME", "REF_FRAME_EPOCHOffset", "TIME_SYSTEM", "MEAN_ELEMENT_THEORY", "COMMENTOffset", "EPOCHOffset", "SEMI_MAJOR_AXIS", "MEAN_MOTION", "ECCENTRICITY", "INCLINATION", "RA_OF_ASC_NODE", "ARG_OF_PERICENTER", "MEAN_ANOMALY", "GM", "MASS", "SOLAR_RAD_AREA", "SOLAR_RAD_COEFF", "DRAG_AREA", "DRAG_COEFF", "EPHEMERIS_TYPE", "CLASSIFICATION_TYPEOffset", "NORAD_CAT_ID", "ELEMENT_SET_NO", "REV_AT_EPOCH", "BSTAR", "MEAN_MOTION_DOT", "MEAN_MOTION_DDOT", "COV_REF_FRAME", "CX_X", "CY_X", "CY_Y", "CZ_X", "CZ_Y", "CZ_Z", "CX_DOT_X", "CX_DOT_Y", "CX_DOT_Z", "CX_DOT_X_DOT", "CY_DOT_X", "CY_DOT_Y", "CY_DOT_Z", "CY_DOT_X_DOT", "CY_DOT_Y_DOT", "CZ_DOT_X", "CZ_DOT_Y", "CZ_DOT_Z", "CZ_DOT_X_DOT", "CZ_DOT_Y_DOT", "CZ_DOT_Z_DOT", "USER_DEFINED_BIP_0044_TYPE", "USER_DEFINED_OBJECT_DESIGNATOROffset", "USER_DEFINED_EARTH_MODELOffset", "USER_DEFINED_EPOCH_TIMESTAMP", "USER_DEFINED_MICROSECONDS", "OMMT", "_o", "CREATION_DATE", "ORIGINATOR", "OBJECT_NAME", "OBJECT_ID", "CENTER_NAME", "REF_FRAME_EPOCH", "COMMENT", "EPOCH", "CLASSIFICATION_TYPE", "USER_DEFINED_OBJECT_DESIGNATOR", "USER_DEFINED_EARTH_MODEL", "OMMCOLLECTION", "i", "bb", "obj", "index", "offset", "OMM", "builder", "RECORDSOffset", "data", "numElems", "OMMCOLLECTIONT", "_o", "RECORDS", "import_html_entities", "flatbuffer_scalartypes_default", "useAsNumber", "numCheck", "schema", "pkey", "pval", "sD", "pF", "isZero", "flatbuffer_scalartypes_default", "numCheck_default", "tagTemplate", "tagName", "xml", "input", "schema", "resultsOMMCOLLECTION", "OMMCOLLECTIONT", "xmlOMMArray", "schemaTags", "x", "iOMM", "s", "tagMatch", "t", "numCheck_default", "json", "p", "csv", "parse", "row", "newOMM", "OMMT", "prop", "txt", "resolve", "isRStream", "tles", "tle", "started", "init", "kvn", "lines", "_OMM", "i", "predicate", "value", "fbs", "ommcollection", "OMMCOLLECTION", "ByteBuffer", "sat_converter_exports", "__export", "csv", "fbs", "json", "numCheck_default", "SATCAT", "i", "bb", "obj", "optionalEncoding", "offset", "builder", "OBJECT_NAMEOffset", "OBJECT_IDOffset", "NORAD_CAT_ID", "OBJECT_TYPE", "OPS_STATUS_CODE", "OWNEROffset", "LAUNCH_DATEOffset", "LAUNCH_SITEOffset", "DECAY_DATEOffset", "PERIOD", "INCLINATION", "APOGEE", "PERIGEE", "RCS", "DATA_STATUS_CODE", "ORBIT_CENTEROffset", "ORBIT_TYPE", "SATCATT", "_o", "OBJECT_NAME", "OBJECT_ID", "OWNER", "LAUNCH_DATE", "LAUNCH_SITE", "DECAY_DATE", "ORBIT_CENTER", "SATCATCOLLECTION", "i", "bb", "obj", "index", "offset", "SATCAT", "builder", "RECORDSOffset", "data", "numElems", "SATCATCOLLECTIONT", "_o", "RECORDS", "json", "input", "schema", "resultsSATCATCOLLECTION", "SATCATCOLLECTIONT", "i", "newSAT", "SATCATT", "p", "inputSat", "numCheck_default", "csv", "parse", "row", "prop", "fbs", "satCollection", "SATCATCOLLECTION", "ByteBuffer", "omm_schema_default", "sat_schema_default", "parse", "data", "format", "serialization", "resultSerialization", "sFormat", "SerializationFormat", "ommCollection", "omm_converter_exports", "omm_schema_default", "flatBufferBuilder", "Builder", "satCollection", "sat_converter_exports", "sat_schema_default", "schemas", "version"]
}
